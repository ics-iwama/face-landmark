function P3(n,e){for(var t=0;t<e.length;t++){const r=e[t];if(typeof r!="string"&&!Array.isArray(r)){for(const i in r)if(i!=="default"&&!(i in n)){const s=Object.getOwnPropertyDescriptor(r,i);s&&Object.defineProperty(n,i,s.get?s:{enumerable:!0,get:()=>r[i]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))r(i);new MutationObserver(i=>{for(const s of i)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&r(a)}).observe(document,{childList:!0,subtree:!0});function t(i){const s={};return i.integrity&&(s.integrity=i.integrity),i.referrerPolicy&&(s.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?s.credentials="include":i.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function r(i){if(i.ep)return;i.ep=!0;const s=t(i);fetch(i.href,s)}})();/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Dd="165",O3=0,$f=1,$3=2,Tg=1,L3=2,Ii=3,gs=0,pr=1,di=2,us=0,eo=1,Lf=2,kf=3,Ff=4,k3=5,Ws=100,F3=101,U3=102,B3=103,V3=104,z3=200,G3=201,W3=202,H3=203,Dh=204,Ph=205,X3=206,j3=207,q3=208,K3=209,Y3=210,Z3=211,J3=212,Q3=213,e_=214,t_=0,n_=1,r_=2,Ml=3,i_=4,s_=5,a_=6,o_=7,Cg=0,c_=1,l_=2,hs=0,u_=1,h_=2,d_=3,f_=4,p_=5,m_=6,g_=7,Ag=300,oo=301,co=302,Oh=303,$h=304,iu=306,Lh=1e3,Ys=1001,kh=1002,Ur=1003,x_=1004,Vc=1005,ni=1006,Iu=1007,Zs=1008,xs=1009,y_=1010,v_=1011,Il=1012,Rg=1013,lo=1014,os=1015,su=1016,Ng=1017,Mg=1018,uo=1020,__=35902,b_=1021,S_=1022,pi=1023,w_=1024,E_=1025,to=1026,ho=1027,T_=1028,Ig=1029,C_=1030,Dg=1031,Pg=1033,Du=33776,Pu=33777,Ou=33778,$u=33779,Uf=35840,Bf=35841,Vf=35842,zf=35843,Gf=36196,Wf=37492,Hf=37496,Xf=37808,jf=37809,qf=37810,Kf=37811,Yf=37812,Zf=37813,Jf=37814,Qf=37815,ep=37816,tp=37817,np=37818,rp=37819,ip=37820,sp=37821,Lu=36492,ap=36494,op=36495,A_=36283,cp=36284,lp=36285,up=36286,R_=3200,N_=3201,M_=0,I_=1,as="",Jr="srgb",Es="srgb-linear",Pd="display-p3",au="display-p3-linear",Dl="linear",un="srgb",Pl="rec709",Ol="p3",Ia=7680,hp=519,D_=512,P_=513,O_=514,Og=515,$_=516,L_=517,k_=518,F_=519,dp=35044,fp="300 es",$i=2e3,$l=2001;class So{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const r=this._listeners;r[e]===void 0&&(r[e]=[]),r[e].indexOf(t)===-1&&r[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const r=this._listeners;return r[e]!==void 0&&r[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const r=this._listeners[e.type];if(r!==void 0){e.target=this;const i=r.slice(0);for(let s=0,a=i.length;s<a;s++)i[s].call(this,e);e.target=null}}}const Wn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],ku=Math.PI/180,Fh=180/Math.PI;function wc(){const n=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,r=Math.random()*4294967295|0;return(Wn[n&255]+Wn[n>>8&255]+Wn[n>>16&255]+Wn[n>>24&255]+"-"+Wn[e&255]+Wn[e>>8&255]+"-"+Wn[e>>16&15|64]+Wn[e>>24&255]+"-"+Wn[t&63|128]+Wn[t>>8&255]+"-"+Wn[t>>16&255]+Wn[t>>24&255]+Wn[r&255]+Wn[r>>8&255]+Wn[r>>16&255]+Wn[r>>24&255]).toLowerCase()}function dr(n,e,t){return Math.max(e,Math.min(t,n))}function U_(n,e){return(n%e+e)%e}function Fu(n,e,t){return(1-t)*n+t*e}function jo(n,e){switch(e.constructor){case Float32Array:return n;case Uint32Array:return n/4294967295;case Uint16Array:return n/65535;case Uint8Array:return n/255;case Int32Array:return Math.max(n/2147483647,-1);case Int16Array:return Math.max(n/32767,-1);case Int8Array:return Math.max(n/127,-1);default:throw new Error("Invalid component type.")}}function cr(n,e){switch(e.constructor){case Float32Array:return n;case Uint32Array:return Math.round(n*4294967295);case Uint16Array:return Math.round(n*65535);case Uint8Array:return Math.round(n*255);case Int32Array:return Math.round(n*2147483647);case Int16Array:return Math.round(n*32767);case Int8Array:return Math.round(n*127);default:throw new Error("Invalid component type.")}}class Kt{constructor(e=0,t=0){Kt.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,r=this.y,i=e.elements;return this.x=i[0]*t+i[3]*r+i[6],this.y=i[1]*t+i[4]*r+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const r=this.dot(e)/t;return Math.acos(dr(r,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,r=this.y-e.y;return t*t+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const r=Math.cos(t),i=Math.sin(t),s=this.x-e.x,a=this.y-e.y;return this.x=s*r-a*i+e.x,this.y=s*i+a*r+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Pt{constructor(e,t,r,i,s,a,o,c,l){Pt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,r,i,s,a,o,c,l)}set(e,t,r,i,s,a,o,c,l){const u=this.elements;return u[0]=e,u[1]=i,u[2]=o,u[3]=t,u[4]=s,u[5]=c,u[6]=r,u[7]=a,u[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,r=e.elements;return t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t[4]=r[4],t[5]=r[5],t[6]=r[6],t[7]=r[7],t[8]=r[8],this}extractBasis(e,t,r){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),r.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const r=e.elements,i=t.elements,s=this.elements,a=r[0],o=r[3],c=r[6],l=r[1],u=r[4],h=r[7],d=r[2],f=r[5],p=r[8],x=i[0],g=i[3],m=i[6],_=i[1],b=i[4],w=i[7],I=i[2],M=i[5],D=i[8];return s[0]=a*x+o*_+c*I,s[3]=a*g+o*b+c*M,s[6]=a*m+o*w+c*D,s[1]=l*x+u*_+h*I,s[4]=l*g+u*b+h*M,s[7]=l*m+u*w+h*D,s[2]=d*x+f*_+p*I,s[5]=d*g+f*b+p*M,s[8]=d*m+f*w+p*D,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],r=e[1],i=e[2],s=e[3],a=e[4],o=e[5],c=e[6],l=e[7],u=e[8];return t*a*u-t*o*l-r*s*u+r*o*c+i*s*l-i*a*c}invert(){const e=this.elements,t=e[0],r=e[1],i=e[2],s=e[3],a=e[4],o=e[5],c=e[6],l=e[7],u=e[8],h=u*a-o*l,d=o*c-u*s,f=l*s-a*c,p=t*h+r*d+i*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const x=1/p;return e[0]=h*x,e[1]=(i*l-u*r)*x,e[2]=(o*r-i*a)*x,e[3]=d*x,e[4]=(u*t-i*c)*x,e[5]=(i*s-o*t)*x,e[6]=f*x,e[7]=(r*c-l*t)*x,e[8]=(a*t-r*s)*x,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,r,i,s,a,o){const c=Math.cos(s),l=Math.sin(s);return this.set(r*c,r*l,-r*(c*a+l*o)+a+e,-i*l,i*c,-i*(-l*a+c*o)+o+t,0,0,1),this}scale(e,t){return this.premultiply(Uu.makeScale(e,t)),this}rotate(e){return this.premultiply(Uu.makeRotation(-e)),this}translate(e,t){return this.premultiply(Uu.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),r=Math.sin(e);return this.set(t,-r,0,r,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,r=e.elements;for(let i=0;i<9;i++)if(t[i]!==r[i])return!1;return!0}fromArray(e,t=0){for(let r=0;r<9;r++)this.elements[r]=e[r+t];return this}toArray(e=[],t=0){const r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const Uu=new Pt;function $g(n){for(let e=n.length-1;e>=0;--e)if(n[e]>=65535)return!0;return!1}function uc(n){return document.createElementNS("http://www.w3.org/1999/xhtml",n)}function B_(){const n=uc("canvas");return n.style.display="block",n}const pp={};function Lg(n){n in pp||(pp[n]=!0,console.warn(n))}function V_(n,e,t){return new Promise(function(r,i){function s(){switch(n.clientWaitSync(e,n.SYNC_FLUSH_COMMANDS_BIT,0)){case n.WAIT_FAILED:i();break;case n.TIMEOUT_EXPIRED:setTimeout(s,t);break;default:r()}}setTimeout(s,t)})}const mp=new Pt().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),gp=new Pt().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),zc={[Es]:{transfer:Dl,primaries:Pl,toReference:n=>n,fromReference:n=>n},[Jr]:{transfer:un,primaries:Pl,toReference:n=>n.convertSRGBToLinear(),fromReference:n=>n.convertLinearToSRGB()},[au]:{transfer:Dl,primaries:Ol,toReference:n=>n.applyMatrix3(gp),fromReference:n=>n.applyMatrix3(mp)},[Pd]:{transfer:un,primaries:Ol,toReference:n=>n.convertSRGBToLinear().applyMatrix3(gp),fromReference:n=>n.applyMatrix3(mp).convertLinearToSRGB()}},z_=new Set([Es,au]),Yt={enabled:!0,_workingColorSpace:Es,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(n){if(!z_.has(n))throw new Error(`Unsupported working color space, "${n}".`);this._workingColorSpace=n},convert:function(n,e,t){if(this.enabled===!1||e===t||!e||!t)return n;const r=zc[e].toReference,i=zc[t].fromReference;return i(r(n))},fromWorkingColorSpace:function(n,e){return this.convert(n,this._workingColorSpace,e)},toWorkingColorSpace:function(n,e){return this.convert(n,e,this._workingColorSpace)},getPrimaries:function(n){return zc[n].primaries},getTransfer:function(n){return n===as?Dl:zc[n].transfer}};function no(n){return n<.04045?n*.0773993808:Math.pow(n*.9478672986+.0521327014,2.4)}function Bu(n){return n<.0031308?n*12.92:1.055*Math.pow(n,.41666)-.055}let Da;class G_{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Da===void 0&&(Da=uc("canvas")),Da.width=e.width,Da.height=e.height;const r=Da.getContext("2d");e instanceof ImageData?r.putImageData(e,0,0):r.drawImage(e,0,0,e.width,e.height),t=Da}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=uc("canvas");t.width=e.width,t.height=e.height;const r=t.getContext("2d");r.drawImage(e,0,0,e.width,e.height);const i=r.getImageData(0,0,e.width,e.height),s=i.data;for(let a=0;a<s.length;a++)s[a]=no(s[a]/255)*255;return r.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let r=0;r<t.length;r++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[r]=Math.floor(no(t[r]/255)*255):t[r]=no(t[r]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let W_=0;class kg{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:W_++}),this.uuid=wc(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const r={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let a=0,o=i.length;a<o;a++)i[a].isDataTexture?s.push(Vu(i[a].image)):s.push(Vu(i[a]))}else s=Vu(i);r.url=s}return t||(e.images[this.uuid]=r),r}}function Vu(n){return typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&n instanceof ImageBitmap?G_.getDataURL(n):n.data?{data:Array.from(n.data),width:n.width,height:n.height,type:n.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let H_=0;class tr extends So{constructor(e=tr.DEFAULT_IMAGE,t=tr.DEFAULT_MAPPING,r=Ys,i=Ys,s=ni,a=Zs,o=pi,c=xs,l=tr.DEFAULT_ANISOTROPY,u=as){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:H_++}),this.uuid=wc(),this.name="",this.source=new kg(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=r,this.wrapT=i,this.magFilter=s,this.minFilter=a,this.anisotropy=l,this.format=o,this.internalFormat=null,this.type=c,this.offset=new Kt(0,0),this.repeat=new Kt(1,1),this.center=new Kt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Pt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=u,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const r={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(r.userData=this.userData),t||(e.textures[this.uuid]=r),r}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Ag)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Lh:e.x=e.x-Math.floor(e.x);break;case Ys:e.x=e.x<0?0:1;break;case kh:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Lh:e.y=e.y-Math.floor(e.y);break;case Ys:e.y=e.y<0?0:1;break;case kh:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}tr.DEFAULT_IMAGE=null;tr.DEFAULT_MAPPING=Ag;tr.DEFAULT_ANISOTROPY=1;class Vn{constructor(e=0,t=0,r=0,i=1){Vn.prototype.isVector4=!0,this.x=e,this.y=t,this.z=r,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,r,i){return this.x=e,this.y=t,this.z=r,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,r=this.y,i=this.z,s=this.w,a=e.elements;return this.x=a[0]*t+a[4]*r+a[8]*i+a[12]*s,this.y=a[1]*t+a[5]*r+a[9]*i+a[13]*s,this.z=a[2]*t+a[6]*r+a[10]*i+a[14]*s,this.w=a[3]*t+a[7]*r+a[11]*i+a[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,r,i,s;const c=e.elements,l=c[0],u=c[4],h=c[8],d=c[1],f=c[5],p=c[9],x=c[2],g=c[6],m=c[10];if(Math.abs(u-d)<.01&&Math.abs(h-x)<.01&&Math.abs(p-g)<.01){if(Math.abs(u+d)<.1&&Math.abs(h+x)<.1&&Math.abs(p+g)<.1&&Math.abs(l+f+m-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const b=(l+1)/2,w=(f+1)/2,I=(m+1)/2,M=(u+d)/4,D=(h+x)/4,F=(p+g)/4;return b>w&&b>I?b<.01?(r=0,i=.707106781,s=.707106781):(r=Math.sqrt(b),i=M/r,s=D/r):w>I?w<.01?(r=.707106781,i=0,s=.707106781):(i=Math.sqrt(w),r=M/i,s=F/i):I<.01?(r=.707106781,i=.707106781,s=0):(s=Math.sqrt(I),r=D/s,i=F/s),this.set(r,i,s,t),this}let _=Math.sqrt((g-p)*(g-p)+(h-x)*(h-x)+(d-u)*(d-u));return Math.abs(_)<.001&&(_=1),this.x=(g-p)/_,this.y=(h-x)/_,this.z=(d-u)/_,this.w=Math.acos((l+f+m-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this.z=e.z+(t.z-e.z)*r,this.w=e.w+(t.w-e.w)*r,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class X_ extends So{constructor(e=1,t=1,r={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Vn(0,0,e,t),this.scissorTest=!1,this.viewport=new Vn(0,0,e,t);const i={width:e,height:t,depth:1};r=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:ni,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},r);const s=new tr(i,r.mapping,r.wrapS,r.wrapT,r.magFilter,r.minFilter,r.format,r.type,r.anisotropy,r.colorSpace);s.flipY=!1,s.generateMipmaps=r.generateMipmaps,s.internalFormat=r.internalFormat,this.textures=[];const a=r.count;for(let o=0;o<a;o++)this.textures[o]=s.clone(),this.textures[o].isRenderTargetTexture=!0;this.depthBuffer=r.depthBuffer,this.stencilBuffer=r.stencilBuffer,this.resolveDepthBuffer=r.resolveDepthBuffer,this.resolveStencilBuffer=r.resolveStencilBuffer,this.depthTexture=r.depthTexture,this.samples=r.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}setSize(e,t,r=1){if(this.width!==e||this.height!==t||this.depth!==r){this.width=e,this.height=t,this.depth=r;for(let i=0,s=this.textures.length;i<s;i++)this.textures[i].image.width=e,this.textures[i].image.height=t,this.textures[i].image.depth=r;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let r=0,i=e.textures.length;r<i;r++)this.textures[r]=e.textures[r].clone(),this.textures[r].isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new kg(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class sa extends X_{constructor(e=1,t=1,r={}){super(e,t,r),this.isWebGLRenderTarget=!0}}class Fg extends tr{constructor(e=null,t=1,r=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:r,depth:i},this.magFilter=Ur,this.minFilter=Ur,this.wrapR=Ys,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class j_ extends tr{constructor(e=null,t=1,r=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:r,depth:i},this.magFilter=Ur,this.minFilter=Ur,this.wrapR=Ys,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class wo{constructor(e=0,t=0,r=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=r,this._w=i}static slerpFlat(e,t,r,i,s,a,o){let c=r[i+0],l=r[i+1],u=r[i+2],h=r[i+3];const d=s[a+0],f=s[a+1],p=s[a+2],x=s[a+3];if(o===0){e[t+0]=c,e[t+1]=l,e[t+2]=u,e[t+3]=h;return}if(o===1){e[t+0]=d,e[t+1]=f,e[t+2]=p,e[t+3]=x;return}if(h!==x||c!==d||l!==f||u!==p){let g=1-o;const m=c*d+l*f+u*p+h*x,_=m>=0?1:-1,b=1-m*m;if(b>Number.EPSILON){const I=Math.sqrt(b),M=Math.atan2(I,m*_);g=Math.sin(g*M)/I,o=Math.sin(o*M)/I}const w=o*_;if(c=c*g+d*w,l=l*g+f*w,u=u*g+p*w,h=h*g+x*w,g===1-o){const I=1/Math.sqrt(c*c+l*l+u*u+h*h);c*=I,l*=I,u*=I,h*=I}}e[t]=c,e[t+1]=l,e[t+2]=u,e[t+3]=h}static multiplyQuaternionsFlat(e,t,r,i,s,a){const o=r[i],c=r[i+1],l=r[i+2],u=r[i+3],h=s[a],d=s[a+1],f=s[a+2],p=s[a+3];return e[t]=o*p+u*h+c*f-l*d,e[t+1]=c*p+u*d+l*h-o*f,e[t+2]=l*p+u*f+o*d-c*h,e[t+3]=u*p-o*h-c*d-l*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,r,i){return this._x=e,this._y=t,this._z=r,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const r=e._x,i=e._y,s=e._z,a=e._order,o=Math.cos,c=Math.sin,l=o(r/2),u=o(i/2),h=o(s/2),d=c(r/2),f=c(i/2),p=c(s/2);switch(a){case"XYZ":this._x=d*u*h+l*f*p,this._y=l*f*h-d*u*p,this._z=l*u*p+d*f*h,this._w=l*u*h-d*f*p;break;case"YXZ":this._x=d*u*h+l*f*p,this._y=l*f*h-d*u*p,this._z=l*u*p-d*f*h,this._w=l*u*h+d*f*p;break;case"ZXY":this._x=d*u*h-l*f*p,this._y=l*f*h+d*u*p,this._z=l*u*p+d*f*h,this._w=l*u*h-d*f*p;break;case"ZYX":this._x=d*u*h-l*f*p,this._y=l*f*h+d*u*p,this._z=l*u*p-d*f*h,this._w=l*u*h+d*f*p;break;case"YZX":this._x=d*u*h+l*f*p,this._y=l*f*h+d*u*p,this._z=l*u*p-d*f*h,this._w=l*u*h-d*f*p;break;case"XZY":this._x=d*u*h-l*f*p,this._y=l*f*h-d*u*p,this._z=l*u*p+d*f*h,this._w=l*u*h+d*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const r=t/2,i=Math.sin(r);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(r),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,r=t[0],i=t[4],s=t[8],a=t[1],o=t[5],c=t[9],l=t[2],u=t[6],h=t[10],d=r+o+h;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(u-c)*f,this._y=(s-l)*f,this._z=(a-i)*f}else if(r>o&&r>h){const f=2*Math.sqrt(1+r-o-h);this._w=(u-c)/f,this._x=.25*f,this._y=(i+a)/f,this._z=(s+l)/f}else if(o>h){const f=2*Math.sqrt(1+o-r-h);this._w=(s-l)/f,this._x=(i+a)/f,this._y=.25*f,this._z=(c+u)/f}else{const f=2*Math.sqrt(1+h-r-o);this._w=(a-i)/f,this._x=(s+l)/f,this._y=(c+u)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let r=e.dot(t)+1;return r<Number.EPSILON?(r=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=r):(this._x=0,this._y=-e.z,this._z=e.y,this._w=r)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=r),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(dr(this.dot(e),-1,1)))}rotateTowards(e,t){const r=this.angleTo(e);if(r===0)return this;const i=Math.min(1,t/r);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const r=e._x,i=e._y,s=e._z,a=e._w,o=t._x,c=t._y,l=t._z,u=t._w;return this._x=r*u+a*o+i*l-s*c,this._y=i*u+a*c+s*o-r*l,this._z=s*u+a*l+r*c-i*o,this._w=a*u-r*o-i*c-s*l,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const r=this._x,i=this._y,s=this._z,a=this._w;let o=a*e._w+r*e._x+i*e._y+s*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=r,this._y=i,this._z=s,this;const c=1-o*o;if(c<=Number.EPSILON){const f=1-t;return this._w=f*a+t*this._w,this._x=f*r+t*this._x,this._y=f*i+t*this._y,this._z=f*s+t*this._z,this.normalize(),this}const l=Math.sqrt(c),u=Math.atan2(l,o),h=Math.sin((1-t)*u)/l,d=Math.sin(t*u)/l;return this._w=a*h+this._w*d,this._x=r*h+this._x*d,this._y=i*h+this._y*d,this._z=s*h+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,r){return this.copy(e).slerp(t,r)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),r=Math.random(),i=Math.sqrt(1-r),s=Math.sqrt(r);return this.set(i*Math.sin(e),i*Math.cos(e),s*Math.sin(t),s*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class ue{constructor(e=0,t=0,r=0){ue.prototype.isVector3=!0,this.x=e,this.y=t,this.z=r}set(e,t,r){return r===void 0&&(r=this.z),this.x=e,this.y=t,this.z=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(xp.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(xp.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,r=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*r+s[6]*i,this.y=s[1]*t+s[4]*r+s[7]*i,this.z=s[2]*t+s[5]*r+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,r=this.y,i=this.z,s=e.elements,a=1/(s[3]*t+s[7]*r+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*r+s[8]*i+s[12])*a,this.y=(s[1]*t+s[5]*r+s[9]*i+s[13])*a,this.z=(s[2]*t+s[6]*r+s[10]*i+s[14])*a,this}applyQuaternion(e){const t=this.x,r=this.y,i=this.z,s=e.x,a=e.y,o=e.z,c=e.w,l=2*(a*i-o*r),u=2*(o*t-s*i),h=2*(s*r-a*t);return this.x=t+c*l+a*h-o*u,this.y=r+c*u+o*l-s*h,this.z=i+c*h+s*u-a*l,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,r=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*r+s[8]*i,this.y=s[1]*t+s[5]*r+s[9]*i,this.z=s[2]*t+s[6]*r+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this.z=e.z+(t.z-e.z)*r,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const r=e.x,i=e.y,s=e.z,a=t.x,o=t.y,c=t.z;return this.x=i*c-s*o,this.y=s*a-r*c,this.z=r*o-i*a,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const r=e.dot(this)/t;return this.copy(e).multiplyScalar(r)}projectOnPlane(e){return zu.copy(this).projectOnVector(e),this.sub(zu)}reflect(e){return this.sub(zu.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const r=this.dot(e)/t;return Math.acos(dr(r,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,r=this.y-e.y,i=this.z-e.z;return t*t+r*r+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,r){const i=Math.sin(t)*e;return this.x=i*Math.sin(r),this.y=Math.cos(t)*e,this.z=i*Math.cos(r),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,r){return this.x=e*Math.sin(t),this.y=r,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),r=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=r,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,r=Math.sqrt(1-t*t);return this.x=r*Math.cos(e),this.y=t,this.z=r*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const zu=new ue,xp=new wo;class Ec{constructor(e=new ue(1/0,1/0,1/0),t=new ue(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,r=e.length;t<r;t+=3)this.expandByPoint(Kr.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,r=e.count;t<r;t++)this.expandByPoint(Kr.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,r=e.length;t<r;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const r=Kr.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(r),this.max.copy(e).add(r),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const r=e.geometry;if(r!==void 0){const s=r.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let a=0,o=s.count;a<o;a++)e.isMesh===!0?e.getVertexPosition(a,Kr):Kr.fromBufferAttribute(s,a),Kr.applyMatrix4(e.matrixWorld),this.expandByPoint(Kr);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),Gc.copy(e.boundingBox)):(r.boundingBox===null&&r.computeBoundingBox(),Gc.copy(r.boundingBox)),Gc.applyMatrix4(e.matrixWorld),this.union(Gc)}const i=e.children;for(let s=0,a=i.length;s<a;s++)this.expandByObject(i[s],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Kr),Kr.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,r;return e.normal.x>0?(t=e.normal.x*this.min.x,r=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,r=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,r+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,r+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,r+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,r+=e.normal.z*this.min.z),t<=-e.constant&&r>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(qo),Wc.subVectors(this.max,qo),Pa.subVectors(e.a,qo),Oa.subVectors(e.b,qo),$a.subVectors(e.c,qo),Zi.subVectors(Oa,Pa),Ji.subVectors($a,Oa),Ds.subVectors(Pa,$a);let t=[0,-Zi.z,Zi.y,0,-Ji.z,Ji.y,0,-Ds.z,Ds.y,Zi.z,0,-Zi.x,Ji.z,0,-Ji.x,Ds.z,0,-Ds.x,-Zi.y,Zi.x,0,-Ji.y,Ji.x,0,-Ds.y,Ds.x,0];return!Gu(t,Pa,Oa,$a,Wc)||(t=[1,0,0,0,1,0,0,0,1],!Gu(t,Pa,Oa,$a,Wc))?!1:(Hc.crossVectors(Zi,Ji),t=[Hc.x,Hc.y,Hc.z],Gu(t,Pa,Oa,$a,Wc))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Kr).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Kr).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Ci[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Ci[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Ci[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Ci[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Ci[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Ci[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Ci[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Ci[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Ci),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Ci=[new ue,new ue,new ue,new ue,new ue,new ue,new ue,new ue],Kr=new ue,Gc=new Ec,Pa=new ue,Oa=new ue,$a=new ue,Zi=new ue,Ji=new ue,Ds=new ue,qo=new ue,Wc=new ue,Hc=new ue,Ps=new ue;function Gu(n,e,t,r,i){for(let s=0,a=n.length-3;s<=a;s+=3){Ps.fromArray(n,s);const o=i.x*Math.abs(Ps.x)+i.y*Math.abs(Ps.y)+i.z*Math.abs(Ps.z),c=e.dot(Ps),l=t.dot(Ps),u=r.dot(Ps);if(Math.max(-Math.max(c,l,u),Math.min(c,l,u))>o)return!1}return!0}const q_=new Ec,Ko=new ue,Wu=new ue;class Od{constructor(e=new ue,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const r=this.center;t!==void 0?r.copy(t):q_.setFromPoints(e).getCenter(r);let i=0;for(let s=0,a=e.length;s<a;s++)i=Math.max(i,r.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const r=this.center.distanceToSquared(e);return t.copy(e),r>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Ko.subVectors(e,this.center);const t=Ko.lengthSq();if(t>this.radius*this.radius){const r=Math.sqrt(t),i=(r-this.radius)*.5;this.center.addScaledVector(Ko,i/r),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Wu.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Ko.copy(e.center).add(Wu)),this.expandByPoint(Ko.copy(e.center).sub(Wu))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Ai=new ue,Hu=new ue,Xc=new ue,Qi=new ue,Xu=new ue,jc=new ue,ju=new ue;class K_{constructor(e=new ue,t=new ue(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Ai)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const r=t.dot(this.direction);return r<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,r)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Ai.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Ai.copy(this.origin).addScaledVector(this.direction,t),Ai.distanceToSquared(e))}distanceSqToSegment(e,t,r,i){Hu.copy(e).add(t).multiplyScalar(.5),Xc.copy(t).sub(e).normalize(),Qi.copy(this.origin).sub(Hu);const s=e.distanceTo(t)*.5,a=-this.direction.dot(Xc),o=Qi.dot(this.direction),c=-Qi.dot(Xc),l=Qi.lengthSq(),u=Math.abs(1-a*a);let h,d,f,p;if(u>0)if(h=a*c-o,d=a*o-c,p=s*u,h>=0)if(d>=-p)if(d<=p){const x=1/u;h*=x,d*=x,f=h*(h+a*d+2*o)+d*(a*h+d+2*c)+l}else d=s,h=Math.max(0,-(a*d+o)),f=-h*h+d*(d+2*c)+l;else d=-s,h=Math.max(0,-(a*d+o)),f=-h*h+d*(d+2*c)+l;else d<=-p?(h=Math.max(0,-(-a*s+o)),d=h>0?-s:Math.min(Math.max(-s,-c),s),f=-h*h+d*(d+2*c)+l):d<=p?(h=0,d=Math.min(Math.max(-s,-c),s),f=d*(d+2*c)+l):(h=Math.max(0,-(a*s+o)),d=h>0?s:Math.min(Math.max(-s,-c),s),f=-h*h+d*(d+2*c)+l);else d=a>0?-s:s,h=Math.max(0,-(a*d+o)),f=-h*h+d*(d+2*c)+l;return r&&r.copy(this.origin).addScaledVector(this.direction,h),i&&i.copy(Hu).addScaledVector(Xc,d),f}intersectSphere(e,t){Ai.subVectors(e.center,this.origin);const r=Ai.dot(this.direction),i=Ai.dot(Ai)-r*r,s=e.radius*e.radius;if(i>s)return null;const a=Math.sqrt(s-i),o=r-a,c=r+a;return c<0?null:o<0?this.at(c,t):this.at(o,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const r=-(this.origin.dot(e.normal)+e.constant)/t;return r>=0?r:null}intersectPlane(e,t){const r=this.distanceToPlane(e);return r===null?null:this.at(r,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let r,i,s,a,o,c;const l=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,d=this.origin;return l>=0?(r=(e.min.x-d.x)*l,i=(e.max.x-d.x)*l):(r=(e.max.x-d.x)*l,i=(e.min.x-d.x)*l),u>=0?(s=(e.min.y-d.y)*u,a=(e.max.y-d.y)*u):(s=(e.max.y-d.y)*u,a=(e.min.y-d.y)*u),r>a||s>i||((s>r||isNaN(r))&&(r=s),(a<i||isNaN(i))&&(i=a),h>=0?(o=(e.min.z-d.z)*h,c=(e.max.z-d.z)*h):(o=(e.max.z-d.z)*h,c=(e.min.z-d.z)*h),r>c||o>i)||((o>r||r!==r)&&(r=o),(c<i||i!==i)&&(i=c),i<0)?null:this.at(r>=0?r:i,t)}intersectsBox(e){return this.intersectBox(e,Ai)!==null}intersectTriangle(e,t,r,i,s){Xu.subVectors(t,e),jc.subVectors(r,e),ju.crossVectors(Xu,jc);let a=this.direction.dot(ju),o;if(a>0){if(i)return null;o=1}else if(a<0)o=-1,a=-a;else return null;Qi.subVectors(this.origin,e);const c=o*this.direction.dot(jc.crossVectors(Qi,jc));if(c<0)return null;const l=o*this.direction.dot(Xu.cross(Qi));if(l<0||c+l>a)return null;const u=-o*Qi.dot(ju);return u<0?null:this.at(u/a,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Tn{constructor(e,t,r,i,s,a,o,c,l,u,h,d,f,p,x,g){Tn.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,r,i,s,a,o,c,l,u,h,d,f,p,x,g)}set(e,t,r,i,s,a,o,c,l,u,h,d,f,p,x,g){const m=this.elements;return m[0]=e,m[4]=t,m[8]=r,m[12]=i,m[1]=s,m[5]=a,m[9]=o,m[13]=c,m[2]=l,m[6]=u,m[10]=h,m[14]=d,m[3]=f,m[7]=p,m[11]=x,m[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Tn().fromArray(this.elements)}copy(e){const t=this.elements,r=e.elements;return t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t[4]=r[4],t[5]=r[5],t[6]=r[6],t[7]=r[7],t[8]=r[8],t[9]=r[9],t[10]=r[10],t[11]=r[11],t[12]=r[12],t[13]=r[13],t[14]=r[14],t[15]=r[15],this}copyPosition(e){const t=this.elements,r=e.elements;return t[12]=r[12],t[13]=r[13],t[14]=r[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,r){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),r.setFromMatrixColumn(this,2),this}makeBasis(e,t,r){return this.set(e.x,t.x,r.x,0,e.y,t.y,r.y,0,e.z,t.z,r.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,r=e.elements,i=1/La.setFromMatrixColumn(e,0).length(),s=1/La.setFromMatrixColumn(e,1).length(),a=1/La.setFromMatrixColumn(e,2).length();return t[0]=r[0]*i,t[1]=r[1]*i,t[2]=r[2]*i,t[3]=0,t[4]=r[4]*s,t[5]=r[5]*s,t[6]=r[6]*s,t[7]=0,t[8]=r[8]*a,t[9]=r[9]*a,t[10]=r[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,r=e.x,i=e.y,s=e.z,a=Math.cos(r),o=Math.sin(r),c=Math.cos(i),l=Math.sin(i),u=Math.cos(s),h=Math.sin(s);if(e.order==="XYZ"){const d=a*u,f=a*h,p=o*u,x=o*h;t[0]=c*u,t[4]=-c*h,t[8]=l,t[1]=f+p*l,t[5]=d-x*l,t[9]=-o*c,t[2]=x-d*l,t[6]=p+f*l,t[10]=a*c}else if(e.order==="YXZ"){const d=c*u,f=c*h,p=l*u,x=l*h;t[0]=d+x*o,t[4]=p*o-f,t[8]=a*l,t[1]=a*h,t[5]=a*u,t[9]=-o,t[2]=f*o-p,t[6]=x+d*o,t[10]=a*c}else if(e.order==="ZXY"){const d=c*u,f=c*h,p=l*u,x=l*h;t[0]=d-x*o,t[4]=-a*h,t[8]=p+f*o,t[1]=f+p*o,t[5]=a*u,t[9]=x-d*o,t[2]=-a*l,t[6]=o,t[10]=a*c}else if(e.order==="ZYX"){const d=a*u,f=a*h,p=o*u,x=o*h;t[0]=c*u,t[4]=p*l-f,t[8]=d*l+x,t[1]=c*h,t[5]=x*l+d,t[9]=f*l-p,t[2]=-l,t[6]=o*c,t[10]=a*c}else if(e.order==="YZX"){const d=a*c,f=a*l,p=o*c,x=o*l;t[0]=c*u,t[4]=x-d*h,t[8]=p*h+f,t[1]=h,t[5]=a*u,t[9]=-o*u,t[2]=-l*u,t[6]=f*h+p,t[10]=d-x*h}else if(e.order==="XZY"){const d=a*c,f=a*l,p=o*c,x=o*l;t[0]=c*u,t[4]=-h,t[8]=l*u,t[1]=d*h+x,t[5]=a*u,t[9]=f*h-p,t[2]=p*h-f,t[6]=o*u,t[10]=x*h+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Y_,e,Z_)}lookAt(e,t,r){const i=this.elements;return vr.subVectors(e,t),vr.lengthSq()===0&&(vr.z=1),vr.normalize(),es.crossVectors(r,vr),es.lengthSq()===0&&(Math.abs(r.z)===1?vr.x+=1e-4:vr.z+=1e-4,vr.normalize(),es.crossVectors(r,vr)),es.normalize(),qc.crossVectors(vr,es),i[0]=es.x,i[4]=qc.x,i[8]=vr.x,i[1]=es.y,i[5]=qc.y,i[9]=vr.y,i[2]=es.z,i[6]=qc.z,i[10]=vr.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const r=e.elements,i=t.elements,s=this.elements,a=r[0],o=r[4],c=r[8],l=r[12],u=r[1],h=r[5],d=r[9],f=r[13],p=r[2],x=r[6],g=r[10],m=r[14],_=r[3],b=r[7],w=r[11],I=r[15],M=i[0],D=i[4],F=i[8],N=i[12],A=i[1],B=i[5],J=i[9],Y=i[13],ae=i[2],le=i[6],he=i[10],de=i[14],oe=i[3],$e=i[7],He=i[11],ze=i[15];return s[0]=a*M+o*A+c*ae+l*oe,s[4]=a*D+o*B+c*le+l*$e,s[8]=a*F+o*J+c*he+l*He,s[12]=a*N+o*Y+c*de+l*ze,s[1]=u*M+h*A+d*ae+f*oe,s[5]=u*D+h*B+d*le+f*$e,s[9]=u*F+h*J+d*he+f*He,s[13]=u*N+h*Y+d*de+f*ze,s[2]=p*M+x*A+g*ae+m*oe,s[6]=p*D+x*B+g*le+m*$e,s[10]=p*F+x*J+g*he+m*He,s[14]=p*N+x*Y+g*de+m*ze,s[3]=_*M+b*A+w*ae+I*oe,s[7]=_*D+b*B+w*le+I*$e,s[11]=_*F+b*J+w*he+I*He,s[15]=_*N+b*Y+w*de+I*ze,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],r=e[4],i=e[8],s=e[12],a=e[1],o=e[5],c=e[9],l=e[13],u=e[2],h=e[6],d=e[10],f=e[14],p=e[3],x=e[7],g=e[11],m=e[15];return p*(+s*c*h-i*l*h-s*o*d+r*l*d+i*o*f-r*c*f)+x*(+t*c*f-t*l*d+s*a*d-i*a*f+i*l*u-s*c*u)+g*(+t*l*h-t*o*f-s*a*h+r*a*f+s*o*u-r*l*u)+m*(-i*o*u-t*c*h+t*o*d+i*a*h-r*a*d+r*c*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,r){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=r),this}invert(){const e=this.elements,t=e[0],r=e[1],i=e[2],s=e[3],a=e[4],o=e[5],c=e[6],l=e[7],u=e[8],h=e[9],d=e[10],f=e[11],p=e[12],x=e[13],g=e[14],m=e[15],_=h*g*l-x*d*l+x*c*f-o*g*f-h*c*m+o*d*m,b=p*d*l-u*g*l-p*c*f+a*g*f+u*c*m-a*d*m,w=u*x*l-p*h*l+p*o*f-a*x*f-u*o*m+a*h*m,I=p*h*c-u*x*c-p*o*d+a*x*d+u*o*g-a*h*g,M=t*_+r*b+i*w+s*I;if(M===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const D=1/M;return e[0]=_*D,e[1]=(x*d*s-h*g*s-x*i*f+r*g*f+h*i*m-r*d*m)*D,e[2]=(o*g*s-x*c*s+x*i*l-r*g*l-o*i*m+r*c*m)*D,e[3]=(h*c*s-o*d*s-h*i*l+r*d*l+o*i*f-r*c*f)*D,e[4]=b*D,e[5]=(u*g*s-p*d*s+p*i*f-t*g*f-u*i*m+t*d*m)*D,e[6]=(p*c*s-a*g*s-p*i*l+t*g*l+a*i*m-t*c*m)*D,e[7]=(a*d*s-u*c*s+u*i*l-t*d*l-a*i*f+t*c*f)*D,e[8]=w*D,e[9]=(p*h*s-u*x*s-p*r*f+t*x*f+u*r*m-t*h*m)*D,e[10]=(a*x*s-p*o*s+p*r*l-t*x*l-a*r*m+t*o*m)*D,e[11]=(u*o*s-a*h*s-u*r*l+t*h*l+a*r*f-t*o*f)*D,e[12]=I*D,e[13]=(u*x*i-p*h*i+p*r*d-t*x*d-u*r*g+t*h*g)*D,e[14]=(p*o*i-a*x*i-p*r*c+t*x*c+a*r*g-t*o*g)*D,e[15]=(a*h*i-u*o*i+u*r*c-t*h*c-a*r*d+t*o*d)*D,this}scale(e){const t=this.elements,r=e.x,i=e.y,s=e.z;return t[0]*=r,t[4]*=i,t[8]*=s,t[1]*=r,t[5]*=i,t[9]*=s,t[2]*=r,t[6]*=i,t[10]*=s,t[3]*=r,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],r=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,r,i))}makeTranslation(e,t,r){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,r,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),r=Math.sin(e);return this.set(1,0,0,0,0,t,-r,0,0,r,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),r=Math.sin(e);return this.set(t,0,r,0,0,1,0,0,-r,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),r=Math.sin(e);return this.set(t,-r,0,0,r,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const r=Math.cos(t),i=Math.sin(t),s=1-r,a=e.x,o=e.y,c=e.z,l=s*a,u=s*o;return this.set(l*a+r,l*o-i*c,l*c+i*o,0,l*o+i*c,u*o+r,u*c-i*a,0,l*c-i*o,u*c+i*a,s*c*c+r,0,0,0,0,1),this}makeScale(e,t,r){return this.set(e,0,0,0,0,t,0,0,0,0,r,0,0,0,0,1),this}makeShear(e,t,r,i,s,a){return this.set(1,r,s,0,e,1,a,0,t,i,1,0,0,0,0,1),this}compose(e,t,r){const i=this.elements,s=t._x,a=t._y,o=t._z,c=t._w,l=s+s,u=a+a,h=o+o,d=s*l,f=s*u,p=s*h,x=a*u,g=a*h,m=o*h,_=c*l,b=c*u,w=c*h,I=r.x,M=r.y,D=r.z;return i[0]=(1-(x+m))*I,i[1]=(f+w)*I,i[2]=(p-b)*I,i[3]=0,i[4]=(f-w)*M,i[5]=(1-(d+m))*M,i[6]=(g+_)*M,i[7]=0,i[8]=(p+b)*D,i[9]=(g-_)*D,i[10]=(1-(d+x))*D,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,r){const i=this.elements;let s=La.set(i[0],i[1],i[2]).length();const a=La.set(i[4],i[5],i[6]).length(),o=La.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],Yr.copy(this);const l=1/s,u=1/a,h=1/o;return Yr.elements[0]*=l,Yr.elements[1]*=l,Yr.elements[2]*=l,Yr.elements[4]*=u,Yr.elements[5]*=u,Yr.elements[6]*=u,Yr.elements[8]*=h,Yr.elements[9]*=h,Yr.elements[10]*=h,t.setFromRotationMatrix(Yr),r.x=s,r.y=a,r.z=o,this}makePerspective(e,t,r,i,s,a,o=$i){const c=this.elements,l=2*s/(t-e),u=2*s/(r-i),h=(t+e)/(t-e),d=(r+i)/(r-i);let f,p;if(o===$i)f=-(a+s)/(a-s),p=-2*a*s/(a-s);else if(o===$l)f=-a/(a-s),p=-a*s/(a-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);return c[0]=l,c[4]=0,c[8]=h,c[12]=0,c[1]=0,c[5]=u,c[9]=d,c[13]=0,c[2]=0,c[6]=0,c[10]=f,c[14]=p,c[3]=0,c[7]=0,c[11]=-1,c[15]=0,this}makeOrthographic(e,t,r,i,s,a,o=$i){const c=this.elements,l=1/(t-e),u=1/(r-i),h=1/(a-s),d=(t+e)*l,f=(r+i)*u;let p,x;if(o===$i)p=(a+s)*h,x=-2*h;else if(o===$l)p=s*h,x=-1*h;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);return c[0]=2*l,c[4]=0,c[8]=0,c[12]=-d,c[1]=0,c[5]=2*u,c[9]=0,c[13]=-f,c[2]=0,c[6]=0,c[10]=x,c[14]=-p,c[3]=0,c[7]=0,c[11]=0,c[15]=1,this}equals(e){const t=this.elements,r=e.elements;for(let i=0;i<16;i++)if(t[i]!==r[i])return!1;return!0}fromArray(e,t=0){for(let r=0;r<16;r++)this.elements[r]=e[r+t];return this}toArray(e=[],t=0){const r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e[t+9]=r[9],e[t+10]=r[10],e[t+11]=r[11],e[t+12]=r[12],e[t+13]=r[13],e[t+14]=r[14],e[t+15]=r[15],e}}const La=new ue,Yr=new Tn,Y_=new ue(0,0,0),Z_=new ue(1,1,1),es=new ue,qc=new ue,vr=new ue,yp=new Tn,vp=new wo;class Fi{constructor(e=0,t=0,r=0,i=Fi.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=r,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,r,i=this._order){return this._x=e,this._y=t,this._z=r,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,r=!0){const i=e.elements,s=i[0],a=i[4],o=i[8],c=i[1],l=i[5],u=i[9],h=i[2],d=i[6],f=i[10];switch(t){case"XYZ":this._y=Math.asin(dr(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-u,f),this._z=Math.atan2(-a,s)):(this._x=Math.atan2(d,l),this._z=0);break;case"YXZ":this._x=Math.asin(-dr(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(o,f),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-h,s),this._z=0);break;case"ZXY":this._x=Math.asin(dr(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-h,f),this._z=Math.atan2(-a,l)):(this._y=0,this._z=Math.atan2(c,s));break;case"ZYX":this._y=Math.asin(-dr(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(c,s)):(this._x=0,this._z=Math.atan2(-a,l));break;case"YZX":this._z=Math.asin(dr(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-u,l),this._y=Math.atan2(-h,s)):(this._x=0,this._y=Math.atan2(o,f));break;case"XZY":this._z=Math.asin(-dr(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(d,l),this._y=Math.atan2(o,s)):(this._x=Math.atan2(-u,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,r===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,r){return yp.makeRotationFromQuaternion(e),this.setFromRotationMatrix(yp,t,r)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return vp.setFromEuler(this),this.setFromQuaternion(vp,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Fi.DEFAULT_ORDER="XYZ";class Ug{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let J_=0;const _p=new ue,ka=new wo,Ri=new Tn,Kc=new ue,Yo=new ue,Q_=new ue,eb=new wo,bp=new ue(1,0,0),Sp=new ue(0,1,0),wp=new ue(0,0,1),Ep={type:"added"},tb={type:"removed"},Fa={type:"childadded",child:null},qu={type:"childremoved",child:null};class wr extends So{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:J_++}),this.uuid=wc(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=wr.DEFAULT_UP.clone();const e=new ue,t=new Fi,r=new wo,i=new ue(1,1,1);function s(){r.setFromEuler(t,!1)}function a(){t.setFromQuaternion(r,void 0,!1)}t._onChange(s),r._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:r},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Tn},normalMatrix:{value:new Pt}}),this.matrix=new Tn,this.matrixWorld=new Tn,this.matrixAutoUpdate=wr.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=wr.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Ug,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return ka.setFromAxisAngle(e,t),this.quaternion.multiply(ka),this}rotateOnWorldAxis(e,t){return ka.setFromAxisAngle(e,t),this.quaternion.premultiply(ka),this}rotateX(e){return this.rotateOnAxis(bp,e)}rotateY(e){return this.rotateOnAxis(Sp,e)}rotateZ(e){return this.rotateOnAxis(wp,e)}translateOnAxis(e,t){return _p.copy(e).applyQuaternion(this.quaternion),this.position.add(_p.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(bp,e)}translateY(e){return this.translateOnAxis(Sp,e)}translateZ(e){return this.translateOnAxis(wp,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Ri.copy(this.matrixWorld).invert())}lookAt(e,t,r){e.isVector3?Kc.copy(e):Kc.set(e,t,r);const i=this.parent;this.updateWorldMatrix(!0,!1),Yo.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ri.lookAt(Yo,Kc,this.up):Ri.lookAt(Kc,Yo,this.up),this.quaternion.setFromRotationMatrix(Ri),i&&(Ri.extractRotation(i.matrixWorld),ka.setFromRotationMatrix(Ri),this.quaternion.premultiply(ka.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(Ep),Fa.child=e,this.dispatchEvent(Fa),Fa.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let r=0;r<arguments.length;r++)this.remove(arguments[r]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(tb),qu.child=e,this.dispatchEvent(qu),qu.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Ri.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Ri.multiply(e.parent.matrixWorld)),e.applyMatrix4(Ri),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(Ep),Fa.child=e,this.dispatchEvent(Fa),Fa.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let r=0,i=this.children.length;r<i;r++){const a=this.children[r].getObjectByProperty(e,t);if(a!==void 0)return a}}getObjectsByProperty(e,t,r=[]){this[e]===t&&r.push(this);const i=this.children;for(let s=0,a=i.length;s<a;s++)i[s].getObjectsByProperty(e,t,r);return r}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Yo,e,Q_),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Yo,eb,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let r=0,i=t.length;r<i;r++)t[r].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let r=0,i=t.length;r<i;r++)t[r].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let r=0,i=t.length;r<i;r++){const s=t[r];(s.matrixWorldAutoUpdate===!0||e===!0)&&s.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const r=this.parent;if(e===!0&&r!==null&&r.matrixWorldAutoUpdate===!0&&r.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let s=0,a=i.length;s<a;s++){const o=i[s];o.matrixWorldAutoUpdate===!0&&o.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",r={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},r.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.visibility=this._visibility,i.active=this._active,i.bounds=this._bounds.map(o=>({boxInitialized:o.boxInitialized,boxMin:o.box.min.toArray(),boxMax:o.box.max.toArray(),sphereInitialized:o.sphereInitialized,sphereRadius:o.sphere.radius,sphereCenter:o.sphere.center.toArray()})),i.maxGeometryCount=this._maxGeometryCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.geometryCount=this._geometryCount,i.matricesTexture=this._matricesTexture.toJSON(e),this._colorsTexture!==null&&(i.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(i.boundingSphere={center:i.boundingSphere.center.toArray(),radius:i.boundingSphere.radius}),this.boundingBox!==null&&(i.boundingBox={min:i.boundingBox.min.toArray(),max:i.boundingBox.max.toArray()}));function s(o,c){return o[c.uuid]===void 0&&(o[c.uuid]=c.toJSON(e)),c.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const c=o.shapes;if(Array.isArray(c))for(let l=0,u=c.length;l<u;l++){const h=c[l];s(e.shapes,h)}else s(e.shapes,c)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let c=0,l=this.material.length;c<l;c++)o.push(s(e.materials,this.material[c]));i.material=o}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let o=0;o<this.children.length;o++)i.children.push(this.children[o].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let o=0;o<this.animations.length;o++){const c=this.animations[o];i.animations.push(s(e.animations,c))}}if(t){const o=a(e.geometries),c=a(e.materials),l=a(e.textures),u=a(e.images),h=a(e.shapes),d=a(e.skeletons),f=a(e.animations),p=a(e.nodes);o.length>0&&(r.geometries=o),c.length>0&&(r.materials=c),l.length>0&&(r.textures=l),u.length>0&&(r.images=u),h.length>0&&(r.shapes=h),d.length>0&&(r.skeletons=d),f.length>0&&(r.animations=f),p.length>0&&(r.nodes=p)}return r.object=i,r;function a(o){const c=[];for(const l in o){const u=o[l];delete u.metadata,c.push(u)}return c}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let r=0;r<e.children.length;r++){const i=e.children[r];this.add(i.clone())}return this}}wr.DEFAULT_UP=new ue(0,1,0);wr.DEFAULT_MATRIX_AUTO_UPDATE=!0;wr.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Zr=new ue,Ni=new ue,Ku=new ue,Mi=new ue,Ua=new ue,Ba=new ue,Tp=new ue,Yu=new ue,Zu=new ue,Ju=new ue;class fi{constructor(e=new ue,t=new ue,r=new ue){this.a=e,this.b=t,this.c=r}static getNormal(e,t,r,i){i.subVectors(r,t),Zr.subVectors(e,t),i.cross(Zr);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,r,i,s){Zr.subVectors(i,t),Ni.subVectors(r,t),Ku.subVectors(e,t);const a=Zr.dot(Zr),o=Zr.dot(Ni),c=Zr.dot(Ku),l=Ni.dot(Ni),u=Ni.dot(Ku),h=a*l-o*o;if(h===0)return s.set(0,0,0),null;const d=1/h,f=(l*c-o*u)*d,p=(a*u-o*c)*d;return s.set(1-f-p,p,f)}static containsPoint(e,t,r,i){return this.getBarycoord(e,t,r,i,Mi)===null?!1:Mi.x>=0&&Mi.y>=0&&Mi.x+Mi.y<=1}static getInterpolation(e,t,r,i,s,a,o,c){return this.getBarycoord(e,t,r,i,Mi)===null?(c.x=0,c.y=0,"z"in c&&(c.z=0),"w"in c&&(c.w=0),null):(c.setScalar(0),c.addScaledVector(s,Mi.x),c.addScaledVector(a,Mi.y),c.addScaledVector(o,Mi.z),c)}static isFrontFacing(e,t,r,i){return Zr.subVectors(r,t),Ni.subVectors(e,t),Zr.cross(Ni).dot(i)<0}set(e,t,r){return this.a.copy(e),this.b.copy(t),this.c.copy(r),this}setFromPointsAndIndices(e,t,r,i){return this.a.copy(e[t]),this.b.copy(e[r]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,r,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,r),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Zr.subVectors(this.c,this.b),Ni.subVectors(this.a,this.b),Zr.cross(Ni).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return fi.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return fi.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,r,i,s){return fi.getInterpolation(e,this.a,this.b,this.c,t,r,i,s)}containsPoint(e){return fi.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return fi.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const r=this.a,i=this.b,s=this.c;let a,o;Ua.subVectors(i,r),Ba.subVectors(s,r),Yu.subVectors(e,r);const c=Ua.dot(Yu),l=Ba.dot(Yu);if(c<=0&&l<=0)return t.copy(r);Zu.subVectors(e,i);const u=Ua.dot(Zu),h=Ba.dot(Zu);if(u>=0&&h<=u)return t.copy(i);const d=c*h-u*l;if(d<=0&&c>=0&&u<=0)return a=c/(c-u),t.copy(r).addScaledVector(Ua,a);Ju.subVectors(e,s);const f=Ua.dot(Ju),p=Ba.dot(Ju);if(p>=0&&f<=p)return t.copy(s);const x=f*l-c*p;if(x<=0&&l>=0&&p<=0)return o=l/(l-p),t.copy(r).addScaledVector(Ba,o);const g=u*p-f*h;if(g<=0&&h-u>=0&&f-p>=0)return Tp.subVectors(s,i),o=(h-u)/(h-u+(f-p)),t.copy(i).addScaledVector(Tp,o);const m=1/(g+x+d);return a=x*m,o=d*m,t.copy(r).addScaledVector(Ua,a).addScaledVector(Ba,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const Bg={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},ts={h:0,s:0,l:0},Yc={h:0,s:0,l:0};function Qu(n,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?n+(e-n)*6*t:t<1/2?e:t<2/3?n+(e-n)*6*(2/3-t):n}class en{constructor(e,t,r){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,r)}set(e,t,r){if(t===void 0&&r===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,r);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Jr){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Yt.toWorkingColorSpace(this,t),this}setRGB(e,t,r,i=Yt.workingColorSpace){return this.r=e,this.g=t,this.b=r,Yt.toWorkingColorSpace(this,i),this}setHSL(e,t,r,i=Yt.workingColorSpace){if(e=U_(e,1),t=dr(t,0,1),r=dr(r,0,1),t===0)this.r=this.g=this.b=r;else{const s=r<=.5?r*(1+t):r+t-r*t,a=2*r-s;this.r=Qu(a,s,e+1/3),this.g=Qu(a,s,e),this.b=Qu(a,s,e-1/3)}return Yt.toWorkingColorSpace(this,i),this}setStyle(e,t=Jr){function r(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const a=i[1],o=i[2];switch(a){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return r(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return r(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return r(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=i[1],a=s.length;if(a===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(a===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=Jr){const r=Bg[e.toLowerCase()];return r!==void 0?this.setHex(r,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=no(e.r),this.g=no(e.g),this.b=no(e.b),this}copyLinearToSRGB(e){return this.r=Bu(e.r),this.g=Bu(e.g),this.b=Bu(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Jr){return Yt.fromWorkingColorSpace(Hn.copy(this),e),Math.round(dr(Hn.r*255,0,255))*65536+Math.round(dr(Hn.g*255,0,255))*256+Math.round(dr(Hn.b*255,0,255))}getHexString(e=Jr){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Yt.workingColorSpace){Yt.fromWorkingColorSpace(Hn.copy(this),t);const r=Hn.r,i=Hn.g,s=Hn.b,a=Math.max(r,i,s),o=Math.min(r,i,s);let c,l;const u=(o+a)/2;if(o===a)c=0,l=0;else{const h=a-o;switch(l=u<=.5?h/(a+o):h/(2-a-o),a){case r:c=(i-s)/h+(i<s?6:0);break;case i:c=(s-r)/h+2;break;case s:c=(r-i)/h+4;break}c/=6}return e.h=c,e.s=l,e.l=u,e}getRGB(e,t=Yt.workingColorSpace){return Yt.fromWorkingColorSpace(Hn.copy(this),t),e.r=Hn.r,e.g=Hn.g,e.b=Hn.b,e}getStyle(e=Jr){Yt.fromWorkingColorSpace(Hn.copy(this),e);const t=Hn.r,r=Hn.g,i=Hn.b;return e!==Jr?`color(${e} ${t.toFixed(3)} ${r.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(r*255)},${Math.round(i*255)})`}offsetHSL(e,t,r){return this.getHSL(ts),this.setHSL(ts.h+e,ts.s+t,ts.l+r)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,r){return this.r=e.r+(t.r-e.r)*r,this.g=e.g+(t.g-e.g)*r,this.b=e.b+(t.b-e.b)*r,this}lerpHSL(e,t){this.getHSL(ts),e.getHSL(Yc);const r=Fu(ts.h,Yc.h,t),i=Fu(ts.s,Yc.s,t),s=Fu(ts.l,Yc.l,t);return this.setHSL(r,i,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,r=this.g,i=this.b,s=e.elements;return this.r=s[0]*t+s[3]*r+s[6]*i,this.g=s[1]*t+s[4]*r+s[7]*i,this.b=s[2]*t+s[5]*r+s[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Hn=new en;en.NAMES=Bg;let nb=0;class ou extends So{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:nb++}),this.uuid=wc(),this.name="",this.type="Material",this.blending=eo,this.side=gs,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=Dh,this.blendDst=Ph,this.blendEquation=Ws,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new en(0,0,0),this.blendAlpha=0,this.depthFunc=Ml,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=hp,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Ia,this.stencilZFail=Ia,this.stencilZPass=Ia,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const r=e[t];if(r===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(r):i&&i.isVector3&&r&&r.isVector3?i.copy(r):this[t]=r}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const r={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.color&&this.color.isColor&&(r.color=this.color.getHex()),this.roughness!==void 0&&(r.roughness=this.roughness),this.metalness!==void 0&&(r.metalness=this.metalness),this.sheen!==void 0&&(r.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(r.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(r.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(r.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(r.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(r.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(r.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(r.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(r.shininess=this.shininess),this.clearcoat!==void 0&&(r.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(r.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(r.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(r.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(r.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,r.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(r.dispersion=this.dispersion),this.iridescence!==void 0&&(r.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(r.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(r.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(r.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(r.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(r.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(r.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(r.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(r.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(r.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(r.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(r.lightMap=this.lightMap.toJSON(e).uuid,r.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(r.aoMap=this.aoMap.toJSON(e).uuid,r.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(r.bumpMap=this.bumpMap.toJSON(e).uuid,r.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(r.normalMap=this.normalMap.toJSON(e).uuid,r.normalMapType=this.normalMapType,r.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(r.displacementMap=this.displacementMap.toJSON(e).uuid,r.displacementScale=this.displacementScale,r.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(r.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(r.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(r.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(r.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(r.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(r.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(r.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(r.combine=this.combine)),this.envMapRotation!==void 0&&(r.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(r.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(r.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(r.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(r.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(r.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(r.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(r.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(r.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(r.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(r.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(r.size=this.size),this.shadowSide!==null&&(r.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(r.sizeAttenuation=this.sizeAttenuation),this.blending!==eo&&(r.blending=this.blending),this.side!==gs&&(r.side=this.side),this.vertexColors===!0&&(r.vertexColors=!0),this.opacity<1&&(r.opacity=this.opacity),this.transparent===!0&&(r.transparent=!0),this.blendSrc!==Dh&&(r.blendSrc=this.blendSrc),this.blendDst!==Ph&&(r.blendDst=this.blendDst),this.blendEquation!==Ws&&(r.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(r.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(r.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(r.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(r.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(r.blendAlpha=this.blendAlpha),this.depthFunc!==Ml&&(r.depthFunc=this.depthFunc),this.depthTest===!1&&(r.depthTest=this.depthTest),this.depthWrite===!1&&(r.depthWrite=this.depthWrite),this.colorWrite===!1&&(r.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(r.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==hp&&(r.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(r.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(r.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Ia&&(r.stencilFail=this.stencilFail),this.stencilZFail!==Ia&&(r.stencilZFail=this.stencilZFail),this.stencilZPass!==Ia&&(r.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(r.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(r.rotation=this.rotation),this.polygonOffset===!0&&(r.polygonOffset=!0),this.polygonOffsetFactor!==0&&(r.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(r.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(r.linewidth=this.linewidth),this.dashSize!==void 0&&(r.dashSize=this.dashSize),this.gapSize!==void 0&&(r.gapSize=this.gapSize),this.scale!==void 0&&(r.scale=this.scale),this.dithering===!0&&(r.dithering=!0),this.alphaTest>0&&(r.alphaTest=this.alphaTest),this.alphaHash===!0&&(r.alphaHash=!0),this.alphaToCoverage===!0&&(r.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(r.premultipliedAlpha=!0),this.forceSinglePass===!0&&(r.forceSinglePass=!0),this.wireframe===!0&&(r.wireframe=!0),this.wireframeLinewidth>1&&(r.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(r.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(r.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(r.flatShading=!0),this.visible===!1&&(r.visible=!1),this.toneMapped===!1&&(r.toneMapped=!1),this.fog===!1&&(r.fog=!1),Object.keys(this.userData).length>0&&(r.userData=this.userData);function i(s){const a=[];for(const o in s){const c=s[o];delete c.metadata,a.push(c)}return a}if(t){const s=i(e.textures),a=i(e.images);s.length>0&&(r.textures=s),a.length>0&&(r.images=a)}return r}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let r=null;if(t!==null){const i=t.length;r=new Array(i);for(let s=0;s!==i;++s)r[s]=t[s].clone()}return this.clippingPlanes=r,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class $d extends ou{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new en(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Fi,this.combine=Cg,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const bn=new ue,Zc=new Kt;class yi{constructor(e,t,r=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=r,this.usage=dp,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=os,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}get updateRange(){return Lg("THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,r){e*=this.itemSize,r*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[r+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,r=this.count;t<r;t++)Zc.fromBufferAttribute(this,t),Zc.applyMatrix3(e),this.setXY(t,Zc.x,Zc.y);else if(this.itemSize===3)for(let t=0,r=this.count;t<r;t++)bn.fromBufferAttribute(this,t),bn.applyMatrix3(e),this.setXYZ(t,bn.x,bn.y,bn.z);return this}applyMatrix4(e){for(let t=0,r=this.count;t<r;t++)bn.fromBufferAttribute(this,t),bn.applyMatrix4(e),this.setXYZ(t,bn.x,bn.y,bn.z);return this}applyNormalMatrix(e){for(let t=0,r=this.count;t<r;t++)bn.fromBufferAttribute(this,t),bn.applyNormalMatrix(e),this.setXYZ(t,bn.x,bn.y,bn.z);return this}transformDirection(e){for(let t=0,r=this.count;t<r;t++)bn.fromBufferAttribute(this,t),bn.transformDirection(e),this.setXYZ(t,bn.x,bn.y,bn.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let r=this.array[e*this.itemSize+t];return this.normalized&&(r=jo(r,this.array)),r}setComponent(e,t,r){return this.normalized&&(r=cr(r,this.array)),this.array[e*this.itemSize+t]=r,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=jo(t,this.array)),t}setX(e,t){return this.normalized&&(t=cr(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=jo(t,this.array)),t}setY(e,t){return this.normalized&&(t=cr(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=jo(t,this.array)),t}setZ(e,t){return this.normalized&&(t=cr(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=jo(t,this.array)),t}setW(e,t){return this.normalized&&(t=cr(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,r){return e*=this.itemSize,this.normalized&&(t=cr(t,this.array),r=cr(r,this.array)),this.array[e+0]=t,this.array[e+1]=r,this}setXYZ(e,t,r,i){return e*=this.itemSize,this.normalized&&(t=cr(t,this.array),r=cr(r,this.array),i=cr(i,this.array)),this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=i,this}setXYZW(e,t,r,i,s){return e*=this.itemSize,this.normalized&&(t=cr(t,this.array),r=cr(r,this.array),i=cr(i,this.array),s=cr(s,this.array)),this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==dp&&(e.usage=this.usage),e}}class Vg extends yi{constructor(e,t,r){super(new Uint16Array(e),t,r)}}class zg extends yi{constructor(e,t,r){super(new Uint32Array(e),t,r)}}class ta extends yi{constructor(e,t,r){super(new Float32Array(e),t,r)}}let rb=0;const Pr=new Tn,eh=new wr,Va=new ue,_r=new Ec,Zo=new Ec,Mn=new ue;class ya extends So{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:rb++}),this.uuid=wc(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new($g(e)?zg:Vg)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,r=0){this.groups.push({start:e,count:t,materialIndex:r})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const r=this.attributes.normal;if(r!==void 0){const s=new Pt().getNormalMatrix(e);r.applyNormalMatrix(s),r.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Pr.makeRotationFromQuaternion(e),this.applyMatrix4(Pr),this}rotateX(e){return Pr.makeRotationX(e),this.applyMatrix4(Pr),this}rotateY(e){return Pr.makeRotationY(e),this.applyMatrix4(Pr),this}rotateZ(e){return Pr.makeRotationZ(e),this.applyMatrix4(Pr),this}translate(e,t,r){return Pr.makeTranslation(e,t,r),this.applyMatrix4(Pr),this}scale(e,t,r){return Pr.makeScale(e,t,r),this.applyMatrix4(Pr),this}lookAt(e){return eh.lookAt(e),eh.updateMatrix(),this.applyMatrix4(eh.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Va).negate(),this.translate(Va.x,Va.y,Va.z),this}setFromPoints(e){const t=[];for(let r=0,i=e.length;r<i;r++){const s=e[r];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new ta(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Ec);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new ue(-1/0,-1/0,-1/0),new ue(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let r=0,i=t.length;r<i;r++){const s=t[r];_r.setFromBufferAttribute(s),this.morphTargetsRelative?(Mn.addVectors(this.boundingBox.min,_r.min),this.boundingBox.expandByPoint(Mn),Mn.addVectors(this.boundingBox.max,_r.max),this.boundingBox.expandByPoint(Mn)):(this.boundingBox.expandByPoint(_r.min),this.boundingBox.expandByPoint(_r.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Od);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new ue,1/0);return}if(e){const r=this.boundingSphere.center;if(_r.setFromBufferAttribute(e),t)for(let s=0,a=t.length;s<a;s++){const o=t[s];Zo.setFromBufferAttribute(o),this.morphTargetsRelative?(Mn.addVectors(_r.min,Zo.min),_r.expandByPoint(Mn),Mn.addVectors(_r.max,Zo.max),_r.expandByPoint(Mn)):(_r.expandByPoint(Zo.min),_r.expandByPoint(Zo.max))}_r.getCenter(r);let i=0;for(let s=0,a=e.count;s<a;s++)Mn.fromBufferAttribute(e,s),i=Math.max(i,r.distanceToSquared(Mn));if(t)for(let s=0,a=t.length;s<a;s++){const o=t[s],c=this.morphTargetsRelative;for(let l=0,u=o.count;l<u;l++)Mn.fromBufferAttribute(o,l),c&&(Va.fromBufferAttribute(e,l),Mn.add(Va)),i=Math.max(i,r.distanceToSquared(Mn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const r=t.position,i=t.normal,s=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new yi(new Float32Array(4*r.count),4));const a=this.getAttribute("tangent"),o=[],c=[];for(let F=0;F<r.count;F++)o[F]=new ue,c[F]=new ue;const l=new ue,u=new ue,h=new ue,d=new Kt,f=new Kt,p=new Kt,x=new ue,g=new ue;function m(F,N,A){l.fromBufferAttribute(r,F),u.fromBufferAttribute(r,N),h.fromBufferAttribute(r,A),d.fromBufferAttribute(s,F),f.fromBufferAttribute(s,N),p.fromBufferAttribute(s,A),u.sub(l),h.sub(l),f.sub(d),p.sub(d);const B=1/(f.x*p.y-p.x*f.y);isFinite(B)&&(x.copy(u).multiplyScalar(p.y).addScaledVector(h,-f.y).multiplyScalar(B),g.copy(h).multiplyScalar(f.x).addScaledVector(u,-p.x).multiplyScalar(B),o[F].add(x),o[N].add(x),o[A].add(x),c[F].add(g),c[N].add(g),c[A].add(g))}let _=this.groups;_.length===0&&(_=[{start:0,count:e.count}]);for(let F=0,N=_.length;F<N;++F){const A=_[F],B=A.start,J=A.count;for(let Y=B,ae=B+J;Y<ae;Y+=3)m(e.getX(Y+0),e.getX(Y+1),e.getX(Y+2))}const b=new ue,w=new ue,I=new ue,M=new ue;function D(F){I.fromBufferAttribute(i,F),M.copy(I);const N=o[F];b.copy(N),b.sub(I.multiplyScalar(I.dot(N))).normalize(),w.crossVectors(M,N);const B=w.dot(c[F])<0?-1:1;a.setXYZW(F,b.x,b.y,b.z,B)}for(let F=0,N=_.length;F<N;++F){const A=_[F],B=A.start,J=A.count;for(let Y=B,ae=B+J;Y<ae;Y+=3)D(e.getX(Y+0)),D(e.getX(Y+1)),D(e.getX(Y+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let r=this.getAttribute("normal");if(r===void 0)r=new yi(new Float32Array(t.count*3),3),this.setAttribute("normal",r);else for(let d=0,f=r.count;d<f;d++)r.setXYZ(d,0,0,0);const i=new ue,s=new ue,a=new ue,o=new ue,c=new ue,l=new ue,u=new ue,h=new ue;if(e)for(let d=0,f=e.count;d<f;d+=3){const p=e.getX(d+0),x=e.getX(d+1),g=e.getX(d+2);i.fromBufferAttribute(t,p),s.fromBufferAttribute(t,x),a.fromBufferAttribute(t,g),u.subVectors(a,s),h.subVectors(i,s),u.cross(h),o.fromBufferAttribute(r,p),c.fromBufferAttribute(r,x),l.fromBufferAttribute(r,g),o.add(u),c.add(u),l.add(u),r.setXYZ(p,o.x,o.y,o.z),r.setXYZ(x,c.x,c.y,c.z),r.setXYZ(g,l.x,l.y,l.z)}else for(let d=0,f=t.count;d<f;d+=3)i.fromBufferAttribute(t,d+0),s.fromBufferAttribute(t,d+1),a.fromBufferAttribute(t,d+2),u.subVectors(a,s),h.subVectors(i,s),u.cross(h),r.setXYZ(d+0,u.x,u.y,u.z),r.setXYZ(d+1,u.x,u.y,u.z),r.setXYZ(d+2,u.x,u.y,u.z);this.normalizeNormals(),r.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,r=e.count;t<r;t++)Mn.fromBufferAttribute(e,t),Mn.normalize(),e.setXYZ(t,Mn.x,Mn.y,Mn.z)}toNonIndexed(){function e(o,c){const l=o.array,u=o.itemSize,h=o.normalized,d=new l.constructor(c.length*u);let f=0,p=0;for(let x=0,g=c.length;x<g;x++){o.isInterleavedBufferAttribute?f=c[x]*o.data.stride+o.offset:f=c[x]*u;for(let m=0;m<u;m++)d[p++]=l[f++]}return new yi(d,u,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new ya,r=this.index.array,i=this.attributes;for(const o in i){const c=i[o],l=e(c,r);t.setAttribute(o,l)}const s=this.morphAttributes;for(const o in s){const c=[],l=s[o];for(let u=0,h=l.length;u<h;u++){const d=l[u],f=e(d,r);c.push(f)}t.morphAttributes[o]=c}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let o=0,c=a.length;o<c;o++){const l=a[o];t.addGroup(l.start,l.count,l.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const c=this.parameters;for(const l in c)c[l]!==void 0&&(e[l]=c[l]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const r=this.attributes;for(const c in r){const l=r[c];e.data.attributes[c]=l.toJSON(e.data)}const i={};let s=!1;for(const c in this.morphAttributes){const l=this.morphAttributes[c],u=[];for(let h=0,d=l.length;h<d;h++){const f=l[h];u.push(f.toJSON(e.data))}u.length>0&&(i[c]=u,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return o!==null&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const r=e.index;r!==null&&this.setIndex(r.clone(t));const i=e.attributes;for(const l in i){const u=i[l];this.setAttribute(l,u.clone(t))}const s=e.morphAttributes;for(const l in s){const u=[],h=s[l];for(let d=0,f=h.length;d<f;d++)u.push(h[d].clone(t));this.morphAttributes[l]=u}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let l=0,u=a.length;l<u;l++){const h=a[l];this.addGroup(h.start,h.count,h.materialIndex)}const o=e.boundingBox;o!==null&&(this.boundingBox=o.clone());const c=e.boundingSphere;return c!==null&&(this.boundingSphere=c.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Cp=new Tn,Os=new K_,Jc=new Od,Ap=new ue,za=new ue,Ga=new ue,Wa=new ue,th=new ue,Qc=new ue,el=new Kt,tl=new Kt,nl=new Kt,Rp=new ue,Np=new ue,Mp=new ue,rl=new ue,il=new ue;class mi extends wr{constructor(e=new ya,t=new $d){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,r=Object.keys(t);if(r.length>0){const i=t[r[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=i.length;s<a;s++){const o=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}getVertexPosition(e,t){const r=this.geometry,i=r.attributes.position,s=r.morphAttributes.position,a=r.morphTargetsRelative;t.fromBufferAttribute(i,e);const o=this.morphTargetInfluences;if(s&&o){Qc.set(0,0,0);for(let c=0,l=s.length;c<l;c++){const u=o[c],h=s[c];u!==0&&(th.fromBufferAttribute(h,e),a?Qc.addScaledVector(th,u):Qc.addScaledVector(th.sub(t),u))}t.add(Qc)}return t}raycast(e,t){const r=this.geometry,i=this.material,s=this.matrixWorld;i!==void 0&&(r.boundingSphere===null&&r.computeBoundingSphere(),Jc.copy(r.boundingSphere),Jc.applyMatrix4(s),Os.copy(e.ray).recast(e.near),!(Jc.containsPoint(Os.origin)===!1&&(Os.intersectSphere(Jc,Ap)===null||Os.origin.distanceToSquared(Ap)>(e.far-e.near)**2))&&(Cp.copy(s).invert(),Os.copy(e.ray).applyMatrix4(Cp),!(r.boundingBox!==null&&Os.intersectsBox(r.boundingBox)===!1)&&this._computeIntersections(e,t,Os)))}_computeIntersections(e,t,r){let i;const s=this.geometry,a=this.material,o=s.index,c=s.attributes.position,l=s.attributes.uv,u=s.attributes.uv1,h=s.attributes.normal,d=s.groups,f=s.drawRange;if(o!==null)if(Array.isArray(a))for(let p=0,x=d.length;p<x;p++){const g=d[p],m=a[g.materialIndex],_=Math.max(g.start,f.start),b=Math.min(o.count,Math.min(g.start+g.count,f.start+f.count));for(let w=_,I=b;w<I;w+=3){const M=o.getX(w),D=o.getX(w+1),F=o.getX(w+2);i=sl(this,m,e,r,l,u,h,M,D,F),i&&(i.faceIndex=Math.floor(w/3),i.face.materialIndex=g.materialIndex,t.push(i))}}else{const p=Math.max(0,f.start),x=Math.min(o.count,f.start+f.count);for(let g=p,m=x;g<m;g+=3){const _=o.getX(g),b=o.getX(g+1),w=o.getX(g+2);i=sl(this,a,e,r,l,u,h,_,b,w),i&&(i.faceIndex=Math.floor(g/3),t.push(i))}}else if(c!==void 0)if(Array.isArray(a))for(let p=0,x=d.length;p<x;p++){const g=d[p],m=a[g.materialIndex],_=Math.max(g.start,f.start),b=Math.min(c.count,Math.min(g.start+g.count,f.start+f.count));for(let w=_,I=b;w<I;w+=3){const M=w,D=w+1,F=w+2;i=sl(this,m,e,r,l,u,h,M,D,F),i&&(i.faceIndex=Math.floor(w/3),i.face.materialIndex=g.materialIndex,t.push(i))}}else{const p=Math.max(0,f.start),x=Math.min(c.count,f.start+f.count);for(let g=p,m=x;g<m;g+=3){const _=g,b=g+1,w=g+2;i=sl(this,a,e,r,l,u,h,_,b,w),i&&(i.faceIndex=Math.floor(g/3),t.push(i))}}}}function ib(n,e,t,r,i,s,a,o){let c;if(e.side===pr?c=r.intersectTriangle(a,s,i,!0,o):c=r.intersectTriangle(i,s,a,e.side===gs,o),c===null)return null;il.copy(o),il.applyMatrix4(n.matrixWorld);const l=t.ray.origin.distanceTo(il);return l<t.near||l>t.far?null:{distance:l,point:il.clone(),object:n}}function sl(n,e,t,r,i,s,a,o,c,l){n.getVertexPosition(o,za),n.getVertexPosition(c,Ga),n.getVertexPosition(l,Wa);const u=ib(n,e,t,r,za,Ga,Wa,rl);if(u){i&&(el.fromBufferAttribute(i,o),tl.fromBufferAttribute(i,c),nl.fromBufferAttribute(i,l),u.uv=fi.getInterpolation(rl,za,Ga,Wa,el,tl,nl,new Kt)),s&&(el.fromBufferAttribute(s,o),tl.fromBufferAttribute(s,c),nl.fromBufferAttribute(s,l),u.uv1=fi.getInterpolation(rl,za,Ga,Wa,el,tl,nl,new Kt)),a&&(Rp.fromBufferAttribute(a,o),Np.fromBufferAttribute(a,c),Mp.fromBufferAttribute(a,l),u.normal=fi.getInterpolation(rl,za,Ga,Wa,Rp,Np,Mp,new ue),u.normal.dot(r.direction)>0&&u.normal.multiplyScalar(-1));const h={a:o,b:c,c:l,normal:new ue,materialIndex:0};fi.getNormal(za,Ga,Wa,h.normal),u.face=h}return u}class Tc extends ya{constructor(e=1,t=1,r=1,i=1,s=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:r,widthSegments:i,heightSegments:s,depthSegments:a};const o=this;i=Math.floor(i),s=Math.floor(s),a=Math.floor(a);const c=[],l=[],u=[],h=[];let d=0,f=0;p("z","y","x",-1,-1,r,t,e,a,s,0),p("z","y","x",1,-1,r,t,-e,a,s,1),p("x","z","y",1,1,e,r,t,i,a,2),p("x","z","y",1,-1,e,r,-t,i,a,3),p("x","y","z",1,-1,e,t,r,i,s,4),p("x","y","z",-1,-1,e,t,-r,i,s,5),this.setIndex(c),this.setAttribute("position",new ta(l,3)),this.setAttribute("normal",new ta(u,3)),this.setAttribute("uv",new ta(h,2));function p(x,g,m,_,b,w,I,M,D,F,N){const A=w/D,B=I/F,J=w/2,Y=I/2,ae=M/2,le=D+1,he=F+1;let de=0,oe=0;const $e=new ue;for(let He=0;He<he;He++){const ze=He*B-Y;for(let _t=0;_t<le;_t++){const Ot=_t*A-J;$e[x]=Ot*_,$e[g]=ze*b,$e[m]=ae,l.push($e.x,$e.y,$e.z),$e[x]=0,$e[g]=0,$e[m]=M>0?1:-1,u.push($e.x,$e.y,$e.z),h.push(_t/D),h.push(1-He/F),de+=1}}for(let He=0;He<F;He++)for(let ze=0;ze<D;ze++){const _t=d+ze+le*He,Ot=d+ze+le*(He+1),xe=d+(ze+1)+le*(He+1),Te=d+(ze+1)+le*He;c.push(_t,Ot,Te),c.push(Ot,xe,Te),oe+=6}o.addGroup(f,oe,N),f+=oe,d+=de}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Tc(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function fo(n){const e={};for(const t in n){e[t]={};for(const r in n[t]){const i=n[t][r];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][r]=null):e[t][r]=i.clone():Array.isArray(i)?e[t][r]=i.slice():e[t][r]=i}}return e}function Qn(n){const e={};for(let t=0;t<n.length;t++){const r=fo(n[t]);for(const i in r)e[i]=r[i]}return e}function sb(n){const e=[];for(let t=0;t<n.length;t++)e.push(n[t].clone());return e}function Gg(n){const e=n.getRenderTarget();return e===null?n.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:Yt.workingColorSpace}const ab={clone:fo,merge:Qn};var ob=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,cb=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class ys extends ou{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=ob,this.fragmentShader=cb,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=fo(e.uniforms),this.uniformsGroups=sb(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const a=this.uniforms[i].value;a&&a.isTexture?t.uniforms[i]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?t.uniforms[i]={type:"c",value:a.getHex()}:a&&a.isVector2?t.uniforms[i]={type:"v2",value:a.toArray()}:a&&a.isVector3?t.uniforms[i]={type:"v3",value:a.toArray()}:a&&a.isVector4?t.uniforms[i]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?t.uniforms[i]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?t.uniforms[i]={type:"m4",value:a.toArray()}:t.uniforms[i]={value:a}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const r={};for(const i in this.extensions)this.extensions[i]===!0&&(r[i]=!0);return Object.keys(r).length>0&&(t.extensions=r),t}}class Wg extends wr{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Tn,this.projectionMatrix=new Tn,this.projectionMatrixInverse=new Tn,this.coordinateSystem=$i}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const ns=new ue,Ip=new Kt,Dp=new Kt;class Lr extends Wg{constructor(e=50,t=1,r=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=r,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Fh*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(ku*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Fh*2*Math.atan(Math.tan(ku*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,r){ns.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(ns.x,ns.y).multiplyScalar(-e/ns.z),ns.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),r.set(ns.x,ns.y).multiplyScalar(-e/ns.z)}getViewSize(e,t){return this.getViewBounds(e,Ip,Dp),t.subVectors(Dp,Ip)}setViewOffset(e,t,r,i,s,a){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=r,this.view.offsetY=i,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(ku*.5*this.fov)/this.zoom,r=2*t,i=this.aspect*r,s=-.5*i;const a=this.view;if(this.view!==null&&this.view.enabled){const c=a.fullWidth,l=a.fullHeight;s+=a.offsetX*i/c,t-=a.offsetY*r/l,i*=a.width/c,r*=a.height/l}const o=this.filmOffset;o!==0&&(s+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-r,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Ha=-90,Xa=1;class lb extends wr{constructor(e,t,r){super(),this.type="CubeCamera",this.renderTarget=r,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new Lr(Ha,Xa,e,t);i.layers=this.layers,this.add(i);const s=new Lr(Ha,Xa,e,t);s.layers=this.layers,this.add(s);const a=new Lr(Ha,Xa,e,t);a.layers=this.layers,this.add(a);const o=new Lr(Ha,Xa,e,t);o.layers=this.layers,this.add(o);const c=new Lr(Ha,Xa,e,t);c.layers=this.layers,this.add(c);const l=new Lr(Ha,Xa,e,t);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[r,i,s,a,o,c]=t;for(const l of t)this.remove(l);if(e===$i)r.up.set(0,1,0),r.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),o.up.set(0,1,0),o.lookAt(0,0,1),c.up.set(0,1,0),c.lookAt(0,0,-1);else if(e===$l)r.up.set(0,-1,0),r.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),o.up.set(0,-1,0),o.lookAt(0,0,1),c.up.set(0,-1,0),c.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const l of t)this.add(l),l.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:r,activeMipmapLevel:i}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,a,o,c,l,u]=this.children,h=e.getRenderTarget(),d=e.getActiveCubeFace(),f=e.getActiveMipmapLevel(),p=e.xr.enabled;e.xr.enabled=!1;const x=r.texture.generateMipmaps;r.texture.generateMipmaps=!1,e.setRenderTarget(r,0,i),e.render(t,s),e.setRenderTarget(r,1,i),e.render(t,a),e.setRenderTarget(r,2,i),e.render(t,o),e.setRenderTarget(r,3,i),e.render(t,c),e.setRenderTarget(r,4,i),e.render(t,l),r.texture.generateMipmaps=x,e.setRenderTarget(r,5,i),e.render(t,u),e.setRenderTarget(h,d,f),e.xr.enabled=p,r.texture.needsPMREMUpdate=!0}}class Hg extends tr{constructor(e,t,r,i,s,a,o,c,l,u){e=e!==void 0?e:[],t=t!==void 0?t:oo,super(e,t,r,i,s,a,o,c,l,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class ub extends sa{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const r={width:e,height:e,depth:1},i=[r,r,r,r,r,r];this.texture=new Hg(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:ni}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const r={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Tc(5,5,5),s=new ys({name:"CubemapFromEquirect",uniforms:fo(r.uniforms),vertexShader:r.vertexShader,fragmentShader:r.fragmentShader,side:pr,blending:us});s.uniforms.tEquirect.value=t;const a=new mi(i,s),o=t.minFilter;return t.minFilter===Zs&&(t.minFilter=ni),new lb(1,10,this).update(e,a),t.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,r,i){const s=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,r,i);e.setRenderTarget(s)}}const nh=new ue,hb=new ue,db=new Pt;class Vs{constructor(e=new ue(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,r,i){return this.normal.set(e,t,r),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,r){const i=nh.subVectors(r,t).cross(hb.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const r=e.delta(nh),i=this.normal.dot(r);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(e.start).addScaledVector(r,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),r=this.distanceToPoint(e.end);return t<0&&r>0||r<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const r=t||db.getNormalMatrix(e),i=this.coplanarPoint(nh).applyMatrix4(e),s=this.normal.applyMatrix3(r).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const $s=new Od,al=new ue;class Xg{constructor(e=new Vs,t=new Vs,r=new Vs,i=new Vs,s=new Vs,a=new Vs){this.planes=[e,t,r,i,s,a]}set(e,t,r,i,s,a){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(r),o[3].copy(i),o[4].copy(s),o[5].copy(a),this}copy(e){const t=this.planes;for(let r=0;r<6;r++)t[r].copy(e.planes[r]);return this}setFromProjectionMatrix(e,t=$i){const r=this.planes,i=e.elements,s=i[0],a=i[1],o=i[2],c=i[3],l=i[4],u=i[5],h=i[6],d=i[7],f=i[8],p=i[9],x=i[10],g=i[11],m=i[12],_=i[13],b=i[14],w=i[15];if(r[0].setComponents(c-s,d-l,g-f,w-m).normalize(),r[1].setComponents(c+s,d+l,g+f,w+m).normalize(),r[2].setComponents(c+a,d+u,g+p,w+_).normalize(),r[3].setComponents(c-a,d-u,g-p,w-_).normalize(),r[4].setComponents(c-o,d-h,g-x,w-b).normalize(),t===$i)r[5].setComponents(c+o,d+h,g+x,w+b).normalize();else if(t===$l)r[5].setComponents(o,h,x,b).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),$s.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),$s.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere($s)}intersectsSprite(e){return $s.center.set(0,0,0),$s.radius=.7071067811865476,$s.applyMatrix4(e.matrixWorld),this.intersectsSphere($s)}intersectsSphere(e){const t=this.planes,r=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(r)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let r=0;r<6;r++){const i=t[r];if(al.x=i.normal.x>0?e.max.x:e.min.x,al.y=i.normal.y>0?e.max.y:e.min.y,al.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(al)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let r=0;r<6;r++)if(t[r].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function jg(){let n=null,e=!1,t=null,r=null;function i(s,a){t(s,a),r=n.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(r=n.requestAnimationFrame(i),e=!0)},stop:function(){n.cancelAnimationFrame(r),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){n=s}}}function fb(n){const e=new WeakMap;function t(o,c){const l=o.array,u=o.usage,h=l.byteLength,d=n.createBuffer();n.bindBuffer(c,d),n.bufferData(c,l,u),o.onUploadCallback();let f;if(l instanceof Float32Array)f=n.FLOAT;else if(l instanceof Uint16Array)o.isFloat16BufferAttribute?f=n.HALF_FLOAT:f=n.UNSIGNED_SHORT;else if(l instanceof Int16Array)f=n.SHORT;else if(l instanceof Uint32Array)f=n.UNSIGNED_INT;else if(l instanceof Int32Array)f=n.INT;else if(l instanceof Int8Array)f=n.BYTE;else if(l instanceof Uint8Array)f=n.UNSIGNED_BYTE;else if(l instanceof Uint8ClampedArray)f=n.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+l);return{buffer:d,type:f,bytesPerElement:l.BYTES_PER_ELEMENT,version:o.version,size:h}}function r(o,c,l){const u=c.array,h=c._updateRange,d=c.updateRanges;if(n.bindBuffer(l,o),h.count===-1&&d.length===0&&n.bufferSubData(l,0,u),d.length!==0){for(let f=0,p=d.length;f<p;f++){const x=d[f];n.bufferSubData(l,x.start*u.BYTES_PER_ELEMENT,u,x.start,x.count)}c.clearUpdateRanges()}h.count!==-1&&(n.bufferSubData(l,h.offset*u.BYTES_PER_ELEMENT,u,h.offset,h.count),h.count=-1),c.onUploadCallback()}function i(o){return o.isInterleavedBufferAttribute&&(o=o.data),e.get(o)}function s(o){o.isInterleavedBufferAttribute&&(o=o.data);const c=e.get(o);c&&(n.deleteBuffer(c.buffer),e.delete(o))}function a(o,c){if(o.isGLBufferAttribute){const u=e.get(o);(!u||u.version<o.version)&&e.set(o,{buffer:o.buffer,type:o.type,bytesPerElement:o.elementSize,version:o.version});return}o.isInterleavedBufferAttribute&&(o=o.data);const l=e.get(o);if(l===void 0)e.set(o,t(o,c));else if(l.version<o.version){if(l.size!==o.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");r(l.buffer,o,c),l.version=o.version}}return{get:i,remove:s,update:a}}class Cc extends ya{constructor(e=1,t=1,r=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:r,heightSegments:i};const s=e/2,a=t/2,o=Math.floor(r),c=Math.floor(i),l=o+1,u=c+1,h=e/o,d=t/c,f=[],p=[],x=[],g=[];for(let m=0;m<u;m++){const _=m*d-a;for(let b=0;b<l;b++){const w=b*h-s;p.push(w,-_,0),x.push(0,0,1),g.push(b/o),g.push(1-m/c)}}for(let m=0;m<c;m++)for(let _=0;_<o;_++){const b=_+l*m,w=_+l*(m+1),I=_+1+l*(m+1),M=_+1+l*m;f.push(b,w,M),f.push(w,I,M)}this.setIndex(f),this.setAttribute("position",new ta(p,3)),this.setAttribute("normal",new ta(x,3)),this.setAttribute("uv",new ta(g,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Cc(e.width,e.height,e.widthSegments,e.heightSegments)}}var pb=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,mb=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,gb=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,xb=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,yb=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,vb=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,_b=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,bb=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Sb=`#ifdef USE_BATCHING
	attribute float batchId;
	uniform highp sampler2D batchingTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,wb=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( batchId );
#endif`,Eb=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,Tb=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,Cb=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,Ab=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,Rb=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Nb=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,Mb=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Ib=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Db=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,Pb=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,Ob=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,$b=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,Lb=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( batchId );
	vColor.xyz *= batchingColor.xyz;
#endif`,kb=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,Fb=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Ub=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,Bb=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Vb=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,zb=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,Gb=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Wb="gl_FragColor = linearToOutputTexel( gl_FragColor );",Hb=`
const mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(
	vec3( 0.8224621, 0.177538, 0.0 ),
	vec3( 0.0331941, 0.9668058, 0.0 ),
	vec3( 0.0170827, 0.0723974, 0.9105199 )
);
const mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(
	vec3( 1.2249401, - 0.2249404, 0.0 ),
	vec3( - 0.0420569, 1.0420571, 0.0 ),
	vec3( - 0.0196376, - 0.0786361, 1.0982735 )
);
vec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {
	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );
}
vec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {
	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );
}
vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return sRGBTransferOETF( value );
}`,Xb=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,jb=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,qb=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Kb=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,Yb=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,Zb=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,Jb=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,Qb=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,eS=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,tS=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,nS=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,rS=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,iS=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,sS=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,aS=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,oS=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,cS=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,lS=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,uS=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,hS=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,dS=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,fS=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,pS=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,mS=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,gS=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,xS=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,yS=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,vS=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,_S=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,bS=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,SS=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,wS=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,ES=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,TS=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,CS=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,AS=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,RS=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,NS=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,MS=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,IS=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,DS=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,PS=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,OS=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,$S=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,LS=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,kS=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,FS=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,US=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,BS=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,VS=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,zS=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,GS=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,WS=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,HS=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,XS=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,jS=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,qS=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,KS=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return shadow;
	}
#endif`,YS=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,ZS=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,JS=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,QS=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,ew=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,tw=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,nw=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,rw=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,iw=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,sw=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,aw=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,ow=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,cw=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
		
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
		
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		
		#else
		
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,lw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,uw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,hw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,dw=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const fw=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,pw=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,mw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,gw=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,xw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,yw=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,vw=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,_w=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,bw=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,Sw=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,ww=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Ew=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Tw=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Cw=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Aw=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Rw=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Nw=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Mw=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Iw=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Dw=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Pw=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Ow=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,$w=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Lw=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,kw=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,Fw=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Uw=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Bw=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Vw=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,zw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Gw=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Ww=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Hw=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Xw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Dt={alphahash_fragment:pb,alphahash_pars_fragment:mb,alphamap_fragment:gb,alphamap_pars_fragment:xb,alphatest_fragment:yb,alphatest_pars_fragment:vb,aomap_fragment:_b,aomap_pars_fragment:bb,batching_pars_vertex:Sb,batching_vertex:wb,begin_vertex:Eb,beginnormal_vertex:Tb,bsdfs:Cb,iridescence_fragment:Ab,bumpmap_pars_fragment:Rb,clipping_planes_fragment:Nb,clipping_planes_pars_fragment:Mb,clipping_planes_pars_vertex:Ib,clipping_planes_vertex:Db,color_fragment:Pb,color_pars_fragment:Ob,color_pars_vertex:$b,color_vertex:Lb,common:kb,cube_uv_reflection_fragment:Fb,defaultnormal_vertex:Ub,displacementmap_pars_vertex:Bb,displacementmap_vertex:Vb,emissivemap_fragment:zb,emissivemap_pars_fragment:Gb,colorspace_fragment:Wb,colorspace_pars_fragment:Hb,envmap_fragment:Xb,envmap_common_pars_fragment:jb,envmap_pars_fragment:qb,envmap_pars_vertex:Kb,envmap_physical_pars_fragment:aS,envmap_vertex:Yb,fog_vertex:Zb,fog_pars_vertex:Jb,fog_fragment:Qb,fog_pars_fragment:eS,gradientmap_pars_fragment:tS,lightmap_pars_fragment:nS,lights_lambert_fragment:rS,lights_lambert_pars_fragment:iS,lights_pars_begin:sS,lights_toon_fragment:oS,lights_toon_pars_fragment:cS,lights_phong_fragment:lS,lights_phong_pars_fragment:uS,lights_physical_fragment:hS,lights_physical_pars_fragment:dS,lights_fragment_begin:fS,lights_fragment_maps:pS,lights_fragment_end:mS,logdepthbuf_fragment:gS,logdepthbuf_pars_fragment:xS,logdepthbuf_pars_vertex:yS,logdepthbuf_vertex:vS,map_fragment:_S,map_pars_fragment:bS,map_particle_fragment:SS,map_particle_pars_fragment:wS,metalnessmap_fragment:ES,metalnessmap_pars_fragment:TS,morphinstance_vertex:CS,morphcolor_vertex:AS,morphnormal_vertex:RS,morphtarget_pars_vertex:NS,morphtarget_vertex:MS,normal_fragment_begin:IS,normal_fragment_maps:DS,normal_pars_fragment:PS,normal_pars_vertex:OS,normal_vertex:$S,normalmap_pars_fragment:LS,clearcoat_normal_fragment_begin:kS,clearcoat_normal_fragment_maps:FS,clearcoat_pars_fragment:US,iridescence_pars_fragment:BS,opaque_fragment:VS,packing:zS,premultiplied_alpha_fragment:GS,project_vertex:WS,dithering_fragment:HS,dithering_pars_fragment:XS,roughnessmap_fragment:jS,roughnessmap_pars_fragment:qS,shadowmap_pars_fragment:KS,shadowmap_pars_vertex:YS,shadowmap_vertex:ZS,shadowmask_pars_fragment:JS,skinbase_vertex:QS,skinning_pars_vertex:ew,skinning_vertex:tw,skinnormal_vertex:nw,specularmap_fragment:rw,specularmap_pars_fragment:iw,tonemapping_fragment:sw,tonemapping_pars_fragment:aw,transmission_fragment:ow,transmission_pars_fragment:cw,uv_pars_fragment:lw,uv_pars_vertex:uw,uv_vertex:hw,worldpos_vertex:dw,background_vert:fw,background_frag:pw,backgroundCube_vert:mw,backgroundCube_frag:gw,cube_vert:xw,cube_frag:yw,depth_vert:vw,depth_frag:_w,distanceRGBA_vert:bw,distanceRGBA_frag:Sw,equirect_vert:ww,equirect_frag:Ew,linedashed_vert:Tw,linedashed_frag:Cw,meshbasic_vert:Aw,meshbasic_frag:Rw,meshlambert_vert:Nw,meshlambert_frag:Mw,meshmatcap_vert:Iw,meshmatcap_frag:Dw,meshnormal_vert:Pw,meshnormal_frag:Ow,meshphong_vert:$w,meshphong_frag:Lw,meshphysical_vert:kw,meshphysical_frag:Fw,meshtoon_vert:Uw,meshtoon_frag:Bw,points_vert:Vw,points_frag:zw,shadow_vert:Gw,shadow_frag:Ww,sprite_vert:Hw,sprite_frag:Xw},We={common:{diffuse:{value:new en(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Pt},alphaMap:{value:null},alphaMapTransform:{value:new Pt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Pt}},envmap:{envMap:{value:null},envMapRotation:{value:new Pt},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Pt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Pt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Pt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Pt},normalScale:{value:new Kt(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Pt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Pt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Pt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Pt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new en(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new en(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Pt},alphaTest:{value:0},uvTransform:{value:new Pt}},sprite:{diffuse:{value:new en(16777215)},opacity:{value:1},center:{value:new Kt(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Pt},alphaMap:{value:null},alphaMapTransform:{value:new Pt},alphaTest:{value:0}}},hi={basic:{uniforms:Qn([We.common,We.specularmap,We.envmap,We.aomap,We.lightmap,We.fog]),vertexShader:Dt.meshbasic_vert,fragmentShader:Dt.meshbasic_frag},lambert:{uniforms:Qn([We.common,We.specularmap,We.envmap,We.aomap,We.lightmap,We.emissivemap,We.bumpmap,We.normalmap,We.displacementmap,We.fog,We.lights,{emissive:{value:new en(0)}}]),vertexShader:Dt.meshlambert_vert,fragmentShader:Dt.meshlambert_frag},phong:{uniforms:Qn([We.common,We.specularmap,We.envmap,We.aomap,We.lightmap,We.emissivemap,We.bumpmap,We.normalmap,We.displacementmap,We.fog,We.lights,{emissive:{value:new en(0)},specular:{value:new en(1118481)},shininess:{value:30}}]),vertexShader:Dt.meshphong_vert,fragmentShader:Dt.meshphong_frag},standard:{uniforms:Qn([We.common,We.envmap,We.aomap,We.lightmap,We.emissivemap,We.bumpmap,We.normalmap,We.displacementmap,We.roughnessmap,We.metalnessmap,We.fog,We.lights,{emissive:{value:new en(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Dt.meshphysical_vert,fragmentShader:Dt.meshphysical_frag},toon:{uniforms:Qn([We.common,We.aomap,We.lightmap,We.emissivemap,We.bumpmap,We.normalmap,We.displacementmap,We.gradientmap,We.fog,We.lights,{emissive:{value:new en(0)}}]),vertexShader:Dt.meshtoon_vert,fragmentShader:Dt.meshtoon_frag},matcap:{uniforms:Qn([We.common,We.bumpmap,We.normalmap,We.displacementmap,We.fog,{matcap:{value:null}}]),vertexShader:Dt.meshmatcap_vert,fragmentShader:Dt.meshmatcap_frag},points:{uniforms:Qn([We.points,We.fog]),vertexShader:Dt.points_vert,fragmentShader:Dt.points_frag},dashed:{uniforms:Qn([We.common,We.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Dt.linedashed_vert,fragmentShader:Dt.linedashed_frag},depth:{uniforms:Qn([We.common,We.displacementmap]),vertexShader:Dt.depth_vert,fragmentShader:Dt.depth_frag},normal:{uniforms:Qn([We.common,We.bumpmap,We.normalmap,We.displacementmap,{opacity:{value:1}}]),vertexShader:Dt.meshnormal_vert,fragmentShader:Dt.meshnormal_frag},sprite:{uniforms:Qn([We.sprite,We.fog]),vertexShader:Dt.sprite_vert,fragmentShader:Dt.sprite_frag},background:{uniforms:{uvTransform:{value:new Pt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Dt.background_vert,fragmentShader:Dt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new Pt}},vertexShader:Dt.backgroundCube_vert,fragmentShader:Dt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Dt.cube_vert,fragmentShader:Dt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Dt.equirect_vert,fragmentShader:Dt.equirect_frag},distanceRGBA:{uniforms:Qn([We.common,We.displacementmap,{referencePosition:{value:new ue},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Dt.distanceRGBA_vert,fragmentShader:Dt.distanceRGBA_frag},shadow:{uniforms:Qn([We.lights,We.fog,{color:{value:new en(0)},opacity:{value:1}}]),vertexShader:Dt.shadow_vert,fragmentShader:Dt.shadow_frag}};hi.physical={uniforms:Qn([hi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Pt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Pt},clearcoatNormalScale:{value:new Kt(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Pt},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Pt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Pt},sheen:{value:0},sheenColor:{value:new en(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Pt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Pt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Pt},transmissionSamplerSize:{value:new Kt},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Pt},attenuationDistance:{value:0},attenuationColor:{value:new en(0)},specularColor:{value:new en(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Pt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Pt},anisotropyVector:{value:new Kt},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Pt}}]),vertexShader:Dt.meshphysical_vert,fragmentShader:Dt.meshphysical_frag};const ol={r:0,b:0,g:0},Ls=new Fi,jw=new Tn;function qw(n,e,t,r,i,s,a){const o=new en(0);let c=s===!0?0:1,l,u,h=null,d=0,f=null;function p(_){let b=_.isScene===!0?_.background:null;return b&&b.isTexture&&(b=(_.backgroundBlurriness>0?t:e).get(b)),b}function x(_){let b=!1;const w=p(_);w===null?m(o,c):w&&w.isColor&&(m(w,1),b=!0);const I=n.xr.getEnvironmentBlendMode();I==="additive"?r.buffers.color.setClear(0,0,0,1,a):I==="alpha-blend"&&r.buffers.color.setClear(0,0,0,0,a),(n.autoClear||b)&&(r.buffers.depth.setTest(!0),r.buffers.depth.setMask(!0),r.buffers.color.setMask(!0),n.clear(n.autoClearColor,n.autoClearDepth,n.autoClearStencil))}function g(_,b){const w=p(b);w&&(w.isCubeTexture||w.mapping===iu)?(u===void 0&&(u=new mi(new Tc(1,1,1),new ys({name:"BackgroundCubeMaterial",uniforms:fo(hi.backgroundCube.uniforms),vertexShader:hi.backgroundCube.vertexShader,fragmentShader:hi.backgroundCube.fragmentShader,side:pr,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(I,M,D){this.matrixWorld.copyPosition(D.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(u)),Ls.copy(b.backgroundRotation),Ls.x*=-1,Ls.y*=-1,Ls.z*=-1,w.isCubeTexture&&w.isRenderTargetTexture===!1&&(Ls.y*=-1,Ls.z*=-1),u.material.uniforms.envMap.value=w,u.material.uniforms.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,u.material.uniforms.backgroundBlurriness.value=b.backgroundBlurriness,u.material.uniforms.backgroundIntensity.value=b.backgroundIntensity,u.material.uniforms.backgroundRotation.value.setFromMatrix4(jw.makeRotationFromEuler(Ls)),u.material.toneMapped=Yt.getTransfer(w.colorSpace)!==un,(h!==w||d!==w.version||f!==n.toneMapping)&&(u.material.needsUpdate=!0,h=w,d=w.version,f=n.toneMapping),u.layers.enableAll(),_.unshift(u,u.geometry,u.material,0,0,null)):w&&w.isTexture&&(l===void 0&&(l=new mi(new Cc(2,2),new ys({name:"BackgroundMaterial",uniforms:fo(hi.background.uniforms),vertexShader:hi.background.vertexShader,fragmentShader:hi.background.fragmentShader,side:gs,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(l)),l.material.uniforms.t2D.value=w,l.material.uniforms.backgroundIntensity.value=b.backgroundIntensity,l.material.toneMapped=Yt.getTransfer(w.colorSpace)!==un,w.matrixAutoUpdate===!0&&w.updateMatrix(),l.material.uniforms.uvTransform.value.copy(w.matrix),(h!==w||d!==w.version||f!==n.toneMapping)&&(l.material.needsUpdate=!0,h=w,d=w.version,f=n.toneMapping),l.layers.enableAll(),_.unshift(l,l.geometry,l.material,0,0,null))}function m(_,b){_.getRGB(ol,Gg(n)),r.buffers.color.setClear(ol.r,ol.g,ol.b,b,a)}return{getClearColor:function(){return o},setClearColor:function(_,b=1){o.set(_),c=b,m(o,c)},getClearAlpha:function(){return c},setClearAlpha:function(_){c=_,m(o,c)},render:x,addToRenderList:g}}function Kw(n,e){const t=n.getParameter(n.MAX_VERTEX_ATTRIBS),r={},i=d(null);let s=i,a=!1;function o(A,B,J,Y,ae){let le=!1;const he=h(Y,J,B);s!==he&&(s=he,l(s.object)),le=f(A,Y,J,ae),le&&p(A,Y,J,ae),ae!==null&&e.update(ae,n.ELEMENT_ARRAY_BUFFER),(le||a)&&(a=!1,w(A,B,J,Y),ae!==null&&n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e.get(ae).buffer))}function c(){return n.createVertexArray()}function l(A){return n.bindVertexArray(A)}function u(A){return n.deleteVertexArray(A)}function h(A,B,J){const Y=J.wireframe===!0;let ae=r[A.id];ae===void 0&&(ae={},r[A.id]=ae);let le=ae[B.id];le===void 0&&(le={},ae[B.id]=le);let he=le[Y];return he===void 0&&(he=d(c()),le[Y]=he),he}function d(A){const B=[],J=[],Y=[];for(let ae=0;ae<t;ae++)B[ae]=0,J[ae]=0,Y[ae]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:B,enabledAttributes:J,attributeDivisors:Y,object:A,attributes:{},index:null}}function f(A,B,J,Y){const ae=s.attributes,le=B.attributes;let he=0;const de=J.getAttributes();for(const oe in de)if(de[oe].location>=0){const He=ae[oe];let ze=le[oe];if(ze===void 0&&(oe==="instanceMatrix"&&A.instanceMatrix&&(ze=A.instanceMatrix),oe==="instanceColor"&&A.instanceColor&&(ze=A.instanceColor)),He===void 0||He.attribute!==ze||ze&&He.data!==ze.data)return!0;he++}return s.attributesNum!==he||s.index!==Y}function p(A,B,J,Y){const ae={},le=B.attributes;let he=0;const de=J.getAttributes();for(const oe in de)if(de[oe].location>=0){let He=le[oe];He===void 0&&(oe==="instanceMatrix"&&A.instanceMatrix&&(He=A.instanceMatrix),oe==="instanceColor"&&A.instanceColor&&(He=A.instanceColor));const ze={};ze.attribute=He,He&&He.data&&(ze.data=He.data),ae[oe]=ze,he++}s.attributes=ae,s.attributesNum=he,s.index=Y}function x(){const A=s.newAttributes;for(let B=0,J=A.length;B<J;B++)A[B]=0}function g(A){m(A,0)}function m(A,B){const J=s.newAttributes,Y=s.enabledAttributes,ae=s.attributeDivisors;J[A]=1,Y[A]===0&&(n.enableVertexAttribArray(A),Y[A]=1),ae[A]!==B&&(n.vertexAttribDivisor(A,B),ae[A]=B)}function _(){const A=s.newAttributes,B=s.enabledAttributes;for(let J=0,Y=B.length;J<Y;J++)B[J]!==A[J]&&(n.disableVertexAttribArray(J),B[J]=0)}function b(A,B,J,Y,ae,le,he){he===!0?n.vertexAttribIPointer(A,B,J,ae,le):n.vertexAttribPointer(A,B,J,Y,ae,le)}function w(A,B,J,Y){x();const ae=Y.attributes,le=J.getAttributes(),he=B.defaultAttributeValues;for(const de in le){const oe=le[de];if(oe.location>=0){let $e=ae[de];if($e===void 0&&(de==="instanceMatrix"&&A.instanceMatrix&&($e=A.instanceMatrix),de==="instanceColor"&&A.instanceColor&&($e=A.instanceColor)),$e!==void 0){const He=$e.normalized,ze=$e.itemSize,_t=e.get($e);if(_t===void 0)continue;const Ot=_t.buffer,xe=_t.type,Te=_t.bytesPerElement,Ge=xe===n.INT||xe===n.UNSIGNED_INT||$e.gpuType===Rg;if($e.isInterleavedBufferAttribute){const Be=$e.data,bt=Be.stride,ht=$e.offset;if(Be.isInstancedInterleavedBuffer){for(let gt=0;gt<oe.locationSize;gt++)m(oe.location+gt,Be.meshPerAttribute);A.isInstancedMesh!==!0&&Y._maxInstanceCount===void 0&&(Y._maxInstanceCount=Be.meshPerAttribute*Be.count)}else for(let gt=0;gt<oe.locationSize;gt++)g(oe.location+gt);n.bindBuffer(n.ARRAY_BUFFER,Ot);for(let gt=0;gt<oe.locationSize;gt++)b(oe.location+gt,ze/oe.locationSize,xe,He,bt*Te,(ht+ze/oe.locationSize*gt)*Te,Ge)}else{if($e.isInstancedBufferAttribute){for(let Be=0;Be<oe.locationSize;Be++)m(oe.location+Be,$e.meshPerAttribute);A.isInstancedMesh!==!0&&Y._maxInstanceCount===void 0&&(Y._maxInstanceCount=$e.meshPerAttribute*$e.count)}else for(let Be=0;Be<oe.locationSize;Be++)g(oe.location+Be);n.bindBuffer(n.ARRAY_BUFFER,Ot);for(let Be=0;Be<oe.locationSize;Be++)b(oe.location+Be,ze/oe.locationSize,xe,He,ze*Te,ze/oe.locationSize*Be*Te,Ge)}}else if(he!==void 0){const He=he[de];if(He!==void 0)switch(He.length){case 2:n.vertexAttrib2fv(oe.location,He);break;case 3:n.vertexAttrib3fv(oe.location,He);break;case 4:n.vertexAttrib4fv(oe.location,He);break;default:n.vertexAttrib1fv(oe.location,He)}}}}_()}function I(){F();for(const A in r){const B=r[A];for(const J in B){const Y=B[J];for(const ae in Y)u(Y[ae].object),delete Y[ae];delete B[J]}delete r[A]}}function M(A){if(r[A.id]===void 0)return;const B=r[A.id];for(const J in B){const Y=B[J];for(const ae in Y)u(Y[ae].object),delete Y[ae];delete B[J]}delete r[A.id]}function D(A){for(const B in r){const J=r[B];if(J[A.id]===void 0)continue;const Y=J[A.id];for(const ae in Y)u(Y[ae].object),delete Y[ae];delete J[A.id]}}function F(){N(),a=!0,s!==i&&(s=i,l(s.object))}function N(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:o,reset:F,resetDefaultState:N,dispose:I,releaseStatesOfGeometry:M,releaseStatesOfProgram:D,initAttributes:x,enableAttribute:g,disableUnusedAttributes:_}}function Yw(n,e,t){let r;function i(l){r=l}function s(l,u){n.drawArrays(r,l,u),t.update(u,r,1)}function a(l,u,h){h!==0&&(n.drawArraysInstanced(r,l,u,h),t.update(u,r,h))}function o(l,u,h){if(h===0)return;const d=e.get("WEBGL_multi_draw");if(d===null)for(let f=0;f<h;f++)this.render(l[f],u[f]);else{d.multiDrawArraysWEBGL(r,l,0,u,0,h);let f=0;for(let p=0;p<h;p++)f+=u[p];t.update(f,r,1)}}function c(l,u,h,d){if(h===0)return;const f=e.get("WEBGL_multi_draw");if(f===null)for(let p=0;p<l.length;p++)a(l[p],u[p],d[p]);else{f.multiDrawArraysInstancedWEBGL(r,l,0,u,0,d,0,h);let p=0;for(let x=0;x<h;x++)p+=u[x];for(let x=0;x<d.length;x++)t.update(p,r,d[x])}}this.setMode=i,this.render=s,this.renderInstances=a,this.renderMultiDraw=o,this.renderMultiDrawInstances=c}function Zw(n,e,t,r){let i;function s(){if(i!==void 0)return i;if(e.has("EXT_texture_filter_anisotropic")===!0){const M=e.get("EXT_texture_filter_anisotropic");i=n.getParameter(M.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function a(M){return!(M!==pi&&r.convert(M)!==n.getParameter(n.IMPLEMENTATION_COLOR_READ_FORMAT))}function o(M){const D=M===su&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(M!==xs&&r.convert(M)!==n.getParameter(n.IMPLEMENTATION_COLOR_READ_TYPE)&&M!==os&&!D)}function c(M){if(M==="highp"){if(n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.HIGH_FLOAT).precision>0&&n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.HIGH_FLOAT).precision>0)return"highp";M="mediump"}return M==="mediump"&&n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.MEDIUM_FLOAT).precision>0&&n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let l=t.precision!==void 0?t.precision:"highp";const u=c(l);u!==l&&(console.warn("THREE.WebGLRenderer:",l,"not supported, using",u,"instead."),l=u);const h=t.logarithmicDepthBuffer===!0,d=n.getParameter(n.MAX_TEXTURE_IMAGE_UNITS),f=n.getParameter(n.MAX_VERTEX_TEXTURE_IMAGE_UNITS),p=n.getParameter(n.MAX_TEXTURE_SIZE),x=n.getParameter(n.MAX_CUBE_MAP_TEXTURE_SIZE),g=n.getParameter(n.MAX_VERTEX_ATTRIBS),m=n.getParameter(n.MAX_VERTEX_UNIFORM_VECTORS),_=n.getParameter(n.MAX_VARYING_VECTORS),b=n.getParameter(n.MAX_FRAGMENT_UNIFORM_VECTORS),w=f>0,I=n.getParameter(n.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:s,getMaxPrecision:c,textureFormatReadable:a,textureTypeReadable:o,precision:l,logarithmicDepthBuffer:h,maxTextures:d,maxVertexTextures:f,maxTextureSize:p,maxCubemapSize:x,maxAttributes:g,maxVertexUniforms:m,maxVaryings:_,maxFragmentUniforms:b,vertexTextures:w,maxSamples:I}}function Jw(n){const e=this;let t=null,r=0,i=!1,s=!1;const a=new Vs,o=new Pt,c={value:null,needsUpdate:!1};this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(h,d){const f=h.length!==0||d||r!==0||i;return i=d,r=h.length,f},this.beginShadows=function(){s=!0,u(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(h,d){t=u(h,d,0)},this.setState=function(h,d,f){const p=h.clippingPlanes,x=h.clipIntersection,g=h.clipShadows,m=n.get(h);if(!i||p===null||p.length===0||s&&!g)s?u(null):l();else{const _=s?0:r,b=_*4;let w=m.clippingState||null;c.value=w,w=u(p,d,b,f);for(let I=0;I!==b;++I)w[I]=t[I];m.clippingState=w,this.numIntersection=x?this.numPlanes:0,this.numPlanes+=_}};function l(){c.value!==t&&(c.value=t,c.needsUpdate=r>0),e.numPlanes=r,e.numIntersection=0}function u(h,d,f,p){const x=h!==null?h.length:0;let g=null;if(x!==0){if(g=c.value,p!==!0||g===null){const m=f+x*4,_=d.matrixWorldInverse;o.getNormalMatrix(_),(g===null||g.length<m)&&(g=new Float32Array(m));for(let b=0,w=f;b!==x;++b,w+=4)a.copy(h[b]).applyMatrix4(_,o),a.normal.toArray(g,w),g[w+3]=a.constant}c.value=g,c.needsUpdate=!0}return e.numPlanes=x,e.numIntersection=0,g}}function Qw(n){let e=new WeakMap;function t(a,o){return o===Oh?a.mapping=oo:o===$h&&(a.mapping=co),a}function r(a){if(a&&a.isTexture){const o=a.mapping;if(o===Oh||o===$h)if(e.has(a)){const c=e.get(a).texture;return t(c,a.mapping)}else{const c=a.image;if(c&&c.height>0){const l=new ub(c.height);return l.fromEquirectangularTexture(n,a),e.set(a,l),a.addEventListener("dispose",i),t(l.texture,a.mapping)}else return null}}return a}function i(a){const o=a.target;o.removeEventListener("dispose",i);const c=e.get(o);c!==void 0&&(e.delete(o),c.dispose())}function s(){e=new WeakMap}return{get:r,dispose:s}}class e4 extends Wg{constructor(e=-1,t=1,r=1,i=-1,s=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=r,this.bottom=i,this.near=s,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,r,i,s,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=r,this.view.offsetY=i,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),r=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=r-e,a=r+e,o=i+t,c=i-t;if(this.view!==null&&this.view.enabled){const l=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=l*this.view.offsetX,a=s+l*this.view.width,o-=u*this.view.offsetY,c=o-u*this.view.height}this.projectionMatrix.makeOrthographic(s,a,o,c,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const Ja=4,Pp=[.125,.215,.35,.446,.526,.582],Hs=20,rh=new e4,Op=new en;let ih=null,sh=0,ah=0,oh=!1;const zs=(1+Math.sqrt(5))/2,ja=1/zs,$p=[new ue(-zs,ja,0),new ue(zs,ja,0),new ue(-ja,0,zs),new ue(ja,0,zs),new ue(0,zs,-ja),new ue(0,zs,ja),new ue(-1,1,-1),new ue(1,1,-1),new ue(-1,1,1),new ue(1,1,1)];class Lp{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,r=.1,i=100){ih=this._renderer.getRenderTarget(),sh=this._renderer.getActiveCubeFace(),ah=this._renderer.getActiveMipmapLevel(),oh=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,r,i,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Up(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Fp(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(ih,sh,ah),this._renderer.xr.enabled=oh,e.scissorTest=!1,cl(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===oo||e.mapping===co?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),ih=this._renderer.getRenderTarget(),sh=this._renderer.getActiveCubeFace(),ah=this._renderer.getActiveMipmapLevel(),oh=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const r=t||this._allocateTargets();return this._textureToCubeUV(e,r),this._applyPMREM(r),this._cleanup(r),r}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,r={magFilter:ni,minFilter:ni,generateMipmaps:!1,type:su,format:pi,colorSpace:Es,depthBuffer:!1},i=kp(e,t,r);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=kp(e,t,r);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=t4(s)),this._blurMaterial=n4(s,e,t)}return i}_compileMaterial(e){const t=new mi(this._lodPlanes[0],e);this._renderer.compile(t,rh)}_sceneToCubeUV(e,t,r,i){const o=new Lr(90,1,t,r),c=[1,-1,1,1,1,1],l=[1,1,1,-1,-1,-1],u=this._renderer,h=u.autoClear,d=u.toneMapping;u.getClearColor(Op),u.toneMapping=hs,u.autoClear=!1;const f=new $d({name:"PMREM.Background",side:pr,depthWrite:!1,depthTest:!1}),p=new mi(new Tc,f);let x=!1;const g=e.background;g?g.isColor&&(f.color.copy(g),e.background=null,x=!0):(f.color.copy(Op),x=!0);for(let m=0;m<6;m++){const _=m%3;_===0?(o.up.set(0,c[m],0),o.lookAt(l[m],0,0)):_===1?(o.up.set(0,0,c[m]),o.lookAt(0,l[m],0)):(o.up.set(0,c[m],0),o.lookAt(0,0,l[m]));const b=this._cubeSize;cl(i,_*b,m>2?b:0,b,b),u.setRenderTarget(i),x&&u.render(p,o),u.render(e,o)}p.geometry.dispose(),p.material.dispose(),u.toneMapping=d,u.autoClear=h,e.background=g}_textureToCubeUV(e,t){const r=this._renderer,i=e.mapping===oo||e.mapping===co;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=Up()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Fp());const s=i?this._cubemapMaterial:this._equirectMaterial,a=new mi(this._lodPlanes[0],s),o=s.uniforms;o.envMap.value=e;const c=this._cubeSize;cl(t,0,0,3*c,2*c),r.setRenderTarget(t),r.render(a,rh)}_applyPMREM(e){const t=this._renderer,r=t.autoClear;t.autoClear=!1;const i=this._lodPlanes.length;for(let s=1;s<i;s++){const a=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),o=$p[(i-s-1)%$p.length];this._blur(e,s-1,s,a,o)}t.autoClear=r}_blur(e,t,r,i,s){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,r,i,"latitudinal",s),this._halfBlur(a,e,r,r,i,"longitudinal",s)}_halfBlur(e,t,r,i,s,a,o){const c=this._renderer,l=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,h=new mi(this._lodPlanes[i],l),d=l.uniforms,f=this._sizeLods[r]-1,p=isFinite(s)?Math.PI/(2*f):2*Math.PI/(2*Hs-1),x=s/p,g=isFinite(s)?1+Math.floor(u*x):Hs;g>Hs&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${Hs}`);const m=[];let _=0;for(let D=0;D<Hs;++D){const F=D/x,N=Math.exp(-F*F/2);m.push(N),D===0?_+=N:D<g&&(_+=2*N)}for(let D=0;D<m.length;D++)m[D]=m[D]/_;d.envMap.value=e.texture,d.samples.value=g,d.weights.value=m,d.latitudinal.value=a==="latitudinal",o&&(d.poleAxis.value=o);const{_lodMax:b}=this;d.dTheta.value=p,d.mipInt.value=b-r;const w=this._sizeLods[i],I=3*w*(i>b-Ja?i-b+Ja:0),M=4*(this._cubeSize-w);cl(t,I,M,3*w,2*w),c.setRenderTarget(t),c.render(h,rh)}}function t4(n){const e=[],t=[],r=[];let i=n;const s=n-Ja+1+Pp.length;for(let a=0;a<s;a++){const o=Math.pow(2,i);t.push(o);let c=1/o;a>n-Ja?c=Pp[a-n+Ja-1]:a===0&&(c=0),r.push(c);const l=1/(o-2),u=-l,h=1+l,d=[u,u,h,u,h,h,u,u,h,h,u,h],f=6,p=6,x=3,g=2,m=1,_=new Float32Array(x*p*f),b=new Float32Array(g*p*f),w=new Float32Array(m*p*f);for(let M=0;M<f;M++){const D=M%3*2/3-1,F=M>2?0:-1,N=[D,F,0,D+2/3,F,0,D+2/3,F+1,0,D,F,0,D+2/3,F+1,0,D,F+1,0];_.set(N,x*p*M),b.set(d,g*p*M);const A=[M,M,M,M,M,M];w.set(A,m*p*M)}const I=new ya;I.setAttribute("position",new yi(_,x)),I.setAttribute("uv",new yi(b,g)),I.setAttribute("faceIndex",new yi(w,m)),e.push(I),i>Ja&&i--}return{lodPlanes:e,sizeLods:t,sigmas:r}}function kp(n,e,t){const r=new sa(n,e,t);return r.texture.mapping=iu,r.texture.name="PMREM.cubeUv",r.scissorTest=!0,r}function cl(n,e,t,r,i){n.viewport.set(e,t,r,i),n.scissor.set(e,t,r,i)}function n4(n,e,t){const r=new Float32Array(Hs),i=new ue(0,1,0);return new ys({name:"SphericalGaussianBlur",defines:{n:Hs,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${n}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:r},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Ld(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:us,depthTest:!1,depthWrite:!1})}function Fp(){return new ys({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Ld(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:us,depthTest:!1,depthWrite:!1})}function Up(){return new ys({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Ld(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:us,depthTest:!1,depthWrite:!1})}function Ld(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function r4(n){let e=new WeakMap,t=null;function r(o){if(o&&o.isTexture){const c=o.mapping,l=c===Oh||c===$h,u=c===oo||c===co;if(l||u){let h=e.get(o);const d=h!==void 0?h.texture.pmremVersion:0;if(o.isRenderTargetTexture&&o.pmremVersion!==d)return t===null&&(t=new Lp(n)),h=l?t.fromEquirectangular(o,h):t.fromCubemap(o,h),h.texture.pmremVersion=o.pmremVersion,e.set(o,h),h.texture;if(h!==void 0)return h.texture;{const f=o.image;return l&&f&&f.height>0||u&&f&&i(f)?(t===null&&(t=new Lp(n)),h=l?t.fromEquirectangular(o):t.fromCubemap(o),h.texture.pmremVersion=o.pmremVersion,e.set(o,h),o.addEventListener("dispose",s),h.texture):null}}}return o}function i(o){let c=0;const l=6;for(let u=0;u<l;u++)o[u]!==void 0&&c++;return c===l}function s(o){const c=o.target;c.removeEventListener("dispose",s);const l=e.get(c);l!==void 0&&(e.delete(c),l.dispose())}function a(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:r,dispose:a}}function i4(n){const e={};function t(r){if(e[r]!==void 0)return e[r];let i;switch(r){case"WEBGL_depth_texture":i=n.getExtension("WEBGL_depth_texture")||n.getExtension("MOZ_WEBGL_depth_texture")||n.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=n.getExtension("WEBGL_compressed_texture_pvrtc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=n.getExtension(r)}return e[r]=i,i}return{has:function(r){return t(r)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(r){const i=t(r);return i===null&&Lg("THREE.WebGLRenderer: "+r+" extension not supported."),i}}}function s4(n,e,t,r){const i={},s=new WeakMap;function a(h){const d=h.target;d.index!==null&&e.remove(d.index);for(const p in d.attributes)e.remove(d.attributes[p]);for(const p in d.morphAttributes){const x=d.morphAttributes[p];for(let g=0,m=x.length;g<m;g++)e.remove(x[g])}d.removeEventListener("dispose",a),delete i[d.id];const f=s.get(d);f&&(e.remove(f),s.delete(d)),r.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,t.memory.geometries--}function o(h,d){return i[d.id]===!0||(d.addEventListener("dispose",a),i[d.id]=!0,t.memory.geometries++),d}function c(h){const d=h.attributes;for(const p in d)e.update(d[p],n.ARRAY_BUFFER);const f=h.morphAttributes;for(const p in f){const x=f[p];for(let g=0,m=x.length;g<m;g++)e.update(x[g],n.ARRAY_BUFFER)}}function l(h){const d=[],f=h.index,p=h.attributes.position;let x=0;if(f!==null){const _=f.array;x=f.version;for(let b=0,w=_.length;b<w;b+=3){const I=_[b+0],M=_[b+1],D=_[b+2];d.push(I,M,M,D,D,I)}}else if(p!==void 0){const _=p.array;x=p.version;for(let b=0,w=_.length/3-1;b<w;b+=3){const I=b+0,M=b+1,D=b+2;d.push(I,M,M,D,D,I)}}else return;const g=new($g(d)?zg:Vg)(d,1);g.version=x;const m=s.get(h);m&&e.remove(m),s.set(h,g)}function u(h){const d=s.get(h);if(d){const f=h.index;f!==null&&d.version<f.version&&l(h)}else l(h);return s.get(h)}return{get:o,update:c,getWireframeAttribute:u}}function a4(n,e,t){let r;function i(d){r=d}let s,a;function o(d){s=d.type,a=d.bytesPerElement}function c(d,f){n.drawElements(r,f,s,d*a),t.update(f,r,1)}function l(d,f,p){p!==0&&(n.drawElementsInstanced(r,f,s,d*a,p),t.update(f,r,p))}function u(d,f,p){if(p===0)return;const x=e.get("WEBGL_multi_draw");if(x===null)for(let g=0;g<p;g++)this.render(d[g]/a,f[g]);else{x.multiDrawElementsWEBGL(r,f,0,s,d,0,p);let g=0;for(let m=0;m<p;m++)g+=f[m];t.update(g,r,1)}}function h(d,f,p,x){if(p===0)return;const g=e.get("WEBGL_multi_draw");if(g===null)for(let m=0;m<d.length;m++)l(d[m]/a,f[m],x[m]);else{g.multiDrawElementsInstancedWEBGL(r,f,0,s,d,0,x,0,p);let m=0;for(let _=0;_<p;_++)m+=f[_];for(let _=0;_<x.length;_++)t.update(m,r,x[_])}}this.setMode=i,this.setIndex=o,this.render=c,this.renderInstances=l,this.renderMultiDraw=u,this.renderMultiDrawInstances=h}function o4(n){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function r(s,a,o){switch(t.calls++,a){case n.TRIANGLES:t.triangles+=o*(s/3);break;case n.LINES:t.lines+=o*(s/2);break;case n.LINE_STRIP:t.lines+=o*(s-1);break;case n.LINE_LOOP:t.lines+=o*s;break;case n.POINTS:t.points+=o*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:r}}function c4(n,e,t){const r=new WeakMap,i=new Vn;function s(a,o,c){const l=a.morphTargetInfluences,u=o.morphAttributes.position||o.morphAttributes.normal||o.morphAttributes.color,h=u!==void 0?u.length:0;let d=r.get(o);if(d===void 0||d.count!==h){let A=function(){F.dispose(),r.delete(o),o.removeEventListener("dispose",A)};var f=A;d!==void 0&&d.texture.dispose();const p=o.morphAttributes.position!==void 0,x=o.morphAttributes.normal!==void 0,g=o.morphAttributes.color!==void 0,m=o.morphAttributes.position||[],_=o.morphAttributes.normal||[],b=o.morphAttributes.color||[];let w=0;p===!0&&(w=1),x===!0&&(w=2),g===!0&&(w=3);let I=o.attributes.position.count*w,M=1;I>e.maxTextureSize&&(M=Math.ceil(I/e.maxTextureSize),I=e.maxTextureSize);const D=new Float32Array(I*M*4*h),F=new Fg(D,I,M,h);F.type=os,F.needsUpdate=!0;const N=w*4;for(let B=0;B<h;B++){const J=m[B],Y=_[B],ae=b[B],le=I*M*4*B;for(let he=0;he<J.count;he++){const de=he*N;p===!0&&(i.fromBufferAttribute(J,he),D[le+de+0]=i.x,D[le+de+1]=i.y,D[le+de+2]=i.z,D[le+de+3]=0),x===!0&&(i.fromBufferAttribute(Y,he),D[le+de+4]=i.x,D[le+de+5]=i.y,D[le+de+6]=i.z,D[le+de+7]=0),g===!0&&(i.fromBufferAttribute(ae,he),D[le+de+8]=i.x,D[le+de+9]=i.y,D[le+de+10]=i.z,D[le+de+11]=ae.itemSize===4?i.w:1)}}d={count:h,texture:F,size:new Kt(I,M)},r.set(o,d),o.addEventListener("dispose",A)}if(a.isInstancedMesh===!0&&a.morphTexture!==null)c.getUniforms().setValue(n,"morphTexture",a.morphTexture,t);else{let p=0;for(let g=0;g<l.length;g++)p+=l[g];const x=o.morphTargetsRelative?1:1-p;c.getUniforms().setValue(n,"morphTargetBaseInfluence",x),c.getUniforms().setValue(n,"morphTargetInfluences",l)}c.getUniforms().setValue(n,"morphTargetsTexture",d.texture,t),c.getUniforms().setValue(n,"morphTargetsTextureSize",d.size)}return{update:s}}function l4(n,e,t,r){let i=new WeakMap;function s(c){const l=r.render.frame,u=c.geometry,h=e.get(c,u);if(i.get(h)!==l&&(e.update(h),i.set(h,l)),c.isInstancedMesh&&(c.hasEventListener("dispose",o)===!1&&c.addEventListener("dispose",o),i.get(c)!==l&&(t.update(c.instanceMatrix,n.ARRAY_BUFFER),c.instanceColor!==null&&t.update(c.instanceColor,n.ARRAY_BUFFER),i.set(c,l))),c.isSkinnedMesh){const d=c.skeleton;i.get(d)!==l&&(d.update(),i.set(d,l))}return h}function a(){i=new WeakMap}function o(c){const l=c.target;l.removeEventListener("dispose",o),t.remove(l.instanceMatrix),l.instanceColor!==null&&t.remove(l.instanceColor)}return{update:s,dispose:a}}class qg extends tr{constructor(e,t,r,i,s,a,o,c,l,u=to){if(u!==to&&u!==ho)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");r===void 0&&u===to&&(r=lo),r===void 0&&u===ho&&(r=uo),super(null,i,s,a,o,c,u,r,l),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=o!==void 0?o:Ur,this.minFilter=c!==void 0?c:Ur,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}const Kg=new tr,Yg=new qg(1,1);Yg.compareFunction=Og;const Zg=new Fg,Jg=new j_,Qg=new Hg,Bp=[],Vp=[],zp=new Float32Array(16),Gp=new Float32Array(9),Wp=new Float32Array(4);function Eo(n,e,t){const r=n[0];if(r<=0||r>0)return n;const i=e*t;let s=Bp[i];if(s===void 0&&(s=new Float32Array(i),Bp[i]=s),e!==0){r.toArray(s,0);for(let a=1,o=0;a!==e;++a)o+=t,n[a].toArray(s,o)}return s}function Cn(n,e){if(n.length!==e.length)return!1;for(let t=0,r=n.length;t<r;t++)if(n[t]!==e[t])return!1;return!0}function An(n,e){for(let t=0,r=e.length;t<r;t++)n[t]=e[t]}function cu(n,e){let t=Vp[e];t===void 0&&(t=new Int32Array(e),Vp[e]=t);for(let r=0;r!==e;++r)t[r]=n.allocateTextureUnit();return t}function u4(n,e){const t=this.cache;t[0]!==e&&(n.uniform1f(this.addr,e),t[0]=e)}function h4(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Cn(t,e))return;n.uniform2fv(this.addr,e),An(t,e)}}function d4(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(n.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(Cn(t,e))return;n.uniform3fv(this.addr,e),An(t,e)}}function f4(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Cn(t,e))return;n.uniform4fv(this.addr,e),An(t,e)}}function p4(n,e){const t=this.cache,r=e.elements;if(r===void 0){if(Cn(t,e))return;n.uniformMatrix2fv(this.addr,!1,e),An(t,e)}else{if(Cn(t,r))return;Wp.set(r),n.uniformMatrix2fv(this.addr,!1,Wp),An(t,r)}}function m4(n,e){const t=this.cache,r=e.elements;if(r===void 0){if(Cn(t,e))return;n.uniformMatrix3fv(this.addr,!1,e),An(t,e)}else{if(Cn(t,r))return;Gp.set(r),n.uniformMatrix3fv(this.addr,!1,Gp),An(t,r)}}function g4(n,e){const t=this.cache,r=e.elements;if(r===void 0){if(Cn(t,e))return;n.uniformMatrix4fv(this.addr,!1,e),An(t,e)}else{if(Cn(t,r))return;zp.set(r),n.uniformMatrix4fv(this.addr,!1,zp),An(t,r)}}function x4(n,e){const t=this.cache;t[0]!==e&&(n.uniform1i(this.addr,e),t[0]=e)}function y4(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Cn(t,e))return;n.uniform2iv(this.addr,e),An(t,e)}}function v4(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Cn(t,e))return;n.uniform3iv(this.addr,e),An(t,e)}}function _4(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Cn(t,e))return;n.uniform4iv(this.addr,e),An(t,e)}}function b4(n,e){const t=this.cache;t[0]!==e&&(n.uniform1ui(this.addr,e),t[0]=e)}function S4(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Cn(t,e))return;n.uniform2uiv(this.addr,e),An(t,e)}}function w4(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Cn(t,e))return;n.uniform3uiv(this.addr,e),An(t,e)}}function E4(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Cn(t,e))return;n.uniform4uiv(this.addr,e),An(t,e)}}function T4(n,e,t){const r=this.cache,i=t.allocateTextureUnit();r[0]!==i&&(n.uniform1i(this.addr,i),r[0]=i);const s=this.type===n.SAMPLER_2D_SHADOW?Yg:Kg;t.setTexture2D(e||s,i)}function C4(n,e,t){const r=this.cache,i=t.allocateTextureUnit();r[0]!==i&&(n.uniform1i(this.addr,i),r[0]=i),t.setTexture3D(e||Jg,i)}function A4(n,e,t){const r=this.cache,i=t.allocateTextureUnit();r[0]!==i&&(n.uniform1i(this.addr,i),r[0]=i),t.setTextureCube(e||Qg,i)}function R4(n,e,t){const r=this.cache,i=t.allocateTextureUnit();r[0]!==i&&(n.uniform1i(this.addr,i),r[0]=i),t.setTexture2DArray(e||Zg,i)}function N4(n){switch(n){case 5126:return u4;case 35664:return h4;case 35665:return d4;case 35666:return f4;case 35674:return p4;case 35675:return m4;case 35676:return g4;case 5124:case 35670:return x4;case 35667:case 35671:return y4;case 35668:case 35672:return v4;case 35669:case 35673:return _4;case 5125:return b4;case 36294:return S4;case 36295:return w4;case 36296:return E4;case 35678:case 36198:case 36298:case 36306:case 35682:return T4;case 35679:case 36299:case 36307:return C4;case 35680:case 36300:case 36308:case 36293:return A4;case 36289:case 36303:case 36311:case 36292:return R4}}function M4(n,e){n.uniform1fv(this.addr,e)}function I4(n,e){const t=Eo(e,this.size,2);n.uniform2fv(this.addr,t)}function D4(n,e){const t=Eo(e,this.size,3);n.uniform3fv(this.addr,t)}function P4(n,e){const t=Eo(e,this.size,4);n.uniform4fv(this.addr,t)}function O4(n,e){const t=Eo(e,this.size,4);n.uniformMatrix2fv(this.addr,!1,t)}function $4(n,e){const t=Eo(e,this.size,9);n.uniformMatrix3fv(this.addr,!1,t)}function L4(n,e){const t=Eo(e,this.size,16);n.uniformMatrix4fv(this.addr,!1,t)}function k4(n,e){n.uniform1iv(this.addr,e)}function F4(n,e){n.uniform2iv(this.addr,e)}function U4(n,e){n.uniform3iv(this.addr,e)}function B4(n,e){n.uniform4iv(this.addr,e)}function V4(n,e){n.uniform1uiv(this.addr,e)}function z4(n,e){n.uniform2uiv(this.addr,e)}function G4(n,e){n.uniform3uiv(this.addr,e)}function W4(n,e){n.uniform4uiv(this.addr,e)}function H4(n,e,t){const r=this.cache,i=e.length,s=cu(t,i);Cn(r,s)||(n.uniform1iv(this.addr,s),An(r,s));for(let a=0;a!==i;++a)t.setTexture2D(e[a]||Kg,s[a])}function X4(n,e,t){const r=this.cache,i=e.length,s=cu(t,i);Cn(r,s)||(n.uniform1iv(this.addr,s),An(r,s));for(let a=0;a!==i;++a)t.setTexture3D(e[a]||Jg,s[a])}function j4(n,e,t){const r=this.cache,i=e.length,s=cu(t,i);Cn(r,s)||(n.uniform1iv(this.addr,s),An(r,s));for(let a=0;a!==i;++a)t.setTextureCube(e[a]||Qg,s[a])}function q4(n,e,t){const r=this.cache,i=e.length,s=cu(t,i);Cn(r,s)||(n.uniform1iv(this.addr,s),An(r,s));for(let a=0;a!==i;++a)t.setTexture2DArray(e[a]||Zg,s[a])}function K4(n){switch(n){case 5126:return M4;case 35664:return I4;case 35665:return D4;case 35666:return P4;case 35674:return O4;case 35675:return $4;case 35676:return L4;case 5124:case 35670:return k4;case 35667:case 35671:return F4;case 35668:case 35672:return U4;case 35669:case 35673:return B4;case 5125:return V4;case 36294:return z4;case 36295:return G4;case 36296:return W4;case 35678:case 36198:case 36298:case 36306:case 35682:return H4;case 35679:case 36299:case 36307:return X4;case 35680:case 36300:case 36308:case 36293:return j4;case 36289:case 36303:case 36311:case 36292:return q4}}class Y4{constructor(e,t,r){this.id=e,this.addr=r,this.cache=[],this.type=t.type,this.setValue=N4(t.type)}}class Z4{constructor(e,t,r){this.id=e,this.addr=r,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=K4(t.type)}}class J4{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,r){const i=this.seq;for(let s=0,a=i.length;s!==a;++s){const o=i[s];o.setValue(e,t[o.id],r)}}}const ch=/(\w+)(\])?(\[|\.)?/g;function Hp(n,e){n.seq.push(e),n.map[e.id]=e}function Q4(n,e,t){const r=n.name,i=r.length;for(ch.lastIndex=0;;){const s=ch.exec(r),a=ch.lastIndex;let o=s[1];const c=s[2]==="]",l=s[3];if(c&&(o=o|0),l===void 0||l==="["&&a+2===i){Hp(t,l===void 0?new Y4(o,n,e):new Z4(o,n,e));break}else{let h=t.map[o];h===void 0&&(h=new J4(o),Hp(t,h)),t=h}}}class bl{constructor(e,t){this.seq=[],this.map={};const r=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<r;++i){const s=e.getActiveUniform(t,i),a=e.getUniformLocation(t,s.name);Q4(s,a,this)}}setValue(e,t,r,i){const s=this.map[t];s!==void 0&&s.setValue(e,r,i)}setOptional(e,t,r){const i=t[r];i!==void 0&&this.setValue(e,r,i)}static upload(e,t,r,i){for(let s=0,a=t.length;s!==a;++s){const o=t[s],c=r[o.id];c.needsUpdate!==!1&&o.setValue(e,c.value,i)}}static seqWithValue(e,t){const r=[];for(let i=0,s=e.length;i!==s;++i){const a=e[i];a.id in t&&r.push(a)}return r}}function Xp(n,e,t){const r=n.createShader(e);return n.shaderSource(r,t),n.compileShader(r),r}const eE=37297;let tE=0;function nE(n,e){const t=n.split(`
`),r=[],i=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let a=i;a<s;a++){const o=a+1;r.push(`${o===e?">":" "} ${o}: ${t[a]}`)}return r.join(`
`)}function rE(n){const e=Yt.getPrimaries(Yt.workingColorSpace),t=Yt.getPrimaries(n);let r;switch(e===t?r="":e===Ol&&t===Pl?r="LinearDisplayP3ToLinearSRGB":e===Pl&&t===Ol&&(r="LinearSRGBToLinearDisplayP3"),n){case Es:case au:return[r,"LinearTransferOETF"];case Jr:case Pd:return[r,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",n),[r,"LinearTransferOETF"]}}function jp(n,e,t){const r=n.getShaderParameter(e,n.COMPILE_STATUS),i=n.getShaderInfoLog(e).trim();if(r&&i==="")return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const a=parseInt(s[1]);return t.toUpperCase()+`

`+i+`

`+nE(n.getShaderSource(e),a)}else return i}function iE(n,e){const t=rE(e);return`vec4 ${n}( vec4 value ) { return ${t[0]}( ${t[1]}( value ) ); }`}function sE(n,e){let t;switch(e){case u_:t="Linear";break;case h_:t="Reinhard";break;case d_:t="OptimizedCineon";break;case f_:t="ACESFilmic";break;case m_:t="AgX";break;case g_:t="Neutral";break;case p_:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+n+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function aE(n){return[n.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",n.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(tc).join(`
`)}function oE(n){const e=[];for(const t in n){const r=n[t];r!==!1&&e.push("#define "+t+" "+r)}return e.join(`
`)}function cE(n,e){const t={},r=n.getProgramParameter(e,n.ACTIVE_ATTRIBUTES);for(let i=0;i<r;i++){const s=n.getActiveAttrib(e,i),a=s.name;let o=1;s.type===n.FLOAT_MAT2&&(o=2),s.type===n.FLOAT_MAT3&&(o=3),s.type===n.FLOAT_MAT4&&(o=4),t[a]={type:s.type,location:n.getAttribLocation(e,a),locationSize:o}}return t}function tc(n){return n!==""}function qp(n,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return n.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Kp(n,e){return n.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const lE=/^[ \t]*#include +<([\w\d./]+)>/gm;function Uh(n){return n.replace(lE,hE)}const uE=new Map;function hE(n,e){let t=Dt[e];if(t===void 0){const r=uE.get(e);if(r!==void 0)t=Dt[r],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,r);else throw new Error("Can not resolve #include <"+e+">")}return Uh(t)}const dE=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Yp(n){return n.replace(dE,fE)}function fE(n,e,t,r){let i="";for(let s=parseInt(e);s<parseInt(t);s++)i+=r.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function Zp(n){let e=`precision ${n.precision} float;
	precision ${n.precision} int;
	precision ${n.precision} sampler2D;
	precision ${n.precision} samplerCube;
	precision ${n.precision} sampler3D;
	precision ${n.precision} sampler2DArray;
	precision ${n.precision} sampler2DShadow;
	precision ${n.precision} samplerCubeShadow;
	precision ${n.precision} sampler2DArrayShadow;
	precision ${n.precision} isampler2D;
	precision ${n.precision} isampler3D;
	precision ${n.precision} isamplerCube;
	precision ${n.precision} isampler2DArray;
	precision ${n.precision} usampler2D;
	precision ${n.precision} usampler3D;
	precision ${n.precision} usamplerCube;
	precision ${n.precision} usampler2DArray;
	`;return n.precision==="highp"?e+=`
#define HIGH_PRECISION`:n.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:n.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function pE(n){let e="SHADOWMAP_TYPE_BASIC";return n.shadowMapType===Tg?e="SHADOWMAP_TYPE_PCF":n.shadowMapType===L3?e="SHADOWMAP_TYPE_PCF_SOFT":n.shadowMapType===Ii&&(e="SHADOWMAP_TYPE_VSM"),e}function mE(n){let e="ENVMAP_TYPE_CUBE";if(n.envMap)switch(n.envMapMode){case oo:case co:e="ENVMAP_TYPE_CUBE";break;case iu:e="ENVMAP_TYPE_CUBE_UV";break}return e}function gE(n){let e="ENVMAP_MODE_REFLECTION";if(n.envMap)switch(n.envMapMode){case co:e="ENVMAP_MODE_REFRACTION";break}return e}function xE(n){let e="ENVMAP_BLENDING_NONE";if(n.envMap)switch(n.combine){case Cg:e="ENVMAP_BLENDING_MULTIPLY";break;case c_:e="ENVMAP_BLENDING_MIX";break;case l_:e="ENVMAP_BLENDING_ADD";break}return e}function yE(n){const e=n.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,r=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:r,maxMip:t}}function vE(n,e,t,r){const i=n.getContext(),s=t.defines;let a=t.vertexShader,o=t.fragmentShader;const c=pE(t),l=mE(t),u=gE(t),h=xE(t),d=yE(t),f=aE(t),p=oE(s),x=i.createProgram();let g,m,_=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(g=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(tc).join(`
`),g.length>0&&(g+=`
`),m=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(tc).join(`
`),m.length>0&&(m+=`
`)):(g=[Zp(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(tc).join(`
`),m=[Zp(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+l:"",t.envMap?"#define "+u:"",t.envMap?"#define "+h:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==hs?"#define TONE_MAPPING":"",t.toneMapping!==hs?Dt.tonemapping_pars_fragment:"",t.toneMapping!==hs?sE("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",Dt.colorspace_pars_fragment,iE("linearToOutputTexel",t.outputColorSpace),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(tc).join(`
`)),a=Uh(a),a=qp(a,t),a=Kp(a,t),o=Uh(o),o=qp(o,t),o=Kp(o,t),a=Yp(a),o=Yp(o),t.isRawShaderMaterial!==!0&&(_=`#version 300 es
`,g=[f,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+g,m=["#define varying in",t.glslVersion===fp?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===fp?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+m);const b=_+g+a,w=_+m+o,I=Xp(i,i.VERTEX_SHADER,b),M=Xp(i,i.FRAGMENT_SHADER,w);i.attachShader(x,I),i.attachShader(x,M),t.index0AttributeName!==void 0?i.bindAttribLocation(x,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(x,0,"position"),i.linkProgram(x);function D(B){if(n.debug.checkShaderErrors){const J=i.getProgramInfoLog(x).trim(),Y=i.getShaderInfoLog(I).trim(),ae=i.getShaderInfoLog(M).trim();let le=!0,he=!0;if(i.getProgramParameter(x,i.LINK_STATUS)===!1)if(le=!1,typeof n.debug.onShaderError=="function")n.debug.onShaderError(i,x,I,M);else{const de=jp(i,I,"vertex"),oe=jp(i,M,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(x,i.VALIDATE_STATUS)+`

Material Name: `+B.name+`
Material Type: `+B.type+`

Program Info Log: `+J+`
`+de+`
`+oe)}else J!==""?console.warn("THREE.WebGLProgram: Program Info Log:",J):(Y===""||ae==="")&&(he=!1);he&&(B.diagnostics={runnable:le,programLog:J,vertexShader:{log:Y,prefix:g},fragmentShader:{log:ae,prefix:m}})}i.deleteShader(I),i.deleteShader(M),F=new bl(i,x),N=cE(i,x)}let F;this.getUniforms=function(){return F===void 0&&D(this),F};let N;this.getAttributes=function(){return N===void 0&&D(this),N};let A=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return A===!1&&(A=i.getProgramParameter(x,eE)),A},this.destroy=function(){r.releaseStatesOfProgram(this),i.deleteProgram(x),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=tE++,this.cacheKey=e,this.usedTimes=1,this.program=x,this.vertexShader=I,this.fragmentShader=M,this}let _E=0;class bE{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,r=e.fragmentShader,i=this._getShaderStage(t),s=this._getShaderStage(r),a=this._getShaderCacheForMaterial(e);return a.has(i)===!1&&(a.add(i),i.usedTimes++),a.has(s)===!1&&(a.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const r of t)r.usedTimes--,r.usedTimes===0&&this.shaderCache.delete(r.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let r=t.get(e);return r===void 0&&(r=new Set,t.set(e,r)),r}_getShaderStage(e){const t=this.shaderCache;let r=t.get(e);return r===void 0&&(r=new SE(e),t.set(e,r)),r}}class SE{constructor(e){this.id=_E++,this.code=e,this.usedTimes=0}}function wE(n,e,t,r,i,s,a){const o=new Ug,c=new bE,l=new Set,u=[],h=i.logarithmicDepthBuffer,d=i.vertexTextures;let f=i.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function x(N){return l.add(N),N===0?"uv":`uv${N}`}function g(N,A,B,J,Y){const ae=J.fog,le=Y.geometry,he=N.isMeshStandardMaterial?J.environment:null,de=(N.isMeshStandardMaterial?t:e).get(N.envMap||he),oe=de&&de.mapping===iu?de.image.height:null,$e=p[N.type];N.precision!==null&&(f=i.getMaxPrecision(N.precision),f!==N.precision&&console.warn("THREE.WebGLProgram.getParameters:",N.precision,"not supported, using",f,"instead."));const He=le.morphAttributes.position||le.morphAttributes.normal||le.morphAttributes.color,ze=He!==void 0?He.length:0;let _t=0;le.morphAttributes.position!==void 0&&(_t=1),le.morphAttributes.normal!==void 0&&(_t=2),le.morphAttributes.color!==void 0&&(_t=3);let Ot,xe,Te,Ge;if($e){const Ft=hi[$e];Ot=Ft.vertexShader,xe=Ft.fragmentShader}else Ot=N.vertexShader,xe=N.fragmentShader,c.update(N),Te=c.getVertexShaderID(N),Ge=c.getFragmentShaderID(N);const Be=n.getRenderTarget(),bt=Y.isInstancedMesh===!0,ht=Y.isBatchedMesh===!0,gt=!!N.map,j=!!N.matcap,wt=!!de,Et=!!N.aoMap,qt=!!N.lightMap,rt=!!N.bumpMap,St=!!N.normalMap,xt=!!N.displacementMap,lt=!!N.emissiveMap,Ht=!!N.metalnessMap,W=!!N.roughnessMap,P=N.anisotropy>0,ce=N.clearcoat>0,be=N.dispersion>0,we=N.iridescence>0,Se=N.sheen>0,Ze=N.transmission>0,Fe=P&&!!N.anisotropyMap,De=ce&&!!N.clearcoatMap,pt=ce&&!!N.clearcoatNormalMap,Ne=ce&&!!N.clearcoatRoughnessMap,et=we&&!!N.iridescenceMap,At=we&&!!N.iridescenceThicknessMap,ft=Se&&!!N.sheenColorMap,Me=Se&&!!N.sheenRoughnessMap,tt=!!N.specularMap,at=!!N.specularColorMap,kt=!!N.specularIntensityMap,K=Ze&&!!N.transmissionMap,Ee=Ze&&!!N.thicknessMap,fe=!!N.gradientMap,ve=!!N.alphaMap,Ce=N.alphaTest>0,it=!!N.alphaHash,qe=!!N.extensions;let nn=hs;N.toneMapped&&(Be===null||Be.isXRRenderTarget===!0)&&(nn=n.toneMapping);const ln={shaderID:$e,shaderType:N.type,shaderName:N.name,vertexShader:Ot,fragmentShader:xe,defines:N.defines,customVertexShaderID:Te,customFragmentShaderID:Ge,isRawShaderMaterial:N.isRawShaderMaterial===!0,glslVersion:N.glslVersion,precision:f,batching:ht,batchingColor:ht&&Y._colorsTexture!==null,instancing:bt,instancingColor:bt&&Y.instanceColor!==null,instancingMorph:bt&&Y.morphTexture!==null,supportsVertexTextures:d,outputColorSpace:Be===null?n.outputColorSpace:Be.isXRRenderTarget===!0?Be.texture.colorSpace:Es,alphaToCoverage:!!N.alphaToCoverage,map:gt,matcap:j,envMap:wt,envMapMode:wt&&de.mapping,envMapCubeUVHeight:oe,aoMap:Et,lightMap:qt,bumpMap:rt,normalMap:St,displacementMap:d&&xt,emissiveMap:lt,normalMapObjectSpace:St&&N.normalMapType===I_,normalMapTangentSpace:St&&N.normalMapType===M_,metalnessMap:Ht,roughnessMap:W,anisotropy:P,anisotropyMap:Fe,clearcoat:ce,clearcoatMap:De,clearcoatNormalMap:pt,clearcoatRoughnessMap:Ne,dispersion:be,iridescence:we,iridescenceMap:et,iridescenceThicknessMap:At,sheen:Se,sheenColorMap:ft,sheenRoughnessMap:Me,specularMap:tt,specularColorMap:at,specularIntensityMap:kt,transmission:Ze,transmissionMap:K,thicknessMap:Ee,gradientMap:fe,opaque:N.transparent===!1&&N.blending===eo&&N.alphaToCoverage===!1,alphaMap:ve,alphaTest:Ce,alphaHash:it,combine:N.combine,mapUv:gt&&x(N.map.channel),aoMapUv:Et&&x(N.aoMap.channel),lightMapUv:qt&&x(N.lightMap.channel),bumpMapUv:rt&&x(N.bumpMap.channel),normalMapUv:St&&x(N.normalMap.channel),displacementMapUv:xt&&x(N.displacementMap.channel),emissiveMapUv:lt&&x(N.emissiveMap.channel),metalnessMapUv:Ht&&x(N.metalnessMap.channel),roughnessMapUv:W&&x(N.roughnessMap.channel),anisotropyMapUv:Fe&&x(N.anisotropyMap.channel),clearcoatMapUv:De&&x(N.clearcoatMap.channel),clearcoatNormalMapUv:pt&&x(N.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:Ne&&x(N.clearcoatRoughnessMap.channel),iridescenceMapUv:et&&x(N.iridescenceMap.channel),iridescenceThicknessMapUv:At&&x(N.iridescenceThicknessMap.channel),sheenColorMapUv:ft&&x(N.sheenColorMap.channel),sheenRoughnessMapUv:Me&&x(N.sheenRoughnessMap.channel),specularMapUv:tt&&x(N.specularMap.channel),specularColorMapUv:at&&x(N.specularColorMap.channel),specularIntensityMapUv:kt&&x(N.specularIntensityMap.channel),transmissionMapUv:K&&x(N.transmissionMap.channel),thicknessMapUv:Ee&&x(N.thicknessMap.channel),alphaMapUv:ve&&x(N.alphaMap.channel),vertexTangents:!!le.attributes.tangent&&(St||P),vertexColors:N.vertexColors,vertexAlphas:N.vertexColors===!0&&!!le.attributes.color&&le.attributes.color.itemSize===4,pointsUvs:Y.isPoints===!0&&!!le.attributes.uv&&(gt||ve),fog:!!ae,useFog:N.fog===!0,fogExp2:!!ae&&ae.isFogExp2,flatShading:N.flatShading===!0,sizeAttenuation:N.sizeAttenuation===!0,logarithmicDepthBuffer:h,skinning:Y.isSkinnedMesh===!0,morphTargets:le.morphAttributes.position!==void 0,morphNormals:le.morphAttributes.normal!==void 0,morphColors:le.morphAttributes.color!==void 0,morphTargetsCount:ze,morphTextureStride:_t,numDirLights:A.directional.length,numPointLights:A.point.length,numSpotLights:A.spot.length,numSpotLightMaps:A.spotLightMap.length,numRectAreaLights:A.rectArea.length,numHemiLights:A.hemi.length,numDirLightShadows:A.directionalShadowMap.length,numPointLightShadows:A.pointShadowMap.length,numSpotLightShadows:A.spotShadowMap.length,numSpotLightShadowsWithMaps:A.numSpotLightShadowsWithMaps,numLightProbes:A.numLightProbes,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:N.dithering,shadowMapEnabled:n.shadowMap.enabled&&B.length>0,shadowMapType:n.shadowMap.type,toneMapping:nn,decodeVideoTexture:gt&&N.map.isVideoTexture===!0&&Yt.getTransfer(N.map.colorSpace)===un,premultipliedAlpha:N.premultipliedAlpha,doubleSided:N.side===di,flipSided:N.side===pr,useDepthPacking:N.depthPacking>=0,depthPacking:N.depthPacking||0,index0AttributeName:N.index0AttributeName,extensionClipCullDistance:qe&&N.extensions.clipCullDistance===!0&&r.has("WEBGL_clip_cull_distance"),extensionMultiDraw:qe&&N.extensions.multiDraw===!0&&r.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:r.has("KHR_parallel_shader_compile"),customProgramCacheKey:N.customProgramCacheKey()};return ln.vertexUv1s=l.has(1),ln.vertexUv2s=l.has(2),ln.vertexUv3s=l.has(3),l.clear(),ln}function m(N){const A=[];if(N.shaderID?A.push(N.shaderID):(A.push(N.customVertexShaderID),A.push(N.customFragmentShaderID)),N.defines!==void 0)for(const B in N.defines)A.push(B),A.push(N.defines[B]);return N.isRawShaderMaterial===!1&&(_(A,N),b(A,N),A.push(n.outputColorSpace)),A.push(N.customProgramCacheKey),A.join()}function _(N,A){N.push(A.precision),N.push(A.outputColorSpace),N.push(A.envMapMode),N.push(A.envMapCubeUVHeight),N.push(A.mapUv),N.push(A.alphaMapUv),N.push(A.lightMapUv),N.push(A.aoMapUv),N.push(A.bumpMapUv),N.push(A.normalMapUv),N.push(A.displacementMapUv),N.push(A.emissiveMapUv),N.push(A.metalnessMapUv),N.push(A.roughnessMapUv),N.push(A.anisotropyMapUv),N.push(A.clearcoatMapUv),N.push(A.clearcoatNormalMapUv),N.push(A.clearcoatRoughnessMapUv),N.push(A.iridescenceMapUv),N.push(A.iridescenceThicknessMapUv),N.push(A.sheenColorMapUv),N.push(A.sheenRoughnessMapUv),N.push(A.specularMapUv),N.push(A.specularColorMapUv),N.push(A.specularIntensityMapUv),N.push(A.transmissionMapUv),N.push(A.thicknessMapUv),N.push(A.combine),N.push(A.fogExp2),N.push(A.sizeAttenuation),N.push(A.morphTargetsCount),N.push(A.morphAttributeCount),N.push(A.numDirLights),N.push(A.numPointLights),N.push(A.numSpotLights),N.push(A.numSpotLightMaps),N.push(A.numHemiLights),N.push(A.numRectAreaLights),N.push(A.numDirLightShadows),N.push(A.numPointLightShadows),N.push(A.numSpotLightShadows),N.push(A.numSpotLightShadowsWithMaps),N.push(A.numLightProbes),N.push(A.shadowMapType),N.push(A.toneMapping),N.push(A.numClippingPlanes),N.push(A.numClipIntersection),N.push(A.depthPacking)}function b(N,A){o.disableAll(),A.supportsVertexTextures&&o.enable(0),A.instancing&&o.enable(1),A.instancingColor&&o.enable(2),A.instancingMorph&&o.enable(3),A.matcap&&o.enable(4),A.envMap&&o.enable(5),A.normalMapObjectSpace&&o.enable(6),A.normalMapTangentSpace&&o.enable(7),A.clearcoat&&o.enable(8),A.iridescence&&o.enable(9),A.alphaTest&&o.enable(10),A.vertexColors&&o.enable(11),A.vertexAlphas&&o.enable(12),A.vertexUv1s&&o.enable(13),A.vertexUv2s&&o.enable(14),A.vertexUv3s&&o.enable(15),A.vertexTangents&&o.enable(16),A.anisotropy&&o.enable(17),A.alphaHash&&o.enable(18),A.batching&&o.enable(19),A.dispersion&&o.enable(20),A.batchingColor&&o.enable(21),N.push(o.mask),o.disableAll(),A.fog&&o.enable(0),A.useFog&&o.enable(1),A.flatShading&&o.enable(2),A.logarithmicDepthBuffer&&o.enable(3),A.skinning&&o.enable(4),A.morphTargets&&o.enable(5),A.morphNormals&&o.enable(6),A.morphColors&&o.enable(7),A.premultipliedAlpha&&o.enable(8),A.shadowMapEnabled&&o.enable(9),A.doubleSided&&o.enable(10),A.flipSided&&o.enable(11),A.useDepthPacking&&o.enable(12),A.dithering&&o.enable(13),A.transmission&&o.enable(14),A.sheen&&o.enable(15),A.opaque&&o.enable(16),A.pointsUvs&&o.enable(17),A.decodeVideoTexture&&o.enable(18),A.alphaToCoverage&&o.enable(19),N.push(o.mask)}function w(N){const A=p[N.type];let B;if(A){const J=hi[A];B=ab.clone(J.uniforms)}else B=N.uniforms;return B}function I(N,A){let B;for(let J=0,Y=u.length;J<Y;J++){const ae=u[J];if(ae.cacheKey===A){B=ae,++B.usedTimes;break}}return B===void 0&&(B=new vE(n,A,N,s),u.push(B)),B}function M(N){if(--N.usedTimes===0){const A=u.indexOf(N);u[A]=u[u.length-1],u.pop(),N.destroy()}}function D(N){c.remove(N)}function F(){c.dispose()}return{getParameters:g,getProgramCacheKey:m,getUniforms:w,acquireProgram:I,releaseProgram:M,releaseShaderCache:D,programs:u,dispose:F}}function EE(){let n=new WeakMap;function e(s){let a=n.get(s);return a===void 0&&(a={},n.set(s,a)),a}function t(s){n.delete(s)}function r(s,a,o){n.get(s)[a]=o}function i(){n=new WeakMap}return{get:e,remove:t,update:r,dispose:i}}function TE(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.material.id!==e.material.id?n.material.id-e.material.id:n.z!==e.z?n.z-e.z:n.id-e.id}function Jp(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.z!==e.z?e.z-n.z:n.id-e.id}function Qp(){const n=[];let e=0;const t=[],r=[],i=[];function s(){e=0,t.length=0,r.length=0,i.length=0}function a(h,d,f,p,x,g){let m=n[e];return m===void 0?(m={id:h.id,object:h,geometry:d,material:f,groupOrder:p,renderOrder:h.renderOrder,z:x,group:g},n[e]=m):(m.id=h.id,m.object=h,m.geometry=d,m.material=f,m.groupOrder=p,m.renderOrder=h.renderOrder,m.z=x,m.group=g),e++,m}function o(h,d,f,p,x,g){const m=a(h,d,f,p,x,g);f.transmission>0?r.push(m):f.transparent===!0?i.push(m):t.push(m)}function c(h,d,f,p,x,g){const m=a(h,d,f,p,x,g);f.transmission>0?r.unshift(m):f.transparent===!0?i.unshift(m):t.unshift(m)}function l(h,d){t.length>1&&t.sort(h||TE),r.length>1&&r.sort(d||Jp),i.length>1&&i.sort(d||Jp)}function u(){for(let h=e,d=n.length;h<d;h++){const f=n[h];if(f.id===null)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}}return{opaque:t,transmissive:r,transparent:i,init:s,push:o,unshift:c,finish:u,sort:l}}function CE(){let n=new WeakMap;function e(r,i){const s=n.get(r);let a;return s===void 0?(a=new Qp,n.set(r,[a])):i>=s.length?(a=new Qp,s.push(a)):a=s[i],a}function t(){n=new WeakMap}return{get:e,dispose:t}}function AE(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new ue,color:new en};break;case"SpotLight":t={position:new ue,direction:new ue,color:new en,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new ue,color:new en,distance:0,decay:0};break;case"HemisphereLight":t={direction:new ue,skyColor:new en,groundColor:new en};break;case"RectAreaLight":t={color:new en,position:new ue,halfWidth:new ue,halfHeight:new ue};break}return n[e.id]=t,t}}}function RE(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Kt};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Kt};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Kt,shadowCameraNear:1,shadowCameraFar:1e3};break}return n[e.id]=t,t}}}let NE=0;function ME(n,e){return(e.castShadow?2:0)-(n.castShadow?2:0)+(e.map?1:0)-(n.map?1:0)}function IE(n){const e=new AE,t=RE(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let l=0;l<9;l++)r.probe.push(new ue);const i=new ue,s=new Tn,a=new Tn;function o(l){let u=0,h=0,d=0;for(let N=0;N<9;N++)r.probe[N].set(0,0,0);let f=0,p=0,x=0,g=0,m=0,_=0,b=0,w=0,I=0,M=0,D=0;l.sort(ME);for(let N=0,A=l.length;N<A;N++){const B=l[N],J=B.color,Y=B.intensity,ae=B.distance,le=B.shadow&&B.shadow.map?B.shadow.map.texture:null;if(B.isAmbientLight)u+=J.r*Y,h+=J.g*Y,d+=J.b*Y;else if(B.isLightProbe){for(let he=0;he<9;he++)r.probe[he].addScaledVector(B.sh.coefficients[he],Y);D++}else if(B.isDirectionalLight){const he=e.get(B);if(he.color.copy(B.color).multiplyScalar(B.intensity),B.castShadow){const de=B.shadow,oe=t.get(B);oe.shadowBias=de.bias,oe.shadowNormalBias=de.normalBias,oe.shadowRadius=de.radius,oe.shadowMapSize=de.mapSize,r.directionalShadow[f]=oe,r.directionalShadowMap[f]=le,r.directionalShadowMatrix[f]=B.shadow.matrix,_++}r.directional[f]=he,f++}else if(B.isSpotLight){const he=e.get(B);he.position.setFromMatrixPosition(B.matrixWorld),he.color.copy(J).multiplyScalar(Y),he.distance=ae,he.coneCos=Math.cos(B.angle),he.penumbraCos=Math.cos(B.angle*(1-B.penumbra)),he.decay=B.decay,r.spot[x]=he;const de=B.shadow;if(B.map&&(r.spotLightMap[I]=B.map,I++,de.updateMatrices(B),B.castShadow&&M++),r.spotLightMatrix[x]=de.matrix,B.castShadow){const oe=t.get(B);oe.shadowBias=de.bias,oe.shadowNormalBias=de.normalBias,oe.shadowRadius=de.radius,oe.shadowMapSize=de.mapSize,r.spotShadow[x]=oe,r.spotShadowMap[x]=le,w++}x++}else if(B.isRectAreaLight){const he=e.get(B);he.color.copy(J).multiplyScalar(Y),he.halfWidth.set(B.width*.5,0,0),he.halfHeight.set(0,B.height*.5,0),r.rectArea[g]=he,g++}else if(B.isPointLight){const he=e.get(B);if(he.color.copy(B.color).multiplyScalar(B.intensity),he.distance=B.distance,he.decay=B.decay,B.castShadow){const de=B.shadow,oe=t.get(B);oe.shadowBias=de.bias,oe.shadowNormalBias=de.normalBias,oe.shadowRadius=de.radius,oe.shadowMapSize=de.mapSize,oe.shadowCameraNear=de.camera.near,oe.shadowCameraFar=de.camera.far,r.pointShadow[p]=oe,r.pointShadowMap[p]=le,r.pointShadowMatrix[p]=B.shadow.matrix,b++}r.point[p]=he,p++}else if(B.isHemisphereLight){const he=e.get(B);he.skyColor.copy(B.color).multiplyScalar(Y),he.groundColor.copy(B.groundColor).multiplyScalar(Y),r.hemi[m]=he,m++}}g>0&&(n.has("OES_texture_float_linear")===!0?(r.rectAreaLTC1=We.LTC_FLOAT_1,r.rectAreaLTC2=We.LTC_FLOAT_2):(r.rectAreaLTC1=We.LTC_HALF_1,r.rectAreaLTC2=We.LTC_HALF_2)),r.ambient[0]=u,r.ambient[1]=h,r.ambient[2]=d;const F=r.hash;(F.directionalLength!==f||F.pointLength!==p||F.spotLength!==x||F.rectAreaLength!==g||F.hemiLength!==m||F.numDirectionalShadows!==_||F.numPointShadows!==b||F.numSpotShadows!==w||F.numSpotMaps!==I||F.numLightProbes!==D)&&(r.directional.length=f,r.spot.length=x,r.rectArea.length=g,r.point.length=p,r.hemi.length=m,r.directionalShadow.length=_,r.directionalShadowMap.length=_,r.pointShadow.length=b,r.pointShadowMap.length=b,r.spotShadow.length=w,r.spotShadowMap.length=w,r.directionalShadowMatrix.length=_,r.pointShadowMatrix.length=b,r.spotLightMatrix.length=w+I-M,r.spotLightMap.length=I,r.numSpotLightShadowsWithMaps=M,r.numLightProbes=D,F.directionalLength=f,F.pointLength=p,F.spotLength=x,F.rectAreaLength=g,F.hemiLength=m,F.numDirectionalShadows=_,F.numPointShadows=b,F.numSpotShadows=w,F.numSpotMaps=I,F.numLightProbes=D,r.version=NE++)}function c(l,u){let h=0,d=0,f=0,p=0,x=0;const g=u.matrixWorldInverse;for(let m=0,_=l.length;m<_;m++){const b=l[m];if(b.isDirectionalLight){const w=r.directional[h];w.direction.setFromMatrixPosition(b.matrixWorld),i.setFromMatrixPosition(b.target.matrixWorld),w.direction.sub(i),w.direction.transformDirection(g),h++}else if(b.isSpotLight){const w=r.spot[f];w.position.setFromMatrixPosition(b.matrixWorld),w.position.applyMatrix4(g),w.direction.setFromMatrixPosition(b.matrixWorld),i.setFromMatrixPosition(b.target.matrixWorld),w.direction.sub(i),w.direction.transformDirection(g),f++}else if(b.isRectAreaLight){const w=r.rectArea[p];w.position.setFromMatrixPosition(b.matrixWorld),w.position.applyMatrix4(g),a.identity(),s.copy(b.matrixWorld),s.premultiply(g),a.extractRotation(s),w.halfWidth.set(b.width*.5,0,0),w.halfHeight.set(0,b.height*.5,0),w.halfWidth.applyMatrix4(a),w.halfHeight.applyMatrix4(a),p++}else if(b.isPointLight){const w=r.point[d];w.position.setFromMatrixPosition(b.matrixWorld),w.position.applyMatrix4(g),d++}else if(b.isHemisphereLight){const w=r.hemi[x];w.direction.setFromMatrixPosition(b.matrixWorld),w.direction.transformDirection(g),x++}}}return{setup:o,setupView:c,state:r}}function em(n){const e=new IE(n),t=[],r=[];function i(u){l.camera=u,t.length=0,r.length=0}function s(u){t.push(u)}function a(u){r.push(u)}function o(){e.setup(t)}function c(u){e.setupView(t,u)}const l={lightsArray:t,shadowsArray:r,camera:null,lights:e,transmissionRenderTarget:{}};return{init:i,state:l,setupLights:o,setupLightsView:c,pushLight:s,pushShadow:a}}function DE(n){let e=new WeakMap;function t(i,s=0){const a=e.get(i);let o;return a===void 0?(o=new em(n),e.set(i,[o])):s>=a.length?(o=new em(n),a.push(o)):o=a[s],o}function r(){e=new WeakMap}return{get:t,dispose:r}}class PE extends ou{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=R_,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class OE extends ou{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const $E=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,LE=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function kE(n,e,t){let r=new Xg;const i=new Kt,s=new Kt,a=new Vn,o=new PE({depthPacking:N_}),c=new OE,l={},u=t.maxTextureSize,h={[gs]:pr,[pr]:gs,[di]:di},d=new ys({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Kt},radius:{value:4}},vertexShader:$E,fragmentShader:LE}),f=d.clone();f.defines.HORIZONTAL_PASS=1;const p=new ya;p.setAttribute("position",new yi(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const x=new mi(p,d),g=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Tg;let m=this.type;this.render=function(M,D,F){if(g.enabled===!1||g.autoUpdate===!1&&g.needsUpdate===!1||M.length===0)return;const N=n.getRenderTarget(),A=n.getActiveCubeFace(),B=n.getActiveMipmapLevel(),J=n.state;J.setBlending(us),J.buffers.color.setClear(1,1,1,1),J.buffers.depth.setTest(!0),J.setScissorTest(!1);const Y=m!==Ii&&this.type===Ii,ae=m===Ii&&this.type!==Ii;for(let le=0,he=M.length;le<he;le++){const de=M[le],oe=de.shadow;if(oe===void 0){console.warn("THREE.WebGLShadowMap:",de,"has no shadow.");continue}if(oe.autoUpdate===!1&&oe.needsUpdate===!1)continue;i.copy(oe.mapSize);const $e=oe.getFrameExtents();if(i.multiply($e),s.copy(oe.mapSize),(i.x>u||i.y>u)&&(i.x>u&&(s.x=Math.floor(u/$e.x),i.x=s.x*$e.x,oe.mapSize.x=s.x),i.y>u&&(s.y=Math.floor(u/$e.y),i.y=s.y*$e.y,oe.mapSize.y=s.y)),oe.map===null||Y===!0||ae===!0){const ze=this.type!==Ii?{minFilter:Ur,magFilter:Ur}:{};oe.map!==null&&oe.map.dispose(),oe.map=new sa(i.x,i.y,ze),oe.map.texture.name=de.name+".shadowMap",oe.camera.updateProjectionMatrix()}n.setRenderTarget(oe.map),n.clear();const He=oe.getViewportCount();for(let ze=0;ze<He;ze++){const _t=oe.getViewport(ze);a.set(s.x*_t.x,s.y*_t.y,s.x*_t.z,s.y*_t.w),J.viewport(a),oe.updateMatrices(de,ze),r=oe.getFrustum(),w(D,F,oe.camera,de,this.type)}oe.isPointLightShadow!==!0&&this.type===Ii&&_(oe,F),oe.needsUpdate=!1}m=this.type,g.needsUpdate=!1,n.setRenderTarget(N,A,B)};function _(M,D){const F=e.update(x);d.defines.VSM_SAMPLES!==M.blurSamples&&(d.defines.VSM_SAMPLES=M.blurSamples,f.defines.VSM_SAMPLES=M.blurSamples,d.needsUpdate=!0,f.needsUpdate=!0),M.mapPass===null&&(M.mapPass=new sa(i.x,i.y)),d.uniforms.shadow_pass.value=M.map.texture,d.uniforms.resolution.value=M.mapSize,d.uniforms.radius.value=M.radius,n.setRenderTarget(M.mapPass),n.clear(),n.renderBufferDirect(D,null,F,d,x,null),f.uniforms.shadow_pass.value=M.mapPass.texture,f.uniforms.resolution.value=M.mapSize,f.uniforms.radius.value=M.radius,n.setRenderTarget(M.map),n.clear(),n.renderBufferDirect(D,null,F,f,x,null)}function b(M,D,F,N){let A=null;const B=F.isPointLight===!0?M.customDistanceMaterial:M.customDepthMaterial;if(B!==void 0)A=B;else if(A=F.isPointLight===!0?c:o,n.localClippingEnabled&&D.clipShadows===!0&&Array.isArray(D.clippingPlanes)&&D.clippingPlanes.length!==0||D.displacementMap&&D.displacementScale!==0||D.alphaMap&&D.alphaTest>0||D.map&&D.alphaTest>0){const J=A.uuid,Y=D.uuid;let ae=l[J];ae===void 0&&(ae={},l[J]=ae);let le=ae[Y];le===void 0&&(le=A.clone(),ae[Y]=le,D.addEventListener("dispose",I)),A=le}if(A.visible=D.visible,A.wireframe=D.wireframe,N===Ii?A.side=D.shadowSide!==null?D.shadowSide:D.side:A.side=D.shadowSide!==null?D.shadowSide:h[D.side],A.alphaMap=D.alphaMap,A.alphaTest=D.alphaTest,A.map=D.map,A.clipShadows=D.clipShadows,A.clippingPlanes=D.clippingPlanes,A.clipIntersection=D.clipIntersection,A.displacementMap=D.displacementMap,A.displacementScale=D.displacementScale,A.displacementBias=D.displacementBias,A.wireframeLinewidth=D.wireframeLinewidth,A.linewidth=D.linewidth,F.isPointLight===!0&&A.isMeshDistanceMaterial===!0){const J=n.properties.get(A);J.light=F}return A}function w(M,D,F,N,A){if(M.visible===!1)return;if(M.layers.test(D.layers)&&(M.isMesh||M.isLine||M.isPoints)&&(M.castShadow||M.receiveShadow&&A===Ii)&&(!M.frustumCulled||r.intersectsObject(M))){M.modelViewMatrix.multiplyMatrices(F.matrixWorldInverse,M.matrixWorld);const Y=e.update(M),ae=M.material;if(Array.isArray(ae)){const le=Y.groups;for(let he=0,de=le.length;he<de;he++){const oe=le[he],$e=ae[oe.materialIndex];if($e&&$e.visible){const He=b(M,$e,N,A);M.onBeforeShadow(n,M,D,F,Y,He,oe),n.renderBufferDirect(F,null,Y,He,M,oe),M.onAfterShadow(n,M,D,F,Y,He,oe)}}}else if(ae.visible){const le=b(M,ae,N,A);M.onBeforeShadow(n,M,D,F,Y,le,null),n.renderBufferDirect(F,null,Y,le,M,null),M.onAfterShadow(n,M,D,F,Y,le,null)}}const J=M.children;for(let Y=0,ae=J.length;Y<ae;Y++)w(J[Y],D,F,N,A)}function I(M){M.target.removeEventListener("dispose",I);for(const F in l){const N=l[F],A=M.target.uuid;A in N&&(N[A].dispose(),delete N[A])}}}function FE(n){function e(){let K=!1;const Ee=new Vn;let fe=null;const ve=new Vn(0,0,0,0);return{setMask:function(Ce){fe!==Ce&&!K&&(n.colorMask(Ce,Ce,Ce,Ce),fe=Ce)},setLocked:function(Ce){K=Ce},setClear:function(Ce,it,qe,nn,ln){ln===!0&&(Ce*=nn,it*=nn,qe*=nn),Ee.set(Ce,it,qe,nn),ve.equals(Ee)===!1&&(n.clearColor(Ce,it,qe,nn),ve.copy(Ee))},reset:function(){K=!1,fe=null,ve.set(-1,0,0,0)}}}function t(){let K=!1,Ee=null,fe=null,ve=null;return{setTest:function(Ce){Ce?Ge(n.DEPTH_TEST):Be(n.DEPTH_TEST)},setMask:function(Ce){Ee!==Ce&&!K&&(n.depthMask(Ce),Ee=Ce)},setFunc:function(Ce){if(fe!==Ce){switch(Ce){case t_:n.depthFunc(n.NEVER);break;case n_:n.depthFunc(n.ALWAYS);break;case r_:n.depthFunc(n.LESS);break;case Ml:n.depthFunc(n.LEQUAL);break;case i_:n.depthFunc(n.EQUAL);break;case s_:n.depthFunc(n.GEQUAL);break;case a_:n.depthFunc(n.GREATER);break;case o_:n.depthFunc(n.NOTEQUAL);break;default:n.depthFunc(n.LEQUAL)}fe=Ce}},setLocked:function(Ce){K=Ce},setClear:function(Ce){ve!==Ce&&(n.clearDepth(Ce),ve=Ce)},reset:function(){K=!1,Ee=null,fe=null,ve=null}}}function r(){let K=!1,Ee=null,fe=null,ve=null,Ce=null,it=null,qe=null,nn=null,ln=null;return{setTest:function(Ft){K||(Ft?Ge(n.STENCIL_TEST):Be(n.STENCIL_TEST))},setMask:function(Ft){Ee!==Ft&&!K&&(n.stencilMask(Ft),Ee=Ft)},setFunc:function(Ft,Nn,yn){(fe!==Ft||ve!==Nn||Ce!==yn)&&(n.stencilFunc(Ft,Nn,yn),fe=Ft,ve=Nn,Ce=yn)},setOp:function(Ft,Nn,yn){(it!==Ft||qe!==Nn||nn!==yn)&&(n.stencilOp(Ft,Nn,yn),it=Ft,qe=Nn,nn=yn)},setLocked:function(Ft){K=Ft},setClear:function(Ft){ln!==Ft&&(n.clearStencil(Ft),ln=Ft)},reset:function(){K=!1,Ee=null,fe=null,ve=null,Ce=null,it=null,qe=null,nn=null,ln=null}}}const i=new e,s=new t,a=new r,o=new WeakMap,c=new WeakMap;let l={},u={},h=new WeakMap,d=[],f=null,p=!1,x=null,g=null,m=null,_=null,b=null,w=null,I=null,M=new en(0,0,0),D=0,F=!1,N=null,A=null,B=null,J=null,Y=null;const ae=n.getParameter(n.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let le=!1,he=0;const de=n.getParameter(n.VERSION);de.indexOf("WebGL")!==-1?(he=parseFloat(/^WebGL (\d)/.exec(de)[1]),le=he>=1):de.indexOf("OpenGL ES")!==-1&&(he=parseFloat(/^OpenGL ES (\d)/.exec(de)[1]),le=he>=2);let oe=null,$e={};const He=n.getParameter(n.SCISSOR_BOX),ze=n.getParameter(n.VIEWPORT),_t=new Vn().fromArray(He),Ot=new Vn().fromArray(ze);function xe(K,Ee,fe,ve){const Ce=new Uint8Array(4),it=n.createTexture();n.bindTexture(K,it),n.texParameteri(K,n.TEXTURE_MIN_FILTER,n.NEAREST),n.texParameteri(K,n.TEXTURE_MAG_FILTER,n.NEAREST);for(let qe=0;qe<fe;qe++)K===n.TEXTURE_3D||K===n.TEXTURE_2D_ARRAY?n.texImage3D(Ee,0,n.RGBA,1,1,ve,0,n.RGBA,n.UNSIGNED_BYTE,Ce):n.texImage2D(Ee+qe,0,n.RGBA,1,1,0,n.RGBA,n.UNSIGNED_BYTE,Ce);return it}const Te={};Te[n.TEXTURE_2D]=xe(n.TEXTURE_2D,n.TEXTURE_2D,1),Te[n.TEXTURE_CUBE_MAP]=xe(n.TEXTURE_CUBE_MAP,n.TEXTURE_CUBE_MAP_POSITIVE_X,6),Te[n.TEXTURE_2D_ARRAY]=xe(n.TEXTURE_2D_ARRAY,n.TEXTURE_2D_ARRAY,1,1),Te[n.TEXTURE_3D]=xe(n.TEXTURE_3D,n.TEXTURE_3D,1,1),i.setClear(0,0,0,1),s.setClear(1),a.setClear(0),Ge(n.DEPTH_TEST),s.setFunc(Ml),rt(!1),St($f),Ge(n.CULL_FACE),Et(us);function Ge(K){l[K]!==!0&&(n.enable(K),l[K]=!0)}function Be(K){l[K]!==!1&&(n.disable(K),l[K]=!1)}function bt(K,Ee){return u[K]!==Ee?(n.bindFramebuffer(K,Ee),u[K]=Ee,K===n.DRAW_FRAMEBUFFER&&(u[n.FRAMEBUFFER]=Ee),K===n.FRAMEBUFFER&&(u[n.DRAW_FRAMEBUFFER]=Ee),!0):!1}function ht(K,Ee){let fe=d,ve=!1;if(K){fe=h.get(Ee),fe===void 0&&(fe=[],h.set(Ee,fe));const Ce=K.textures;if(fe.length!==Ce.length||fe[0]!==n.COLOR_ATTACHMENT0){for(let it=0,qe=Ce.length;it<qe;it++)fe[it]=n.COLOR_ATTACHMENT0+it;fe.length=Ce.length,ve=!0}}else fe[0]!==n.BACK&&(fe[0]=n.BACK,ve=!0);ve&&n.drawBuffers(fe)}function gt(K){return f!==K?(n.useProgram(K),f=K,!0):!1}const j={[Ws]:n.FUNC_ADD,[F3]:n.FUNC_SUBTRACT,[U3]:n.FUNC_REVERSE_SUBTRACT};j[B3]=n.MIN,j[V3]=n.MAX;const wt={[z3]:n.ZERO,[G3]:n.ONE,[W3]:n.SRC_COLOR,[Dh]:n.SRC_ALPHA,[Y3]:n.SRC_ALPHA_SATURATE,[q3]:n.DST_COLOR,[X3]:n.DST_ALPHA,[H3]:n.ONE_MINUS_SRC_COLOR,[Ph]:n.ONE_MINUS_SRC_ALPHA,[K3]:n.ONE_MINUS_DST_COLOR,[j3]:n.ONE_MINUS_DST_ALPHA,[Z3]:n.CONSTANT_COLOR,[J3]:n.ONE_MINUS_CONSTANT_COLOR,[Q3]:n.CONSTANT_ALPHA,[e_]:n.ONE_MINUS_CONSTANT_ALPHA};function Et(K,Ee,fe,ve,Ce,it,qe,nn,ln,Ft){if(K===us){p===!0&&(Be(n.BLEND),p=!1);return}if(p===!1&&(Ge(n.BLEND),p=!0),K!==k3){if(K!==x||Ft!==F){if((g!==Ws||b!==Ws)&&(n.blendEquation(n.FUNC_ADD),g=Ws,b=Ws),Ft)switch(K){case eo:n.blendFuncSeparate(n.ONE,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA);break;case Lf:n.blendFunc(n.ONE,n.ONE);break;case kf:n.blendFuncSeparate(n.ZERO,n.ONE_MINUS_SRC_COLOR,n.ZERO,n.ONE);break;case Ff:n.blendFuncSeparate(n.ZERO,n.SRC_COLOR,n.ZERO,n.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",K);break}else switch(K){case eo:n.blendFuncSeparate(n.SRC_ALPHA,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA);break;case Lf:n.blendFunc(n.SRC_ALPHA,n.ONE);break;case kf:n.blendFuncSeparate(n.ZERO,n.ONE_MINUS_SRC_COLOR,n.ZERO,n.ONE);break;case Ff:n.blendFunc(n.ZERO,n.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",K);break}m=null,_=null,w=null,I=null,M.set(0,0,0),D=0,x=K,F=Ft}return}Ce=Ce||Ee,it=it||fe,qe=qe||ve,(Ee!==g||Ce!==b)&&(n.blendEquationSeparate(j[Ee],j[Ce]),g=Ee,b=Ce),(fe!==m||ve!==_||it!==w||qe!==I)&&(n.blendFuncSeparate(wt[fe],wt[ve],wt[it],wt[qe]),m=fe,_=ve,w=it,I=qe),(nn.equals(M)===!1||ln!==D)&&(n.blendColor(nn.r,nn.g,nn.b,ln),M.copy(nn),D=ln),x=K,F=!1}function qt(K,Ee){K.side===di?Be(n.CULL_FACE):Ge(n.CULL_FACE);let fe=K.side===pr;Ee&&(fe=!fe),rt(fe),K.blending===eo&&K.transparent===!1?Et(us):Et(K.blending,K.blendEquation,K.blendSrc,K.blendDst,K.blendEquationAlpha,K.blendSrcAlpha,K.blendDstAlpha,K.blendColor,K.blendAlpha,K.premultipliedAlpha),s.setFunc(K.depthFunc),s.setTest(K.depthTest),s.setMask(K.depthWrite),i.setMask(K.colorWrite);const ve=K.stencilWrite;a.setTest(ve),ve&&(a.setMask(K.stencilWriteMask),a.setFunc(K.stencilFunc,K.stencilRef,K.stencilFuncMask),a.setOp(K.stencilFail,K.stencilZFail,K.stencilZPass)),lt(K.polygonOffset,K.polygonOffsetFactor,K.polygonOffsetUnits),K.alphaToCoverage===!0?Ge(n.SAMPLE_ALPHA_TO_COVERAGE):Be(n.SAMPLE_ALPHA_TO_COVERAGE)}function rt(K){N!==K&&(K?n.frontFace(n.CW):n.frontFace(n.CCW),N=K)}function St(K){K!==O3?(Ge(n.CULL_FACE),K!==A&&(K===$f?n.cullFace(n.BACK):K===$3?n.cullFace(n.FRONT):n.cullFace(n.FRONT_AND_BACK))):Be(n.CULL_FACE),A=K}function xt(K){K!==B&&(le&&n.lineWidth(K),B=K)}function lt(K,Ee,fe){K?(Ge(n.POLYGON_OFFSET_FILL),(J!==Ee||Y!==fe)&&(n.polygonOffset(Ee,fe),J=Ee,Y=fe)):Be(n.POLYGON_OFFSET_FILL)}function Ht(K){K?Ge(n.SCISSOR_TEST):Be(n.SCISSOR_TEST)}function W(K){K===void 0&&(K=n.TEXTURE0+ae-1),oe!==K&&(n.activeTexture(K),oe=K)}function P(K,Ee,fe){fe===void 0&&(oe===null?fe=n.TEXTURE0+ae-1:fe=oe);let ve=$e[fe];ve===void 0&&(ve={type:void 0,texture:void 0},$e[fe]=ve),(ve.type!==K||ve.texture!==Ee)&&(oe!==fe&&(n.activeTexture(fe),oe=fe),n.bindTexture(K,Ee||Te[K]),ve.type=K,ve.texture=Ee)}function ce(){const K=$e[oe];K!==void 0&&K.type!==void 0&&(n.bindTexture(K.type,null),K.type=void 0,K.texture=void 0)}function be(){try{n.compressedTexImage2D.apply(n,arguments)}catch(K){console.error("THREE.WebGLState:",K)}}function we(){try{n.compressedTexImage3D.apply(n,arguments)}catch(K){console.error("THREE.WebGLState:",K)}}function Se(){try{n.texSubImage2D.apply(n,arguments)}catch(K){console.error("THREE.WebGLState:",K)}}function Ze(){try{n.texSubImage3D.apply(n,arguments)}catch(K){console.error("THREE.WebGLState:",K)}}function Fe(){try{n.compressedTexSubImage2D.apply(n,arguments)}catch(K){console.error("THREE.WebGLState:",K)}}function De(){try{n.compressedTexSubImage3D.apply(n,arguments)}catch(K){console.error("THREE.WebGLState:",K)}}function pt(){try{n.texStorage2D.apply(n,arguments)}catch(K){console.error("THREE.WebGLState:",K)}}function Ne(){try{n.texStorage3D.apply(n,arguments)}catch(K){console.error("THREE.WebGLState:",K)}}function et(){try{n.texImage2D.apply(n,arguments)}catch(K){console.error("THREE.WebGLState:",K)}}function At(){try{n.texImage3D.apply(n,arguments)}catch(K){console.error("THREE.WebGLState:",K)}}function ft(K){_t.equals(K)===!1&&(n.scissor(K.x,K.y,K.z,K.w),_t.copy(K))}function Me(K){Ot.equals(K)===!1&&(n.viewport(K.x,K.y,K.z,K.w),Ot.copy(K))}function tt(K,Ee){let fe=c.get(Ee);fe===void 0&&(fe=new WeakMap,c.set(Ee,fe));let ve=fe.get(K);ve===void 0&&(ve=n.getUniformBlockIndex(Ee,K.name),fe.set(K,ve))}function at(K,Ee){const ve=c.get(Ee).get(K);o.get(Ee)!==ve&&(n.uniformBlockBinding(Ee,ve,K.__bindingPointIndex),o.set(Ee,ve))}function kt(){n.disable(n.BLEND),n.disable(n.CULL_FACE),n.disable(n.DEPTH_TEST),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SCISSOR_TEST),n.disable(n.STENCIL_TEST),n.disable(n.SAMPLE_ALPHA_TO_COVERAGE),n.blendEquation(n.FUNC_ADD),n.blendFunc(n.ONE,n.ZERO),n.blendFuncSeparate(n.ONE,n.ZERO,n.ONE,n.ZERO),n.blendColor(0,0,0,0),n.colorMask(!0,!0,!0,!0),n.clearColor(0,0,0,0),n.depthMask(!0),n.depthFunc(n.LESS),n.clearDepth(1),n.stencilMask(4294967295),n.stencilFunc(n.ALWAYS,0,4294967295),n.stencilOp(n.KEEP,n.KEEP,n.KEEP),n.clearStencil(0),n.cullFace(n.BACK),n.frontFace(n.CCW),n.polygonOffset(0,0),n.activeTexture(n.TEXTURE0),n.bindFramebuffer(n.FRAMEBUFFER,null),n.bindFramebuffer(n.DRAW_FRAMEBUFFER,null),n.bindFramebuffer(n.READ_FRAMEBUFFER,null),n.useProgram(null),n.lineWidth(1),n.scissor(0,0,n.canvas.width,n.canvas.height),n.viewport(0,0,n.canvas.width,n.canvas.height),l={},oe=null,$e={},u={},h=new WeakMap,d=[],f=null,p=!1,x=null,g=null,m=null,_=null,b=null,w=null,I=null,M=new en(0,0,0),D=0,F=!1,N=null,A=null,B=null,J=null,Y=null,_t.set(0,0,n.canvas.width,n.canvas.height),Ot.set(0,0,n.canvas.width,n.canvas.height),i.reset(),s.reset(),a.reset()}return{buffers:{color:i,depth:s,stencil:a},enable:Ge,disable:Be,bindFramebuffer:bt,drawBuffers:ht,useProgram:gt,setBlending:Et,setMaterial:qt,setFlipSided:rt,setCullFace:St,setLineWidth:xt,setPolygonOffset:lt,setScissorTest:Ht,activeTexture:W,bindTexture:P,unbindTexture:ce,compressedTexImage2D:be,compressedTexImage3D:we,texImage2D:et,texImage3D:At,updateUBOMapping:tt,uniformBlockBinding:at,texStorage2D:pt,texStorage3D:Ne,texSubImage2D:Se,texSubImage3D:Ze,compressedTexSubImage2D:Fe,compressedTexSubImage3D:De,scissor:ft,viewport:Me,reset:kt}}function UE(n,e,t,r,i,s,a){const o=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,c=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),l=new Kt,u=new WeakMap;let h;const d=new WeakMap;let f=!1;try{f=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function p(W,P){return f?new OffscreenCanvas(W,P):uc("canvas")}function x(W,P,ce){let be=1;const we=Ht(W);if((we.width>ce||we.height>ce)&&(be=ce/Math.max(we.width,we.height)),be<1)if(typeof HTMLImageElement<"u"&&W instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&W instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&W instanceof ImageBitmap||typeof VideoFrame<"u"&&W instanceof VideoFrame){const Se=Math.floor(be*we.width),Ze=Math.floor(be*we.height);h===void 0&&(h=p(Se,Ze));const Fe=P?p(Se,Ze):h;return Fe.width=Se,Fe.height=Ze,Fe.getContext("2d").drawImage(W,0,0,Se,Ze),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+we.width+"x"+we.height+") to ("+Se+"x"+Ze+")."),Fe}else return"data"in W&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+we.width+"x"+we.height+")."),W;return W}function g(W){return W.generateMipmaps&&W.minFilter!==Ur&&W.minFilter!==ni}function m(W){n.generateMipmap(W)}function _(W,P,ce,be,we=!1){if(W!==null){if(n[W]!==void 0)return n[W];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+W+"'")}let Se=P;if(P===n.RED&&(ce===n.FLOAT&&(Se=n.R32F),ce===n.HALF_FLOAT&&(Se=n.R16F),ce===n.UNSIGNED_BYTE&&(Se=n.R8)),P===n.RED_INTEGER&&(ce===n.UNSIGNED_BYTE&&(Se=n.R8UI),ce===n.UNSIGNED_SHORT&&(Se=n.R16UI),ce===n.UNSIGNED_INT&&(Se=n.R32UI),ce===n.BYTE&&(Se=n.R8I),ce===n.SHORT&&(Se=n.R16I),ce===n.INT&&(Se=n.R32I)),P===n.RG&&(ce===n.FLOAT&&(Se=n.RG32F),ce===n.HALF_FLOAT&&(Se=n.RG16F),ce===n.UNSIGNED_BYTE&&(Se=n.RG8)),P===n.RG_INTEGER&&(ce===n.UNSIGNED_BYTE&&(Se=n.RG8UI),ce===n.UNSIGNED_SHORT&&(Se=n.RG16UI),ce===n.UNSIGNED_INT&&(Se=n.RG32UI),ce===n.BYTE&&(Se=n.RG8I),ce===n.SHORT&&(Se=n.RG16I),ce===n.INT&&(Se=n.RG32I)),P===n.RGB&&ce===n.UNSIGNED_INT_5_9_9_9_REV&&(Se=n.RGB9_E5),P===n.RGBA){const Ze=we?Dl:Yt.getTransfer(be);ce===n.FLOAT&&(Se=n.RGBA32F),ce===n.HALF_FLOAT&&(Se=n.RGBA16F),ce===n.UNSIGNED_BYTE&&(Se=Ze===un?n.SRGB8_ALPHA8:n.RGBA8),ce===n.UNSIGNED_SHORT_4_4_4_4&&(Se=n.RGBA4),ce===n.UNSIGNED_SHORT_5_5_5_1&&(Se=n.RGB5_A1)}return(Se===n.R16F||Se===n.R32F||Se===n.RG16F||Se===n.RG32F||Se===n.RGBA16F||Se===n.RGBA32F)&&e.get("EXT_color_buffer_float"),Se}function b(W,P){let ce;return W?P===null||P===lo||P===uo?ce=n.DEPTH24_STENCIL8:P===os?ce=n.DEPTH32F_STENCIL8:P===Il&&(ce=n.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):P===null||P===lo||P===uo?ce=n.DEPTH_COMPONENT24:P===os?ce=n.DEPTH_COMPONENT32F:P===Il&&(ce=n.DEPTH_COMPONENT16),ce}function w(W,P){return g(W)===!0||W.isFramebufferTexture&&W.minFilter!==Ur&&W.minFilter!==ni?Math.log2(Math.max(P.width,P.height))+1:W.mipmaps!==void 0&&W.mipmaps.length>0?W.mipmaps.length:W.isCompressedTexture&&Array.isArray(W.image)?P.mipmaps.length:1}function I(W){const P=W.target;P.removeEventListener("dispose",I),D(P),P.isVideoTexture&&u.delete(P)}function M(W){const P=W.target;P.removeEventListener("dispose",M),N(P)}function D(W){const P=r.get(W);if(P.__webglInit===void 0)return;const ce=W.source,be=d.get(ce);if(be){const we=be[P.__cacheKey];we.usedTimes--,we.usedTimes===0&&F(W),Object.keys(be).length===0&&d.delete(ce)}r.remove(W)}function F(W){const P=r.get(W);n.deleteTexture(P.__webglTexture);const ce=W.source,be=d.get(ce);delete be[P.__cacheKey],a.memory.textures--}function N(W){const P=r.get(W);if(W.depthTexture&&W.depthTexture.dispose(),W.isWebGLCubeRenderTarget)for(let be=0;be<6;be++){if(Array.isArray(P.__webglFramebuffer[be]))for(let we=0;we<P.__webglFramebuffer[be].length;we++)n.deleteFramebuffer(P.__webglFramebuffer[be][we]);else n.deleteFramebuffer(P.__webglFramebuffer[be]);P.__webglDepthbuffer&&n.deleteRenderbuffer(P.__webglDepthbuffer[be])}else{if(Array.isArray(P.__webglFramebuffer))for(let be=0;be<P.__webglFramebuffer.length;be++)n.deleteFramebuffer(P.__webglFramebuffer[be]);else n.deleteFramebuffer(P.__webglFramebuffer);if(P.__webglDepthbuffer&&n.deleteRenderbuffer(P.__webglDepthbuffer),P.__webglMultisampledFramebuffer&&n.deleteFramebuffer(P.__webglMultisampledFramebuffer),P.__webglColorRenderbuffer)for(let be=0;be<P.__webglColorRenderbuffer.length;be++)P.__webglColorRenderbuffer[be]&&n.deleteRenderbuffer(P.__webglColorRenderbuffer[be]);P.__webglDepthRenderbuffer&&n.deleteRenderbuffer(P.__webglDepthRenderbuffer)}const ce=W.textures;for(let be=0,we=ce.length;be<we;be++){const Se=r.get(ce[be]);Se.__webglTexture&&(n.deleteTexture(Se.__webglTexture),a.memory.textures--),r.remove(ce[be])}r.remove(W)}let A=0;function B(){A=0}function J(){const W=A;return W>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+W+" texture units while this GPU supports only "+i.maxTextures),A+=1,W}function Y(W){const P=[];return P.push(W.wrapS),P.push(W.wrapT),P.push(W.wrapR||0),P.push(W.magFilter),P.push(W.minFilter),P.push(W.anisotropy),P.push(W.internalFormat),P.push(W.format),P.push(W.type),P.push(W.generateMipmaps),P.push(W.premultiplyAlpha),P.push(W.flipY),P.push(W.unpackAlignment),P.push(W.colorSpace),P.join()}function ae(W,P){const ce=r.get(W);if(W.isVideoTexture&&xt(W),W.isRenderTargetTexture===!1&&W.version>0&&ce.__version!==W.version){const be=W.image;if(be===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(be.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Ot(ce,W,P);return}}t.bindTexture(n.TEXTURE_2D,ce.__webglTexture,n.TEXTURE0+P)}function le(W,P){const ce=r.get(W);if(W.version>0&&ce.__version!==W.version){Ot(ce,W,P);return}t.bindTexture(n.TEXTURE_2D_ARRAY,ce.__webglTexture,n.TEXTURE0+P)}function he(W,P){const ce=r.get(W);if(W.version>0&&ce.__version!==W.version){Ot(ce,W,P);return}t.bindTexture(n.TEXTURE_3D,ce.__webglTexture,n.TEXTURE0+P)}function de(W,P){const ce=r.get(W);if(W.version>0&&ce.__version!==W.version){xe(ce,W,P);return}t.bindTexture(n.TEXTURE_CUBE_MAP,ce.__webglTexture,n.TEXTURE0+P)}const oe={[Lh]:n.REPEAT,[Ys]:n.CLAMP_TO_EDGE,[kh]:n.MIRRORED_REPEAT},$e={[Ur]:n.NEAREST,[x_]:n.NEAREST_MIPMAP_NEAREST,[Vc]:n.NEAREST_MIPMAP_LINEAR,[ni]:n.LINEAR,[Iu]:n.LINEAR_MIPMAP_NEAREST,[Zs]:n.LINEAR_MIPMAP_LINEAR},He={[D_]:n.NEVER,[F_]:n.ALWAYS,[P_]:n.LESS,[Og]:n.LEQUAL,[O_]:n.EQUAL,[k_]:n.GEQUAL,[$_]:n.GREATER,[L_]:n.NOTEQUAL};function ze(W,P){if(P.type===os&&e.has("OES_texture_float_linear")===!1&&(P.magFilter===ni||P.magFilter===Iu||P.magFilter===Vc||P.magFilter===Zs||P.minFilter===ni||P.minFilter===Iu||P.minFilter===Vc||P.minFilter===Zs)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),n.texParameteri(W,n.TEXTURE_WRAP_S,oe[P.wrapS]),n.texParameteri(W,n.TEXTURE_WRAP_T,oe[P.wrapT]),(W===n.TEXTURE_3D||W===n.TEXTURE_2D_ARRAY)&&n.texParameteri(W,n.TEXTURE_WRAP_R,oe[P.wrapR]),n.texParameteri(W,n.TEXTURE_MAG_FILTER,$e[P.magFilter]),n.texParameteri(W,n.TEXTURE_MIN_FILTER,$e[P.minFilter]),P.compareFunction&&(n.texParameteri(W,n.TEXTURE_COMPARE_MODE,n.COMPARE_REF_TO_TEXTURE),n.texParameteri(W,n.TEXTURE_COMPARE_FUNC,He[P.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(P.magFilter===Ur||P.minFilter!==Vc&&P.minFilter!==Zs||P.type===os&&e.has("OES_texture_float_linear")===!1)return;if(P.anisotropy>1||r.get(P).__currentAnisotropy){const ce=e.get("EXT_texture_filter_anisotropic");n.texParameterf(W,ce.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(P.anisotropy,i.getMaxAnisotropy())),r.get(P).__currentAnisotropy=P.anisotropy}}}function _t(W,P){let ce=!1;W.__webglInit===void 0&&(W.__webglInit=!0,P.addEventListener("dispose",I));const be=P.source;let we=d.get(be);we===void 0&&(we={},d.set(be,we));const Se=Y(P);if(Se!==W.__cacheKey){we[Se]===void 0&&(we[Se]={texture:n.createTexture(),usedTimes:0},a.memory.textures++,ce=!0),we[Se].usedTimes++;const Ze=we[W.__cacheKey];Ze!==void 0&&(we[W.__cacheKey].usedTimes--,Ze.usedTimes===0&&F(P)),W.__cacheKey=Se,W.__webglTexture=we[Se].texture}return ce}function Ot(W,P,ce){let be=n.TEXTURE_2D;(P.isDataArrayTexture||P.isCompressedArrayTexture)&&(be=n.TEXTURE_2D_ARRAY),P.isData3DTexture&&(be=n.TEXTURE_3D);const we=_t(W,P),Se=P.source;t.bindTexture(be,W.__webglTexture,n.TEXTURE0+ce);const Ze=r.get(Se);if(Se.version!==Ze.__version||we===!0){t.activeTexture(n.TEXTURE0+ce);const Fe=Yt.getPrimaries(Yt.workingColorSpace),De=P.colorSpace===as?null:Yt.getPrimaries(P.colorSpace),pt=P.colorSpace===as||Fe===De?n.NONE:n.BROWSER_DEFAULT_WEBGL;n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,P.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,P.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,P.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,pt);let Ne=x(P.image,!1,i.maxTextureSize);Ne=lt(P,Ne);const et=s.convert(P.format,P.colorSpace),At=s.convert(P.type);let ft=_(P.internalFormat,et,At,P.colorSpace,P.isVideoTexture);ze(be,P);let Me;const tt=P.mipmaps,at=P.isVideoTexture!==!0,kt=Ze.__version===void 0||we===!0,K=Se.dataReady,Ee=w(P,Ne);if(P.isDepthTexture)ft=b(P.format===ho,P.type),kt&&(at?t.texStorage2D(n.TEXTURE_2D,1,ft,Ne.width,Ne.height):t.texImage2D(n.TEXTURE_2D,0,ft,Ne.width,Ne.height,0,et,At,null));else if(P.isDataTexture)if(tt.length>0){at&&kt&&t.texStorage2D(n.TEXTURE_2D,Ee,ft,tt[0].width,tt[0].height);for(let fe=0,ve=tt.length;fe<ve;fe++)Me=tt[fe],at?K&&t.texSubImage2D(n.TEXTURE_2D,fe,0,0,Me.width,Me.height,et,At,Me.data):t.texImage2D(n.TEXTURE_2D,fe,ft,Me.width,Me.height,0,et,At,Me.data);P.generateMipmaps=!1}else at?(kt&&t.texStorage2D(n.TEXTURE_2D,Ee,ft,Ne.width,Ne.height),K&&t.texSubImage2D(n.TEXTURE_2D,0,0,0,Ne.width,Ne.height,et,At,Ne.data)):t.texImage2D(n.TEXTURE_2D,0,ft,Ne.width,Ne.height,0,et,At,Ne.data);else if(P.isCompressedTexture)if(P.isCompressedArrayTexture){at&&kt&&t.texStorage3D(n.TEXTURE_2D_ARRAY,Ee,ft,tt[0].width,tt[0].height,Ne.depth);for(let fe=0,ve=tt.length;fe<ve;fe++)if(Me=tt[fe],P.format!==pi)if(et!==null)if(at){if(K)if(P.layerUpdates.size>0){for(const Ce of P.layerUpdates){const it=Me.width*Me.height;t.compressedTexSubImage3D(n.TEXTURE_2D_ARRAY,fe,0,0,Ce,Me.width,Me.height,1,et,Me.data.slice(it*Ce,it*(Ce+1)),0,0)}P.clearLayerUpdates()}else t.compressedTexSubImage3D(n.TEXTURE_2D_ARRAY,fe,0,0,0,Me.width,Me.height,Ne.depth,et,Me.data,0,0)}else t.compressedTexImage3D(n.TEXTURE_2D_ARRAY,fe,ft,Me.width,Me.height,Ne.depth,0,Me.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else at?K&&t.texSubImage3D(n.TEXTURE_2D_ARRAY,fe,0,0,0,Me.width,Me.height,Ne.depth,et,At,Me.data):t.texImage3D(n.TEXTURE_2D_ARRAY,fe,ft,Me.width,Me.height,Ne.depth,0,et,At,Me.data)}else{at&&kt&&t.texStorage2D(n.TEXTURE_2D,Ee,ft,tt[0].width,tt[0].height);for(let fe=0,ve=tt.length;fe<ve;fe++)Me=tt[fe],P.format!==pi?et!==null?at?K&&t.compressedTexSubImage2D(n.TEXTURE_2D,fe,0,0,Me.width,Me.height,et,Me.data):t.compressedTexImage2D(n.TEXTURE_2D,fe,ft,Me.width,Me.height,0,Me.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):at?K&&t.texSubImage2D(n.TEXTURE_2D,fe,0,0,Me.width,Me.height,et,At,Me.data):t.texImage2D(n.TEXTURE_2D,fe,ft,Me.width,Me.height,0,et,At,Me.data)}else if(P.isDataArrayTexture)if(at){if(kt&&t.texStorage3D(n.TEXTURE_2D_ARRAY,Ee,ft,Ne.width,Ne.height,Ne.depth),K)if(P.layerUpdates.size>0){let fe;switch(At){case n.UNSIGNED_BYTE:switch(et){case n.ALPHA:fe=1;break;case n.LUMINANCE:fe=1;break;case n.LUMINANCE_ALPHA:fe=2;break;case n.RGB:fe=3;break;case n.RGBA:fe=4;break;default:throw new Error(`Unknown texel size for format ${et}.`)}break;case n.UNSIGNED_SHORT_4_4_4_4:case n.UNSIGNED_SHORT_5_5_5_1:case n.UNSIGNED_SHORT_5_6_5:fe=1;break;default:throw new Error(`Unknown texel size for type ${At}.`)}const ve=Ne.width*Ne.height*fe;for(const Ce of P.layerUpdates)t.texSubImage3D(n.TEXTURE_2D_ARRAY,0,0,0,Ce,Ne.width,Ne.height,1,et,At,Ne.data.slice(ve*Ce,ve*(Ce+1)));P.clearLayerUpdates()}else t.texSubImage3D(n.TEXTURE_2D_ARRAY,0,0,0,0,Ne.width,Ne.height,Ne.depth,et,At,Ne.data)}else t.texImage3D(n.TEXTURE_2D_ARRAY,0,ft,Ne.width,Ne.height,Ne.depth,0,et,At,Ne.data);else if(P.isData3DTexture)at?(kt&&t.texStorage3D(n.TEXTURE_3D,Ee,ft,Ne.width,Ne.height,Ne.depth),K&&t.texSubImage3D(n.TEXTURE_3D,0,0,0,0,Ne.width,Ne.height,Ne.depth,et,At,Ne.data)):t.texImage3D(n.TEXTURE_3D,0,ft,Ne.width,Ne.height,Ne.depth,0,et,At,Ne.data);else if(P.isFramebufferTexture){if(kt)if(at)t.texStorage2D(n.TEXTURE_2D,Ee,ft,Ne.width,Ne.height);else{let fe=Ne.width,ve=Ne.height;for(let Ce=0;Ce<Ee;Ce++)t.texImage2D(n.TEXTURE_2D,Ce,ft,fe,ve,0,et,At,null),fe>>=1,ve>>=1}}else if(tt.length>0){if(at&&kt){const fe=Ht(tt[0]);t.texStorage2D(n.TEXTURE_2D,Ee,ft,fe.width,fe.height)}for(let fe=0,ve=tt.length;fe<ve;fe++)Me=tt[fe],at?K&&t.texSubImage2D(n.TEXTURE_2D,fe,0,0,et,At,Me):t.texImage2D(n.TEXTURE_2D,fe,ft,et,At,Me);P.generateMipmaps=!1}else if(at){if(kt){const fe=Ht(Ne);t.texStorage2D(n.TEXTURE_2D,Ee,ft,fe.width,fe.height)}K&&t.texSubImage2D(n.TEXTURE_2D,0,0,0,et,At,Ne)}else t.texImage2D(n.TEXTURE_2D,0,ft,et,At,Ne);g(P)&&m(be),Ze.__version=Se.version,P.onUpdate&&P.onUpdate(P)}W.__version=P.version}function xe(W,P,ce){if(P.image.length!==6)return;const be=_t(W,P),we=P.source;t.bindTexture(n.TEXTURE_CUBE_MAP,W.__webglTexture,n.TEXTURE0+ce);const Se=r.get(we);if(we.version!==Se.__version||be===!0){t.activeTexture(n.TEXTURE0+ce);const Ze=Yt.getPrimaries(Yt.workingColorSpace),Fe=P.colorSpace===as?null:Yt.getPrimaries(P.colorSpace),De=P.colorSpace===as||Ze===Fe?n.NONE:n.BROWSER_DEFAULT_WEBGL;n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,P.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,P.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,P.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,De);const pt=P.isCompressedTexture||P.image[0].isCompressedTexture,Ne=P.image[0]&&P.image[0].isDataTexture,et=[];for(let ve=0;ve<6;ve++)!pt&&!Ne?et[ve]=x(P.image[ve],!0,i.maxCubemapSize):et[ve]=Ne?P.image[ve].image:P.image[ve],et[ve]=lt(P,et[ve]);const At=et[0],ft=s.convert(P.format,P.colorSpace),Me=s.convert(P.type),tt=_(P.internalFormat,ft,Me,P.colorSpace),at=P.isVideoTexture!==!0,kt=Se.__version===void 0||be===!0,K=we.dataReady;let Ee=w(P,At);ze(n.TEXTURE_CUBE_MAP,P);let fe;if(pt){at&&kt&&t.texStorage2D(n.TEXTURE_CUBE_MAP,Ee,tt,At.width,At.height);for(let ve=0;ve<6;ve++){fe=et[ve].mipmaps;for(let Ce=0;Ce<fe.length;Ce++){const it=fe[Ce];P.format!==pi?ft!==null?at?K&&t.compressedTexSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+ve,Ce,0,0,it.width,it.height,ft,it.data):t.compressedTexImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+ve,Ce,tt,it.width,it.height,0,it.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):at?K&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+ve,Ce,0,0,it.width,it.height,ft,Me,it.data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+ve,Ce,tt,it.width,it.height,0,ft,Me,it.data)}}}else{if(fe=P.mipmaps,at&&kt){fe.length>0&&Ee++;const ve=Ht(et[0]);t.texStorage2D(n.TEXTURE_CUBE_MAP,Ee,tt,ve.width,ve.height)}for(let ve=0;ve<6;ve++)if(Ne){at?K&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+ve,0,0,0,et[ve].width,et[ve].height,ft,Me,et[ve].data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+ve,0,tt,et[ve].width,et[ve].height,0,ft,Me,et[ve].data);for(let Ce=0;Ce<fe.length;Ce++){const qe=fe[Ce].image[ve].image;at?K&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+ve,Ce+1,0,0,qe.width,qe.height,ft,Me,qe.data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+ve,Ce+1,tt,qe.width,qe.height,0,ft,Me,qe.data)}}else{at?K&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+ve,0,0,0,ft,Me,et[ve]):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+ve,0,tt,ft,Me,et[ve]);for(let Ce=0;Ce<fe.length;Ce++){const it=fe[Ce];at?K&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+ve,Ce+1,0,0,ft,Me,it.image[ve]):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+ve,Ce+1,tt,ft,Me,it.image[ve])}}}g(P)&&m(n.TEXTURE_CUBE_MAP),Se.__version=we.version,P.onUpdate&&P.onUpdate(P)}W.__version=P.version}function Te(W,P,ce,be,we,Se){const Ze=s.convert(ce.format,ce.colorSpace),Fe=s.convert(ce.type),De=_(ce.internalFormat,Ze,Fe,ce.colorSpace);if(!r.get(P).__hasExternalTextures){const Ne=Math.max(1,P.width>>Se),et=Math.max(1,P.height>>Se);we===n.TEXTURE_3D||we===n.TEXTURE_2D_ARRAY?t.texImage3D(we,Se,De,Ne,et,P.depth,0,Ze,Fe,null):t.texImage2D(we,Se,De,Ne,et,0,Ze,Fe,null)}t.bindFramebuffer(n.FRAMEBUFFER,W),St(P)?o.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,be,we,r.get(ce).__webglTexture,0,rt(P)):(we===n.TEXTURE_2D||we>=n.TEXTURE_CUBE_MAP_POSITIVE_X&&we<=n.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&n.framebufferTexture2D(n.FRAMEBUFFER,be,we,r.get(ce).__webglTexture,Se),t.bindFramebuffer(n.FRAMEBUFFER,null)}function Ge(W,P,ce){if(n.bindRenderbuffer(n.RENDERBUFFER,W),P.depthBuffer){const be=P.depthTexture,we=be&&be.isDepthTexture?be.type:null,Se=b(P.stencilBuffer,we),Ze=P.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,Fe=rt(P);St(P)?o.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,Fe,Se,P.width,P.height):ce?n.renderbufferStorageMultisample(n.RENDERBUFFER,Fe,Se,P.width,P.height):n.renderbufferStorage(n.RENDERBUFFER,Se,P.width,P.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,Ze,n.RENDERBUFFER,W)}else{const be=P.textures;for(let we=0;we<be.length;we++){const Se=be[we],Ze=s.convert(Se.format,Se.colorSpace),Fe=s.convert(Se.type),De=_(Se.internalFormat,Ze,Fe,Se.colorSpace),pt=rt(P);ce&&St(P)===!1?n.renderbufferStorageMultisample(n.RENDERBUFFER,pt,De,P.width,P.height):St(P)?o.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,pt,De,P.width,P.height):n.renderbufferStorage(n.RENDERBUFFER,De,P.width,P.height)}}n.bindRenderbuffer(n.RENDERBUFFER,null)}function Be(W,P){if(P&&P.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(n.FRAMEBUFFER,W),!(P.depthTexture&&P.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!r.get(P.depthTexture).__webglTexture||P.depthTexture.image.width!==P.width||P.depthTexture.image.height!==P.height)&&(P.depthTexture.image.width=P.width,P.depthTexture.image.height=P.height,P.depthTexture.needsUpdate=!0),ae(P.depthTexture,0);const be=r.get(P.depthTexture).__webglTexture,we=rt(P);if(P.depthTexture.format===to)St(P)?o.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.TEXTURE_2D,be,0,we):n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.TEXTURE_2D,be,0);else if(P.depthTexture.format===ho)St(P)?o.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.TEXTURE_2D,be,0,we):n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.TEXTURE_2D,be,0);else throw new Error("Unknown depthTexture format")}function bt(W){const P=r.get(W),ce=W.isWebGLCubeRenderTarget===!0;if(W.depthTexture&&!P.__autoAllocateDepthBuffer){if(ce)throw new Error("target.depthTexture not supported in Cube render targets");Be(P.__webglFramebuffer,W)}else if(ce){P.__webglDepthbuffer=[];for(let be=0;be<6;be++)t.bindFramebuffer(n.FRAMEBUFFER,P.__webglFramebuffer[be]),P.__webglDepthbuffer[be]=n.createRenderbuffer(),Ge(P.__webglDepthbuffer[be],W,!1)}else t.bindFramebuffer(n.FRAMEBUFFER,P.__webglFramebuffer),P.__webglDepthbuffer=n.createRenderbuffer(),Ge(P.__webglDepthbuffer,W,!1);t.bindFramebuffer(n.FRAMEBUFFER,null)}function ht(W,P,ce){const be=r.get(W);P!==void 0&&Te(be.__webglFramebuffer,W,W.texture,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,0),ce!==void 0&&bt(W)}function gt(W){const P=W.texture,ce=r.get(W),be=r.get(P);W.addEventListener("dispose",M);const we=W.textures,Se=W.isWebGLCubeRenderTarget===!0,Ze=we.length>1;if(Ze||(be.__webglTexture===void 0&&(be.__webglTexture=n.createTexture()),be.__version=P.version,a.memory.textures++),Se){ce.__webglFramebuffer=[];for(let Fe=0;Fe<6;Fe++)if(P.mipmaps&&P.mipmaps.length>0){ce.__webglFramebuffer[Fe]=[];for(let De=0;De<P.mipmaps.length;De++)ce.__webglFramebuffer[Fe][De]=n.createFramebuffer()}else ce.__webglFramebuffer[Fe]=n.createFramebuffer()}else{if(P.mipmaps&&P.mipmaps.length>0){ce.__webglFramebuffer=[];for(let Fe=0;Fe<P.mipmaps.length;Fe++)ce.__webglFramebuffer[Fe]=n.createFramebuffer()}else ce.__webglFramebuffer=n.createFramebuffer();if(Ze)for(let Fe=0,De=we.length;Fe<De;Fe++){const pt=r.get(we[Fe]);pt.__webglTexture===void 0&&(pt.__webglTexture=n.createTexture(),a.memory.textures++)}if(W.samples>0&&St(W)===!1){ce.__webglMultisampledFramebuffer=n.createFramebuffer(),ce.__webglColorRenderbuffer=[],t.bindFramebuffer(n.FRAMEBUFFER,ce.__webglMultisampledFramebuffer);for(let Fe=0;Fe<we.length;Fe++){const De=we[Fe];ce.__webglColorRenderbuffer[Fe]=n.createRenderbuffer(),n.bindRenderbuffer(n.RENDERBUFFER,ce.__webglColorRenderbuffer[Fe]);const pt=s.convert(De.format,De.colorSpace),Ne=s.convert(De.type),et=_(De.internalFormat,pt,Ne,De.colorSpace,W.isXRRenderTarget===!0),At=rt(W);n.renderbufferStorageMultisample(n.RENDERBUFFER,At,et,W.width,W.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+Fe,n.RENDERBUFFER,ce.__webglColorRenderbuffer[Fe])}n.bindRenderbuffer(n.RENDERBUFFER,null),W.depthBuffer&&(ce.__webglDepthRenderbuffer=n.createRenderbuffer(),Ge(ce.__webglDepthRenderbuffer,W,!0)),t.bindFramebuffer(n.FRAMEBUFFER,null)}}if(Se){t.bindTexture(n.TEXTURE_CUBE_MAP,be.__webglTexture),ze(n.TEXTURE_CUBE_MAP,P);for(let Fe=0;Fe<6;Fe++)if(P.mipmaps&&P.mipmaps.length>0)for(let De=0;De<P.mipmaps.length;De++)Te(ce.__webglFramebuffer[Fe][De],W,P,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+Fe,De);else Te(ce.__webglFramebuffer[Fe],W,P,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+Fe,0);g(P)&&m(n.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Ze){for(let Fe=0,De=we.length;Fe<De;Fe++){const pt=we[Fe],Ne=r.get(pt);t.bindTexture(n.TEXTURE_2D,Ne.__webglTexture),ze(n.TEXTURE_2D,pt),Te(ce.__webglFramebuffer,W,pt,n.COLOR_ATTACHMENT0+Fe,n.TEXTURE_2D,0),g(pt)&&m(n.TEXTURE_2D)}t.unbindTexture()}else{let Fe=n.TEXTURE_2D;if((W.isWebGL3DRenderTarget||W.isWebGLArrayRenderTarget)&&(Fe=W.isWebGL3DRenderTarget?n.TEXTURE_3D:n.TEXTURE_2D_ARRAY),t.bindTexture(Fe,be.__webglTexture),ze(Fe,P),P.mipmaps&&P.mipmaps.length>0)for(let De=0;De<P.mipmaps.length;De++)Te(ce.__webglFramebuffer[De],W,P,n.COLOR_ATTACHMENT0,Fe,De);else Te(ce.__webglFramebuffer,W,P,n.COLOR_ATTACHMENT0,Fe,0);g(P)&&m(Fe),t.unbindTexture()}W.depthBuffer&&bt(W)}function j(W){const P=W.textures;for(let ce=0,be=P.length;ce<be;ce++){const we=P[ce];if(g(we)){const Se=W.isWebGLCubeRenderTarget?n.TEXTURE_CUBE_MAP:n.TEXTURE_2D,Ze=r.get(we).__webglTexture;t.bindTexture(Se,Ze),m(Se),t.unbindTexture()}}}const wt=[],Et=[];function qt(W){if(W.samples>0){if(St(W)===!1){const P=W.textures,ce=W.width,be=W.height;let we=n.COLOR_BUFFER_BIT;const Se=W.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,Ze=r.get(W),Fe=P.length>1;if(Fe)for(let De=0;De<P.length;De++)t.bindFramebuffer(n.FRAMEBUFFER,Ze.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+De,n.RENDERBUFFER,null),t.bindFramebuffer(n.FRAMEBUFFER,Ze.__webglFramebuffer),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0+De,n.TEXTURE_2D,null,0);t.bindFramebuffer(n.READ_FRAMEBUFFER,Ze.__webglMultisampledFramebuffer),t.bindFramebuffer(n.DRAW_FRAMEBUFFER,Ze.__webglFramebuffer);for(let De=0;De<P.length;De++){if(W.resolveDepthBuffer&&(W.depthBuffer&&(we|=n.DEPTH_BUFFER_BIT),W.stencilBuffer&&W.resolveStencilBuffer&&(we|=n.STENCIL_BUFFER_BIT)),Fe){n.framebufferRenderbuffer(n.READ_FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.RENDERBUFFER,Ze.__webglColorRenderbuffer[De]);const pt=r.get(P[De]).__webglTexture;n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,pt,0)}n.blitFramebuffer(0,0,ce,be,0,0,ce,be,we,n.NEAREST),c===!0&&(wt.length=0,Et.length=0,wt.push(n.COLOR_ATTACHMENT0+De),W.depthBuffer&&W.resolveDepthBuffer===!1&&(wt.push(Se),Et.push(Se),n.invalidateFramebuffer(n.DRAW_FRAMEBUFFER,Et)),n.invalidateFramebuffer(n.READ_FRAMEBUFFER,wt))}if(t.bindFramebuffer(n.READ_FRAMEBUFFER,null),t.bindFramebuffer(n.DRAW_FRAMEBUFFER,null),Fe)for(let De=0;De<P.length;De++){t.bindFramebuffer(n.FRAMEBUFFER,Ze.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+De,n.RENDERBUFFER,Ze.__webglColorRenderbuffer[De]);const pt=r.get(P[De]).__webglTexture;t.bindFramebuffer(n.FRAMEBUFFER,Ze.__webglFramebuffer),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0+De,n.TEXTURE_2D,pt,0)}t.bindFramebuffer(n.DRAW_FRAMEBUFFER,Ze.__webglMultisampledFramebuffer)}else if(W.depthBuffer&&W.resolveDepthBuffer===!1&&c){const P=W.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT;n.invalidateFramebuffer(n.DRAW_FRAMEBUFFER,[P])}}}function rt(W){return Math.min(i.maxSamples,W.samples)}function St(W){const P=r.get(W);return W.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&P.__useRenderToTexture!==!1}function xt(W){const P=a.render.frame;u.get(W)!==P&&(u.set(W,P),W.update())}function lt(W,P){const ce=W.colorSpace,be=W.format,we=W.type;return W.isCompressedTexture===!0||W.isVideoTexture===!0||ce!==Es&&ce!==as&&(Yt.getTransfer(ce)===un?(be!==pi||we!==xs)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",ce)),P}function Ht(W){return typeof HTMLImageElement<"u"&&W instanceof HTMLImageElement?(l.width=W.naturalWidth||W.width,l.height=W.naturalHeight||W.height):typeof VideoFrame<"u"&&W instanceof VideoFrame?(l.width=W.displayWidth,l.height=W.displayHeight):(l.width=W.width,l.height=W.height),l}this.allocateTextureUnit=J,this.resetTextureUnits=B,this.setTexture2D=ae,this.setTexture2DArray=le,this.setTexture3D=he,this.setTextureCube=de,this.rebindTextures=ht,this.setupRenderTarget=gt,this.updateRenderTargetMipmap=j,this.updateMultisampleRenderTarget=qt,this.setupDepthRenderbuffer=bt,this.setupFrameBufferTexture=Te,this.useMultisampledRTT=St}function BE(n,e){function t(r,i=as){let s;const a=Yt.getTransfer(i);if(r===xs)return n.UNSIGNED_BYTE;if(r===Ng)return n.UNSIGNED_SHORT_4_4_4_4;if(r===Mg)return n.UNSIGNED_SHORT_5_5_5_1;if(r===__)return n.UNSIGNED_INT_5_9_9_9_REV;if(r===y_)return n.BYTE;if(r===v_)return n.SHORT;if(r===Il)return n.UNSIGNED_SHORT;if(r===Rg)return n.INT;if(r===lo)return n.UNSIGNED_INT;if(r===os)return n.FLOAT;if(r===su)return n.HALF_FLOAT;if(r===b_)return n.ALPHA;if(r===S_)return n.RGB;if(r===pi)return n.RGBA;if(r===w_)return n.LUMINANCE;if(r===E_)return n.LUMINANCE_ALPHA;if(r===to)return n.DEPTH_COMPONENT;if(r===ho)return n.DEPTH_STENCIL;if(r===T_)return n.RED;if(r===Ig)return n.RED_INTEGER;if(r===C_)return n.RG;if(r===Dg)return n.RG_INTEGER;if(r===Pg)return n.RGBA_INTEGER;if(r===Du||r===Pu||r===Ou||r===$u)if(a===un)if(s=e.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(r===Du)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(r===Pu)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(r===Ou)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(r===$u)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=e.get("WEBGL_compressed_texture_s3tc"),s!==null){if(r===Du)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===Pu)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===Ou)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===$u)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(r===Uf||r===Bf||r===Vf||r===zf)if(s=e.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(r===Uf)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===Bf)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===Vf)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===zf)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(r===Gf||r===Wf||r===Hf)if(s=e.get("WEBGL_compressed_texture_etc"),s!==null){if(r===Gf||r===Wf)return a===un?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(r===Hf)return a===un?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(r===Xf||r===jf||r===qf||r===Kf||r===Yf||r===Zf||r===Jf||r===Qf||r===ep||r===tp||r===np||r===rp||r===ip||r===sp)if(s=e.get("WEBGL_compressed_texture_astc"),s!==null){if(r===Xf)return a===un?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(r===jf)return a===un?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(r===qf)return a===un?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(r===Kf)return a===un?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(r===Yf)return a===un?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(r===Zf)return a===un?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(r===Jf)return a===un?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(r===Qf)return a===un?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(r===ep)return a===un?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(r===tp)return a===un?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(r===np)return a===un?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(r===rp)return a===un?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(r===ip)return a===un?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(r===sp)return a===un?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(r===Lu||r===ap||r===op)if(s=e.get("EXT_texture_compression_bptc"),s!==null){if(r===Lu)return a===un?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(r===ap)return s.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(r===op)return s.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(r===A_||r===cp||r===lp||r===up)if(s=e.get("EXT_texture_compression_rgtc"),s!==null){if(r===Lu)return s.COMPRESSED_RED_RGTC1_EXT;if(r===cp)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(r===lp)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(r===up)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return r===uo?n.UNSIGNED_INT_24_8:n[r]!==void 0?n[r]:null}return{convert:t}}class VE extends Lr{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class ll extends wr{constructor(){super(),this.isGroup=!0,this.type="Group"}}const zE={type:"move"};class lh{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new ll,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new ll,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new ue,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new ue),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new ll,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new ue,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new ue),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const r of e.hand.values())this._getHandJoint(t,r)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,r){let i=null,s=null,a=null;const o=this._targetRay,c=this._grip,l=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(l&&e.hand){a=!0;for(const x of e.hand.values()){const g=t.getJointPose(x,r),m=this._getHandJoint(l,x);g!==null&&(m.matrix.fromArray(g.transform.matrix),m.matrix.decompose(m.position,m.rotation,m.scale),m.matrixWorldNeedsUpdate=!0,m.jointRadius=g.radius),m.visible=g!==null}const u=l.joints["index-finger-tip"],h=l.joints["thumb-tip"],d=u.position.distanceTo(h.position),f=.02,p=.005;l.inputState.pinching&&d>f+p?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&d<=f-p&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else c!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,r),s!==null&&(c.matrix.fromArray(s.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,s.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(s.linearVelocity)):c.hasLinearVelocity=!1,s.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(s.angularVelocity)):c.hasAngularVelocity=!1));o!==null&&(i=t.getPose(e.targetRaySpace,r),i===null&&s!==null&&(i=s),i!==null&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,i.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(i.linearVelocity)):o.hasLinearVelocity=!1,i.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(i.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(zE)))}return o!==null&&(o.visible=i!==null),c!==null&&(c.visible=s!==null),l!==null&&(l.visible=a!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const r=new ll;r.matrixAutoUpdate=!1,r.visible=!1,e.joints[t.jointName]=r,e.add(r)}return e.joints[t.jointName]}}const GE=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,WE=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class HE{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,r){if(this.texture===null){const i=new tr,s=e.properties.get(i);s.__webglTexture=t.texture,(t.depthNear!=r.depthNear||t.depthFar!=r.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=i}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,r=new ys({vertexShader:GE,fragmentShader:WE,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new mi(new Cc(20,20),r)}return this.mesh}reset(){this.texture=null,this.mesh=null}}class XE extends So{constructor(e,t){super();const r=this;let i=null,s=1,a=null,o="local-floor",c=1,l=null,u=null,h=null,d=null,f=null,p=null;const x=new HE,g=t.getContextAttributes();let m=null,_=null;const b=[],w=[],I=new Kt;let M=null;const D=new Lr;D.layers.enable(1),D.viewport=new Vn;const F=new Lr;F.layers.enable(2),F.viewport=new Vn;const N=[D,F],A=new VE;A.layers.enable(1),A.layers.enable(2);let B=null,J=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(xe){let Te=b[xe];return Te===void 0&&(Te=new lh,b[xe]=Te),Te.getTargetRaySpace()},this.getControllerGrip=function(xe){let Te=b[xe];return Te===void 0&&(Te=new lh,b[xe]=Te),Te.getGripSpace()},this.getHand=function(xe){let Te=b[xe];return Te===void 0&&(Te=new lh,b[xe]=Te),Te.getHandSpace()};function Y(xe){const Te=w.indexOf(xe.inputSource);if(Te===-1)return;const Ge=b[Te];Ge!==void 0&&(Ge.update(xe.inputSource,xe.frame,l||a),Ge.dispatchEvent({type:xe.type,data:xe.inputSource}))}function ae(){i.removeEventListener("select",Y),i.removeEventListener("selectstart",Y),i.removeEventListener("selectend",Y),i.removeEventListener("squeeze",Y),i.removeEventListener("squeezestart",Y),i.removeEventListener("squeezeend",Y),i.removeEventListener("end",ae),i.removeEventListener("inputsourceschange",le);for(let xe=0;xe<b.length;xe++){const Te=w[xe];Te!==null&&(w[xe]=null,b[xe].disconnect(Te))}B=null,J=null,x.reset(),e.setRenderTarget(m),f=null,d=null,h=null,i=null,_=null,Ot.stop(),r.isPresenting=!1,e.setPixelRatio(M),e.setSize(I.width,I.height,!1),r.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(xe){s=xe,r.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(xe){o=xe,r.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||a},this.setReferenceSpace=function(xe){l=xe},this.getBaseLayer=function(){return d!==null?d:f},this.getBinding=function(){return h},this.getFrame=function(){return p},this.getSession=function(){return i},this.setSession=async function(xe){if(i=xe,i!==null){if(m=e.getRenderTarget(),i.addEventListener("select",Y),i.addEventListener("selectstart",Y),i.addEventListener("selectend",Y),i.addEventListener("squeeze",Y),i.addEventListener("squeezestart",Y),i.addEventListener("squeezeend",Y),i.addEventListener("end",ae),i.addEventListener("inputsourceschange",le),g.xrCompatible!==!0&&await t.makeXRCompatible(),M=e.getPixelRatio(),e.getSize(I),i.renderState.layers===void 0){const Te={antialias:g.antialias,alpha:!0,depth:g.depth,stencil:g.stencil,framebufferScaleFactor:s};f=new XRWebGLLayer(i,t,Te),i.updateRenderState({baseLayer:f}),e.setPixelRatio(1),e.setSize(f.framebufferWidth,f.framebufferHeight,!1),_=new sa(f.framebufferWidth,f.framebufferHeight,{format:pi,type:xs,colorSpace:e.outputColorSpace,stencilBuffer:g.stencil})}else{let Te=null,Ge=null,Be=null;g.depth&&(Be=g.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,Te=g.stencil?ho:to,Ge=g.stencil?uo:lo);const bt={colorFormat:t.RGBA8,depthFormat:Be,scaleFactor:s};h=new XRWebGLBinding(i,t),d=h.createProjectionLayer(bt),i.updateRenderState({layers:[d]}),e.setPixelRatio(1),e.setSize(d.textureWidth,d.textureHeight,!1),_=new sa(d.textureWidth,d.textureHeight,{format:pi,type:xs,depthTexture:new qg(d.textureWidth,d.textureHeight,Ge,void 0,void 0,void 0,void 0,void 0,void 0,Te),stencilBuffer:g.stencil,colorSpace:e.outputColorSpace,samples:g.antialias?4:0,resolveDepthBuffer:d.ignoreDepthValues===!1})}_.isXRRenderTarget=!0,this.setFoveation(c),l=null,a=await i.requestReferenceSpace(o),Ot.setContext(i),Ot.start(),r.isPresenting=!0,r.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode};function le(xe){for(let Te=0;Te<xe.removed.length;Te++){const Ge=xe.removed[Te],Be=w.indexOf(Ge);Be>=0&&(w[Be]=null,b[Be].disconnect(Ge))}for(let Te=0;Te<xe.added.length;Te++){const Ge=xe.added[Te];let Be=w.indexOf(Ge);if(Be===-1){for(let ht=0;ht<b.length;ht++)if(ht>=w.length){w.push(Ge),Be=ht;break}else if(w[ht]===null){w[ht]=Ge,Be=ht;break}if(Be===-1)break}const bt=b[Be];bt&&bt.connect(Ge)}}const he=new ue,de=new ue;function oe(xe,Te,Ge){he.setFromMatrixPosition(Te.matrixWorld),de.setFromMatrixPosition(Ge.matrixWorld);const Be=he.distanceTo(de),bt=Te.projectionMatrix.elements,ht=Ge.projectionMatrix.elements,gt=bt[14]/(bt[10]-1),j=bt[14]/(bt[10]+1),wt=(bt[9]+1)/bt[5],Et=(bt[9]-1)/bt[5],qt=(bt[8]-1)/bt[0],rt=(ht[8]+1)/ht[0],St=gt*qt,xt=gt*rt,lt=Be/(-qt+rt),Ht=lt*-qt;Te.matrixWorld.decompose(xe.position,xe.quaternion,xe.scale),xe.translateX(Ht),xe.translateZ(lt),xe.matrixWorld.compose(xe.position,xe.quaternion,xe.scale),xe.matrixWorldInverse.copy(xe.matrixWorld).invert();const W=gt+lt,P=j+lt,ce=St-Ht,be=xt+(Be-Ht),we=wt*j/P*W,Se=Et*j/P*W;xe.projectionMatrix.makePerspective(ce,be,we,Se,W,P),xe.projectionMatrixInverse.copy(xe.projectionMatrix).invert()}function $e(xe,Te){Te===null?xe.matrixWorld.copy(xe.matrix):xe.matrixWorld.multiplyMatrices(Te.matrixWorld,xe.matrix),xe.matrixWorldInverse.copy(xe.matrixWorld).invert()}this.updateCamera=function(xe){if(i===null)return;x.texture!==null&&(xe.near=x.depthNear,xe.far=x.depthFar),A.near=F.near=D.near=xe.near,A.far=F.far=D.far=xe.far,(B!==A.near||J!==A.far)&&(i.updateRenderState({depthNear:A.near,depthFar:A.far}),B=A.near,J=A.far,D.near=B,D.far=J,F.near=B,F.far=J,D.updateProjectionMatrix(),F.updateProjectionMatrix(),xe.updateProjectionMatrix());const Te=xe.parent,Ge=A.cameras;$e(A,Te);for(let Be=0;Be<Ge.length;Be++)$e(Ge[Be],Te);Ge.length===2?oe(A,D,F):A.projectionMatrix.copy(D.projectionMatrix),He(xe,A,Te)};function He(xe,Te,Ge){Ge===null?xe.matrix.copy(Te.matrixWorld):(xe.matrix.copy(Ge.matrixWorld),xe.matrix.invert(),xe.matrix.multiply(Te.matrixWorld)),xe.matrix.decompose(xe.position,xe.quaternion,xe.scale),xe.updateMatrixWorld(!0),xe.projectionMatrix.copy(Te.projectionMatrix),xe.projectionMatrixInverse.copy(Te.projectionMatrixInverse),xe.isPerspectiveCamera&&(xe.fov=Fh*2*Math.atan(1/xe.projectionMatrix.elements[5]),xe.zoom=1)}this.getCamera=function(){return A},this.getFoveation=function(){if(!(d===null&&f===null))return c},this.setFoveation=function(xe){c=xe,d!==null&&(d.fixedFoveation=xe),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=xe)},this.hasDepthSensing=function(){return x.texture!==null},this.getDepthSensingMesh=function(){return x.getMesh(A)};let ze=null;function _t(xe,Te){if(u=Te.getViewerPose(l||a),p=Te,u!==null){const Ge=u.views;f!==null&&(e.setRenderTargetFramebuffer(_,f.framebuffer),e.setRenderTarget(_));let Be=!1;Ge.length!==A.cameras.length&&(A.cameras.length=0,Be=!0);for(let ht=0;ht<Ge.length;ht++){const gt=Ge[ht];let j=null;if(f!==null)j=f.getViewport(gt);else{const Et=h.getViewSubImage(d,gt);j=Et.viewport,ht===0&&(e.setRenderTargetTextures(_,Et.colorTexture,d.ignoreDepthValues?void 0:Et.depthStencilTexture),e.setRenderTarget(_))}let wt=N[ht];wt===void 0&&(wt=new Lr,wt.layers.enable(ht),wt.viewport=new Vn,N[ht]=wt),wt.matrix.fromArray(gt.transform.matrix),wt.matrix.decompose(wt.position,wt.quaternion,wt.scale),wt.projectionMatrix.fromArray(gt.projectionMatrix),wt.projectionMatrixInverse.copy(wt.projectionMatrix).invert(),wt.viewport.set(j.x,j.y,j.width,j.height),ht===0&&(A.matrix.copy(wt.matrix),A.matrix.decompose(A.position,A.quaternion,A.scale)),Be===!0&&A.cameras.push(wt)}const bt=i.enabledFeatures;if(bt&&bt.includes("depth-sensing")){const ht=h.getDepthInformation(Ge[0]);ht&&ht.isValid&&ht.texture&&x.init(e,ht,i.renderState)}}for(let Ge=0;Ge<b.length;Ge++){const Be=w[Ge],bt=b[Ge];Be!==null&&bt!==void 0&&bt.update(Be,Te,l||a)}ze&&ze(xe,Te),Te.detectedPlanes&&r.dispatchEvent({type:"planesdetected",data:Te}),p=null}const Ot=new jg;Ot.setAnimationLoop(_t),this.setAnimationLoop=function(xe){ze=xe},this.dispose=function(){}}}const ks=new Fi,jE=new Tn;function qE(n,e){function t(g,m){g.matrixAutoUpdate===!0&&g.updateMatrix(),m.value.copy(g.matrix)}function r(g,m){m.color.getRGB(g.fogColor.value,Gg(n)),m.isFog?(g.fogNear.value=m.near,g.fogFar.value=m.far):m.isFogExp2&&(g.fogDensity.value=m.density)}function i(g,m,_,b,w){m.isMeshBasicMaterial||m.isMeshLambertMaterial?s(g,m):m.isMeshToonMaterial?(s(g,m),h(g,m)):m.isMeshPhongMaterial?(s(g,m),u(g,m)):m.isMeshStandardMaterial?(s(g,m),d(g,m),m.isMeshPhysicalMaterial&&f(g,m,w)):m.isMeshMatcapMaterial?(s(g,m),p(g,m)):m.isMeshDepthMaterial?s(g,m):m.isMeshDistanceMaterial?(s(g,m),x(g,m)):m.isMeshNormalMaterial?s(g,m):m.isLineBasicMaterial?(a(g,m),m.isLineDashedMaterial&&o(g,m)):m.isPointsMaterial?c(g,m,_,b):m.isSpriteMaterial?l(g,m):m.isShadowMaterial?(g.color.value.copy(m.color),g.opacity.value=m.opacity):m.isShaderMaterial&&(m.uniformsNeedUpdate=!1)}function s(g,m){g.opacity.value=m.opacity,m.color&&g.diffuse.value.copy(m.color),m.emissive&&g.emissive.value.copy(m.emissive).multiplyScalar(m.emissiveIntensity),m.map&&(g.map.value=m.map,t(m.map,g.mapTransform)),m.alphaMap&&(g.alphaMap.value=m.alphaMap,t(m.alphaMap,g.alphaMapTransform)),m.bumpMap&&(g.bumpMap.value=m.bumpMap,t(m.bumpMap,g.bumpMapTransform),g.bumpScale.value=m.bumpScale,m.side===pr&&(g.bumpScale.value*=-1)),m.normalMap&&(g.normalMap.value=m.normalMap,t(m.normalMap,g.normalMapTransform),g.normalScale.value.copy(m.normalScale),m.side===pr&&g.normalScale.value.negate()),m.displacementMap&&(g.displacementMap.value=m.displacementMap,t(m.displacementMap,g.displacementMapTransform),g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias),m.emissiveMap&&(g.emissiveMap.value=m.emissiveMap,t(m.emissiveMap,g.emissiveMapTransform)),m.specularMap&&(g.specularMap.value=m.specularMap,t(m.specularMap,g.specularMapTransform)),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest);const _=e.get(m),b=_.envMap,w=_.envMapRotation;b&&(g.envMap.value=b,ks.copy(w),ks.x*=-1,ks.y*=-1,ks.z*=-1,b.isCubeTexture&&b.isRenderTargetTexture===!1&&(ks.y*=-1,ks.z*=-1),g.envMapRotation.value.setFromMatrix4(jE.makeRotationFromEuler(ks)),g.flipEnvMap.value=b.isCubeTexture&&b.isRenderTargetTexture===!1?-1:1,g.reflectivity.value=m.reflectivity,g.ior.value=m.ior,g.refractionRatio.value=m.refractionRatio),m.lightMap&&(g.lightMap.value=m.lightMap,g.lightMapIntensity.value=m.lightMapIntensity,t(m.lightMap,g.lightMapTransform)),m.aoMap&&(g.aoMap.value=m.aoMap,g.aoMapIntensity.value=m.aoMapIntensity,t(m.aoMap,g.aoMapTransform))}function a(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,m.map&&(g.map.value=m.map,t(m.map,g.mapTransform))}function o(g,m){g.dashSize.value=m.dashSize,g.totalSize.value=m.dashSize+m.gapSize,g.scale.value=m.scale}function c(g,m,_,b){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.size.value=m.size*_,g.scale.value=b*.5,m.map&&(g.map.value=m.map,t(m.map,g.uvTransform)),m.alphaMap&&(g.alphaMap.value=m.alphaMap,t(m.alphaMap,g.alphaMapTransform)),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest)}function l(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.rotation.value=m.rotation,m.map&&(g.map.value=m.map,t(m.map,g.mapTransform)),m.alphaMap&&(g.alphaMap.value=m.alphaMap,t(m.alphaMap,g.alphaMapTransform)),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest)}function u(g,m){g.specular.value.copy(m.specular),g.shininess.value=Math.max(m.shininess,1e-4)}function h(g,m){m.gradientMap&&(g.gradientMap.value=m.gradientMap)}function d(g,m){g.metalness.value=m.metalness,m.metalnessMap&&(g.metalnessMap.value=m.metalnessMap,t(m.metalnessMap,g.metalnessMapTransform)),g.roughness.value=m.roughness,m.roughnessMap&&(g.roughnessMap.value=m.roughnessMap,t(m.roughnessMap,g.roughnessMapTransform)),m.envMap&&(g.envMapIntensity.value=m.envMapIntensity)}function f(g,m,_){g.ior.value=m.ior,m.sheen>0&&(g.sheenColor.value.copy(m.sheenColor).multiplyScalar(m.sheen),g.sheenRoughness.value=m.sheenRoughness,m.sheenColorMap&&(g.sheenColorMap.value=m.sheenColorMap,t(m.sheenColorMap,g.sheenColorMapTransform)),m.sheenRoughnessMap&&(g.sheenRoughnessMap.value=m.sheenRoughnessMap,t(m.sheenRoughnessMap,g.sheenRoughnessMapTransform))),m.clearcoat>0&&(g.clearcoat.value=m.clearcoat,g.clearcoatRoughness.value=m.clearcoatRoughness,m.clearcoatMap&&(g.clearcoatMap.value=m.clearcoatMap,t(m.clearcoatMap,g.clearcoatMapTransform)),m.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=m.clearcoatRoughnessMap,t(m.clearcoatRoughnessMap,g.clearcoatRoughnessMapTransform)),m.clearcoatNormalMap&&(g.clearcoatNormalMap.value=m.clearcoatNormalMap,t(m.clearcoatNormalMap,g.clearcoatNormalMapTransform),g.clearcoatNormalScale.value.copy(m.clearcoatNormalScale),m.side===pr&&g.clearcoatNormalScale.value.negate())),m.dispersion>0&&(g.dispersion.value=m.dispersion),m.iridescence>0&&(g.iridescence.value=m.iridescence,g.iridescenceIOR.value=m.iridescenceIOR,g.iridescenceThicknessMinimum.value=m.iridescenceThicknessRange[0],g.iridescenceThicknessMaximum.value=m.iridescenceThicknessRange[1],m.iridescenceMap&&(g.iridescenceMap.value=m.iridescenceMap,t(m.iridescenceMap,g.iridescenceMapTransform)),m.iridescenceThicknessMap&&(g.iridescenceThicknessMap.value=m.iridescenceThicknessMap,t(m.iridescenceThicknessMap,g.iridescenceThicknessMapTransform))),m.transmission>0&&(g.transmission.value=m.transmission,g.transmissionSamplerMap.value=_.texture,g.transmissionSamplerSize.value.set(_.width,_.height),m.transmissionMap&&(g.transmissionMap.value=m.transmissionMap,t(m.transmissionMap,g.transmissionMapTransform)),g.thickness.value=m.thickness,m.thicknessMap&&(g.thicknessMap.value=m.thicknessMap,t(m.thicknessMap,g.thicknessMapTransform)),g.attenuationDistance.value=m.attenuationDistance,g.attenuationColor.value.copy(m.attenuationColor)),m.anisotropy>0&&(g.anisotropyVector.value.set(m.anisotropy*Math.cos(m.anisotropyRotation),m.anisotropy*Math.sin(m.anisotropyRotation)),m.anisotropyMap&&(g.anisotropyMap.value=m.anisotropyMap,t(m.anisotropyMap,g.anisotropyMapTransform))),g.specularIntensity.value=m.specularIntensity,g.specularColor.value.copy(m.specularColor),m.specularColorMap&&(g.specularColorMap.value=m.specularColorMap,t(m.specularColorMap,g.specularColorMapTransform)),m.specularIntensityMap&&(g.specularIntensityMap.value=m.specularIntensityMap,t(m.specularIntensityMap,g.specularIntensityMapTransform))}function p(g,m){m.matcap&&(g.matcap.value=m.matcap)}function x(g,m){const _=e.get(m).light;g.referencePosition.value.setFromMatrixPosition(_.matrixWorld),g.nearDistance.value=_.shadow.camera.near,g.farDistance.value=_.shadow.camera.far}return{refreshFogUniforms:r,refreshMaterialUniforms:i}}function KE(n,e,t,r){let i={},s={},a=[];const o=n.getParameter(n.MAX_UNIFORM_BUFFER_BINDINGS);function c(_,b){const w=b.program;r.uniformBlockBinding(_,w)}function l(_,b){let w=i[_.id];w===void 0&&(p(_),w=u(_),i[_.id]=w,_.addEventListener("dispose",g));const I=b.program;r.updateUBOMapping(_,I);const M=e.render.frame;s[_.id]!==M&&(d(_),s[_.id]=M)}function u(_){const b=h();_.__bindingPointIndex=b;const w=n.createBuffer(),I=_.__size,M=_.usage;return n.bindBuffer(n.UNIFORM_BUFFER,w),n.bufferData(n.UNIFORM_BUFFER,I,M),n.bindBuffer(n.UNIFORM_BUFFER,null),n.bindBufferBase(n.UNIFORM_BUFFER,b,w),w}function h(){for(let _=0;_<o;_++)if(a.indexOf(_)===-1)return a.push(_),_;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function d(_){const b=i[_.id],w=_.uniforms,I=_.__cache;n.bindBuffer(n.UNIFORM_BUFFER,b);for(let M=0,D=w.length;M<D;M++){const F=Array.isArray(w[M])?w[M]:[w[M]];for(let N=0,A=F.length;N<A;N++){const B=F[N];if(f(B,M,N,I)===!0){const J=B.__offset,Y=Array.isArray(B.value)?B.value:[B.value];let ae=0;for(let le=0;le<Y.length;le++){const he=Y[le],de=x(he);typeof he=="number"||typeof he=="boolean"?(B.__data[0]=he,n.bufferSubData(n.UNIFORM_BUFFER,J+ae,B.__data)):he.isMatrix3?(B.__data[0]=he.elements[0],B.__data[1]=he.elements[1],B.__data[2]=he.elements[2],B.__data[3]=0,B.__data[4]=he.elements[3],B.__data[5]=he.elements[4],B.__data[6]=he.elements[5],B.__data[7]=0,B.__data[8]=he.elements[6],B.__data[9]=he.elements[7],B.__data[10]=he.elements[8],B.__data[11]=0):(he.toArray(B.__data,ae),ae+=de.storage/Float32Array.BYTES_PER_ELEMENT)}n.bufferSubData(n.UNIFORM_BUFFER,J,B.__data)}}}n.bindBuffer(n.UNIFORM_BUFFER,null)}function f(_,b,w,I){const M=_.value,D=b+"_"+w;if(I[D]===void 0)return typeof M=="number"||typeof M=="boolean"?I[D]=M:I[D]=M.clone(),!0;{const F=I[D];if(typeof M=="number"||typeof M=="boolean"){if(F!==M)return I[D]=M,!0}else if(F.equals(M)===!1)return F.copy(M),!0}return!1}function p(_){const b=_.uniforms;let w=0;const I=16;for(let D=0,F=b.length;D<F;D++){const N=Array.isArray(b[D])?b[D]:[b[D]];for(let A=0,B=N.length;A<B;A++){const J=N[A],Y=Array.isArray(J.value)?J.value:[J.value];for(let ae=0,le=Y.length;ae<le;ae++){const he=Y[ae],de=x(he),oe=w%I;oe!==0&&I-oe<de.boundary&&(w+=I-oe),J.__data=new Float32Array(de.storage/Float32Array.BYTES_PER_ELEMENT),J.__offset=w,w+=de.storage}}}const M=w%I;return M>0&&(w+=I-M),_.__size=w,_.__cache={},this}function x(_){const b={boundary:0,storage:0};return typeof _=="number"||typeof _=="boolean"?(b.boundary=4,b.storage=4):_.isVector2?(b.boundary=8,b.storage=8):_.isVector3||_.isColor?(b.boundary=16,b.storage=12):_.isVector4?(b.boundary=16,b.storage=16):_.isMatrix3?(b.boundary=48,b.storage=48):_.isMatrix4?(b.boundary=64,b.storage=64):_.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",_),b}function g(_){const b=_.target;b.removeEventListener("dispose",g);const w=a.indexOf(b.__bindingPointIndex);a.splice(w,1),n.deleteBuffer(i[b.id]),delete i[b.id],delete s[b.id]}function m(){for(const _ in i)n.deleteBuffer(i[_]);a=[],i={},s={}}return{bind:c,update:l,dispose:m}}class YE{constructor(e={}){const{canvas:t=B_(),context:r=null,depth:i=!0,stencil:s=!1,alpha:a=!1,antialias:o=!1,premultipliedAlpha:c=!0,preserveDrawingBuffer:l=!1,powerPreference:u="default",failIfMajorPerformanceCaveat:h=!1}=e;this.isWebGLRenderer=!0;let d;if(r!==null){if(typeof WebGLRenderingContext<"u"&&r instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");d=r.getContextAttributes().alpha}else d=a;const f=new Uint32Array(4),p=new Int32Array(4);let x=null,g=null;const m=[],_=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=Jr,this.toneMapping=hs,this.toneMappingExposure=1;const b=this;let w=!1,I=0,M=0,D=null,F=-1,N=null;const A=new Vn,B=new Vn;let J=null;const Y=new en(0);let ae=0,le=t.width,he=t.height,de=1,oe=null,$e=null;const He=new Vn(0,0,le,he),ze=new Vn(0,0,le,he);let _t=!1;const Ot=new Xg;let xe=!1,Te=!1;const Ge=new Tn,Be=new ue,bt={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let ht=!1;function gt(){return D===null?de:1}let j=r;function wt(L,Z){return t.getContext(L,Z)}try{const L={alpha:!0,depth:i,stencil:s,antialias:o,premultipliedAlpha:c,preserveDrawingBuffer:l,powerPreference:u,failIfMajorPerformanceCaveat:h};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${Dd}`),t.addEventListener("webglcontextlost",Ee,!1),t.addEventListener("webglcontextrestored",fe,!1),t.addEventListener("webglcontextcreationerror",ve,!1),j===null){const Z="webgl2";if(j=wt(Z,L),j===null)throw wt(Z)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(L){throw console.error("THREE.WebGLRenderer: "+L.message),L}let Et,qt,rt,St,xt,lt,Ht,W,P,ce,be,we,Se,Ze,Fe,De,pt,Ne,et,At,ft,Me,tt,at;function kt(){Et=new i4(j),Et.init(),Me=new BE(j,Et),qt=new Zw(j,Et,e,Me),rt=new FE(j),St=new o4(j),xt=new EE,lt=new UE(j,Et,rt,xt,qt,Me,St),Ht=new Qw(b),W=new r4(b),P=new fb(j),tt=new Kw(j,P),ce=new s4(j,P,St,tt),be=new l4(j,ce,P,St),et=new c4(j,qt,lt),De=new Jw(xt),we=new wE(b,Ht,W,Et,qt,tt,De),Se=new qE(b,xt),Ze=new CE,Fe=new DE(Et),Ne=new qw(b,Ht,W,rt,be,d,c),pt=new kE(b,be,qt),at=new KE(j,St,qt,rt),At=new Yw(j,Et,St),ft=new a4(j,Et,St),St.programs=we.programs,b.capabilities=qt,b.extensions=Et,b.properties=xt,b.renderLists=Ze,b.shadowMap=pt,b.state=rt,b.info=St}kt();const K=new XE(b,j);this.xr=K,this.getContext=function(){return j},this.getContextAttributes=function(){return j.getContextAttributes()},this.forceContextLoss=function(){const L=Et.get("WEBGL_lose_context");L&&L.loseContext()},this.forceContextRestore=function(){const L=Et.get("WEBGL_lose_context");L&&L.restoreContext()},this.getPixelRatio=function(){return de},this.setPixelRatio=function(L){L!==void 0&&(de=L,this.setSize(le,he,!1))},this.getSize=function(L){return L.set(le,he)},this.setSize=function(L,Z,ie=!0){if(K.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}le=L,he=Z,t.width=Math.floor(L*de),t.height=Math.floor(Z*de),ie===!0&&(t.style.width=L+"px",t.style.height=Z+"px"),this.setViewport(0,0,L,Z)},this.getDrawingBufferSize=function(L){return L.set(le*de,he*de).floor()},this.setDrawingBufferSize=function(L,Z,ie){le=L,he=Z,de=ie,t.width=Math.floor(L*ie),t.height=Math.floor(Z*ie),this.setViewport(0,0,L,Z)},this.getCurrentViewport=function(L){return L.copy(A)},this.getViewport=function(L){return L.copy(He)},this.setViewport=function(L,Z,ie,se){L.isVector4?He.set(L.x,L.y,L.z,L.w):He.set(L,Z,ie,se),rt.viewport(A.copy(He).multiplyScalar(de).round())},this.getScissor=function(L){return L.copy(ze)},this.setScissor=function(L,Z,ie,se){L.isVector4?ze.set(L.x,L.y,L.z,L.w):ze.set(L,Z,ie,se),rt.scissor(B.copy(ze).multiplyScalar(de).round())},this.getScissorTest=function(){return _t},this.setScissorTest=function(L){rt.setScissorTest(_t=L)},this.setOpaqueSort=function(L){oe=L},this.setTransparentSort=function(L){$e=L},this.getClearColor=function(L){return L.copy(Ne.getClearColor())},this.setClearColor=function(){Ne.setClearColor.apply(Ne,arguments)},this.getClearAlpha=function(){return Ne.getClearAlpha()},this.setClearAlpha=function(){Ne.setClearAlpha.apply(Ne,arguments)},this.clear=function(L=!0,Z=!0,ie=!0){let se=0;if(L){let Q=!1;if(D!==null){const Pe=D.texture.format;Q=Pe===Pg||Pe===Dg||Pe===Ig}if(Q){const Pe=D.texture.type,je=Pe===xs||Pe===lo||Pe===Il||Pe===uo||Pe===Ng||Pe===Mg,Ye=Ne.getClearColor(),Qe=Ne.getClearAlpha(),ut=Ye.r,dt=Ye.g,ot=Ye.b;je?(f[0]=ut,f[1]=dt,f[2]=ot,f[3]=Qe,j.clearBufferuiv(j.COLOR,0,f)):(p[0]=ut,p[1]=dt,p[2]=ot,p[3]=Qe,j.clearBufferiv(j.COLOR,0,p))}else se|=j.COLOR_BUFFER_BIT}Z&&(se|=j.DEPTH_BUFFER_BIT),ie&&(se|=j.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),j.clear(se)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Ee,!1),t.removeEventListener("webglcontextrestored",fe,!1),t.removeEventListener("webglcontextcreationerror",ve,!1),Ze.dispose(),Fe.dispose(),xt.dispose(),Ht.dispose(),W.dispose(),be.dispose(),tt.dispose(),at.dispose(),we.dispose(),K.dispose(),K.removeEventListener("sessionstart",Nn),K.removeEventListener("sessionend",yn),ir.stop()};function Ee(L){L.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),w=!0}function fe(){console.log("THREE.WebGLRenderer: Context Restored."),w=!1;const L=St.autoReset,Z=pt.enabled,ie=pt.autoUpdate,se=pt.needsUpdate,Q=pt.type;kt(),St.autoReset=L,pt.enabled=Z,pt.autoUpdate=ie,pt.needsUpdate=se,pt.type=Q}function ve(L){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",L.statusMessage)}function Ce(L){const Z=L.target;Z.removeEventListener("dispose",Ce),it(Z)}function it(L){qe(L),xt.remove(L)}function qe(L){const Z=xt.get(L).programs;Z!==void 0&&(Z.forEach(function(ie){we.releaseProgram(ie)}),L.isShaderMaterial&&we.releaseShaderCache(L))}this.renderBufferDirect=function(L,Z,ie,se,Q,Pe){Z===null&&(Z=bt);const je=Q.isMesh&&Q.matrixWorld.determinant()<0,Ye=Ra(L,Z,ie,se,Q);rt.setMaterial(se,je);let Qe=ie.index,ut=1;if(se.wireframe===!0){if(Qe=ce.getWireframeAttribute(ie),Qe===void 0)return;ut=2}const dt=ie.drawRange,ot=ie.attributes.position;let $t=dt.start*ut,Xt=(dt.start+dt.count)*ut;Pe!==null&&($t=Math.max($t,Pe.start*ut),Xt=Math.min(Xt,(Pe.start+Pe.count)*ut)),Qe!==null?($t=Math.max($t,0),Xt=Math.min(Xt,Qe.count)):ot!=null&&($t=Math.max($t,0),Xt=Math.min(Xt,ot.count));const Ut=Xt-$t;if(Ut<0||Ut===1/0)return;tt.setup(Q,se,Ye,ie,Qe);let Fn,Wt=At;if(Qe!==null&&(Fn=P.get(Qe),Wt=ft,Wt.setIndex(Fn)),Q.isMesh)se.wireframe===!0?(rt.setLineWidth(se.wireframeLinewidth*gt()),Wt.setMode(j.LINES)):Wt.setMode(j.TRIANGLES);else if(Q.isLine){let st=se.linewidth;st===void 0&&(st=1),rt.setLineWidth(st*gt()),Q.isLineSegments?Wt.setMode(j.LINES):Q.isLineLoop?Wt.setMode(j.LINE_LOOP):Wt.setMode(j.LINE_STRIP)}else Q.isPoints?Wt.setMode(j.POINTS):Q.isSprite&&Wt.setMode(j.TRIANGLES);if(Q.isBatchedMesh)Q._multiDrawInstances!==null?Wt.renderMultiDrawInstances(Q._multiDrawStarts,Q._multiDrawCounts,Q._multiDrawCount,Q._multiDrawInstances):Wt.renderMultiDraw(Q._multiDrawStarts,Q._multiDrawCounts,Q._multiDrawCount);else if(Q.isInstancedMesh)Wt.renderInstances($t,Ut,Q.count);else if(ie.isInstancedBufferGeometry){const st=ie._maxInstanceCount!==void 0?ie._maxInstanceCount:1/0,_n=Math.min(ie.instanceCount,st);Wt.renderInstances($t,Ut,_n)}else Wt.render($t,Ut)};function nn(L,Z,ie){L.transparent===!0&&L.side===di&&L.forceSinglePass===!1?(L.side=pr,L.needsUpdate=!0,Zn(L,Z,ie),L.side=gs,L.needsUpdate=!0,Zn(L,Z,ie),L.side=di):Zn(L,Z,ie)}this.compile=function(L,Z,ie=null){ie===null&&(ie=L),g=Fe.get(ie),g.init(Z),_.push(g),ie.traverseVisible(function(Q){Q.isLight&&Q.layers.test(Z.layers)&&(g.pushLight(Q),Q.castShadow&&g.pushShadow(Q))}),L!==ie&&L.traverseVisible(function(Q){Q.isLight&&Q.layers.test(Z.layers)&&(g.pushLight(Q),Q.castShadow&&g.pushShadow(Q))}),g.setupLights();const se=new Set;return L.traverse(function(Q){const Pe=Q.material;if(Pe)if(Array.isArray(Pe))for(let je=0;je<Pe.length;je++){const Ye=Pe[je];nn(Ye,ie,Q),se.add(Ye)}else nn(Pe,ie,Q),se.add(Pe)}),_.pop(),g=null,se},this.compileAsync=function(L,Z,ie=null){const se=this.compile(L,Z,ie);return new Promise(Q=>{function Pe(){if(se.forEach(function(je){xt.get(je).currentProgram.isReady()&&se.delete(je)}),se.size===0){Q(L);return}setTimeout(Pe,10)}Et.get("KHR_parallel_shader_compile")!==null?Pe():setTimeout(Pe,10)})};let ln=null;function Ft(L){ln&&ln(L)}function Nn(){ir.stop()}function yn(){ir.start()}const ir=new jg;ir.setAnimationLoop(Ft),typeof self<"u"&&ir.setContext(self),this.setAnimationLoop=function(L){ln=L,K.setAnimationLoop(L),L===null?ir.stop():ir.start()},K.addEventListener("sessionstart",Nn),K.addEventListener("sessionend",yn),this.render=function(L,Z){if(Z!==void 0&&Z.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(w===!0)return;if(L.matrixWorldAutoUpdate===!0&&L.updateMatrixWorld(),Z.parent===null&&Z.matrixWorldAutoUpdate===!0&&Z.updateMatrixWorld(),K.enabled===!0&&K.isPresenting===!0&&(K.cameraAutoUpdate===!0&&K.updateCamera(Z),Z=K.getCamera()),L.isScene===!0&&L.onBeforeRender(b,L,Z,D),g=Fe.get(L,_.length),g.init(Z),_.push(g),Ge.multiplyMatrices(Z.projectionMatrix,Z.matrixWorldInverse),Ot.setFromProjectionMatrix(Ge),Te=this.localClippingEnabled,xe=De.init(this.clippingPlanes,Te),x=Ze.get(L,m.length),x.init(),m.push(x),K.enabled===!0&&K.isPresenting===!0){const Pe=b.xr.getDepthSensingMesh();Pe!==null&&kn(Pe,Z,-1/0,b.sortObjects)}kn(L,Z,0,b.sortObjects),x.finish(),b.sortObjects===!0&&x.sort(oe,$e),ht=K.enabled===!1||K.isPresenting===!1||K.hasDepthSensing()===!1,ht&&Ne.addToRenderList(x,L),this.info.render.frame++,xe===!0&&De.beginShadows();const ie=g.state.shadowsArray;pt.render(ie,L,Z),xe===!0&&De.endShadows(),this.info.autoReset===!0&&this.info.reset();const se=x.opaque,Q=x.transmissive;if(g.setupLights(),Z.isArrayCamera){const Pe=Z.cameras;if(Q.length>0)for(let je=0,Ye=Pe.length;je<Ye;je++){const Qe=Pe[je];Ns(se,Q,L,Qe)}ht&&Ne.render(L);for(let je=0,Ye=Pe.length;je<Ye;je++){const Qe=Pe[je];yr(x,L,Qe,Qe.viewport)}}else Q.length>0&&Ns(se,Q,L,Z),ht&&Ne.render(L),yr(x,L,Z);D!==null&&(lt.updateMultisampleRenderTarget(D),lt.updateRenderTargetMipmap(D)),L.isScene===!0&&L.onAfterRender(b,L,Z),tt.resetDefaultState(),F=-1,N=null,_.pop(),_.length>0?(g=_[_.length-1],xe===!0&&De.setGlobalState(b.clippingPlanes,g.state.camera)):g=null,m.pop(),m.length>0?x=m[m.length-1]:x=null};function kn(L,Z,ie,se){if(L.visible===!1)return;if(L.layers.test(Z.layers)){if(L.isGroup)ie=L.renderOrder;else if(L.isLOD)L.autoUpdate===!0&&L.update(Z);else if(L.isLight)g.pushLight(L),L.castShadow&&g.pushShadow(L);else if(L.isSprite){if(!L.frustumCulled||Ot.intersectsSprite(L)){se&&Be.setFromMatrixPosition(L.matrixWorld).applyMatrix4(Ge);const je=be.update(L),Ye=L.material;Ye.visible&&x.push(L,je,Ye,ie,Be.z,null)}}else if((L.isMesh||L.isLine||L.isPoints)&&(!L.frustumCulled||Ot.intersectsObject(L))){const je=be.update(L),Ye=L.material;if(se&&(L.boundingSphere!==void 0?(L.boundingSphere===null&&L.computeBoundingSphere(),Be.copy(L.boundingSphere.center)):(je.boundingSphere===null&&je.computeBoundingSphere(),Be.copy(je.boundingSphere.center)),Be.applyMatrix4(L.matrixWorld).applyMatrix4(Ge)),Array.isArray(Ye)){const Qe=je.groups;for(let ut=0,dt=Qe.length;ut<dt;ut++){const ot=Qe[ut],$t=Ye[ot.materialIndex];$t&&$t.visible&&x.push(L,je,$t,ie,Be.z,ot)}}else Ye.visible&&x.push(L,je,Ye,ie,Be.z,null)}}const Pe=L.children;for(let je=0,Ye=Pe.length;je<Ye;je++)kn(Pe[je],Z,ie,se)}function yr(L,Z,ie,se){const Q=L.opaque,Pe=L.transmissive,je=L.transparent;g.setupLightsView(ie),xe===!0&&De.setGlobalState(b.clippingPlanes,ie),se&&rt.viewport(A.copy(se)),Q.length>0&&qi(Q,Z,ie),Pe.length>0&&qi(Pe,Z,ie),je.length>0&&qi(je,Z,ie),rt.buffers.depth.setTest(!0),rt.buffers.depth.setMask(!0),rt.buffers.color.setMask(!0),rt.setPolygonOffset(!1)}function Ns(L,Z,ie,se){if((ie.isScene===!0?ie.overrideMaterial:null)!==null)return;g.state.transmissionRenderTarget[se.id]===void 0&&(g.state.transmissionRenderTarget[se.id]=new sa(1,1,{generateMipmaps:!0,type:Et.has("EXT_color_buffer_half_float")||Et.has("EXT_color_buffer_float")?su:xs,minFilter:Zs,samples:4,stencilBuffer:s,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:Yt.workingColorSpace}));const Pe=g.state.transmissionRenderTarget[se.id],je=se.viewport||A;Pe.setSize(je.z,je.w);const Ye=b.getRenderTarget();b.setRenderTarget(Pe),b.getClearColor(Y),ae=b.getClearAlpha(),ae<1&&b.setClearColor(16777215,.5),ht?Ne.render(ie):b.clear();const Qe=b.toneMapping;b.toneMapping=hs;const ut=se.viewport;if(se.viewport!==void 0&&(se.viewport=void 0),g.setupLightsView(se),xe===!0&&De.setGlobalState(b.clippingPlanes,se),qi(L,ie,se),lt.updateMultisampleRenderTarget(Pe),lt.updateRenderTargetMipmap(Pe),Et.has("WEBGL_multisampled_render_to_texture")===!1){let dt=!1;for(let ot=0,$t=Z.length;ot<$t;ot++){const Xt=Z[ot],Ut=Xt.object,Fn=Xt.geometry,Wt=Xt.material,st=Xt.group;if(Wt.side===di&&Ut.layers.test(se.layers)){const _n=Wt.side;Wt.side=pr,Wt.needsUpdate=!0,vn(Ut,ie,se,Fn,Wt,st),Wt.side=_n,Wt.needsUpdate=!0,dt=!0}}dt===!0&&(lt.updateMultisampleRenderTarget(Pe),lt.updateRenderTargetMipmap(Pe))}b.setRenderTarget(Ye),b.setClearColor(Y,ae),ut!==void 0&&(se.viewport=ut),b.toneMapping=Qe}function qi(L,Z,ie){const se=Z.isScene===!0?Z.overrideMaterial:null;for(let Q=0,Pe=L.length;Q<Pe;Q++){const je=L[Q],Ye=je.object,Qe=je.geometry,ut=se===null?je.material:se,dt=je.group;Ye.layers.test(ie.layers)&&vn(Ye,Z,ie,Qe,ut,dt)}}function vn(L,Z,ie,se,Q,Pe){L.onBeforeRender(b,Z,ie,se,Q,Pe),L.modelViewMatrix.multiplyMatrices(ie.matrixWorldInverse,L.matrixWorld),L.normalMatrix.getNormalMatrix(L.modelViewMatrix),Q.onBeforeRender(b,Z,ie,se,L,Pe),Q.transparent===!0&&Q.side===di&&Q.forceSinglePass===!1?(Q.side=pr,Q.needsUpdate=!0,b.renderBufferDirect(ie,Z,se,Q,L,Pe),Q.side=gs,Q.needsUpdate=!0,b.renderBufferDirect(ie,Z,se,Q,L,Pe),Q.side=di):b.renderBufferDirect(ie,Z,se,Q,L,Pe),L.onAfterRender(b,Z,ie,se,Q,Pe)}function Zn(L,Z,ie){Z.isScene!==!0&&(Z=bt);const se=xt.get(L),Q=g.state.lights,Pe=g.state.shadowsArray,je=Q.state.version,Ye=we.getParameters(L,Q.state,Pe,Z,ie),Qe=we.getProgramCacheKey(Ye);let ut=se.programs;se.environment=L.isMeshStandardMaterial?Z.environment:null,se.fog=Z.fog,se.envMap=(L.isMeshStandardMaterial?W:Ht).get(L.envMap||se.environment),se.envMapRotation=se.environment!==null&&L.envMap===null?Z.environmentRotation:L.envMapRotation,ut===void 0&&(L.addEventListener("dispose",Ce),ut=new Map,se.programs=ut);let dt=ut.get(Qe);if(dt!==void 0){if(se.currentProgram===dt&&se.lightsStateVersion===je)return Ei(L,Ye),dt}else Ye.uniforms=we.getUniforms(L),L.onBuild(ie,Ye,b),L.onBeforeCompile(Ye,b),dt=we.acquireProgram(Ye,Qe),ut.set(Qe,dt),se.uniforms=Ye.uniforms;const ot=se.uniforms;return(!L.isShaderMaterial&&!L.isRawShaderMaterial||L.clipping===!0)&&(ot.clippingPlanes=De.uniform),Ei(L,Ye),se.needsLights=Fo(L),se.lightsStateVersion=je,se.needsLights&&(ot.ambientLightColor.value=Q.state.ambient,ot.lightProbe.value=Q.state.probe,ot.directionalLights.value=Q.state.directional,ot.directionalLightShadows.value=Q.state.directionalShadow,ot.spotLights.value=Q.state.spot,ot.spotLightShadows.value=Q.state.spotShadow,ot.rectAreaLights.value=Q.state.rectArea,ot.ltc_1.value=Q.state.rectAreaLTC1,ot.ltc_2.value=Q.state.rectAreaLTC2,ot.pointLights.value=Q.state.point,ot.pointLightShadows.value=Q.state.pointShadow,ot.hemisphereLights.value=Q.state.hemi,ot.directionalShadowMap.value=Q.state.directionalShadowMap,ot.directionalShadowMatrix.value=Q.state.directionalShadowMatrix,ot.spotShadowMap.value=Q.state.spotShadowMap,ot.spotLightMatrix.value=Q.state.spotLightMatrix,ot.spotLightMap.value=Q.state.spotLightMap,ot.pointShadowMap.value=Q.state.pointShadowMap,ot.pointShadowMatrix.value=Q.state.pointShadowMatrix),se.currentProgram=dt,se.uniformsList=null,dt}function Ms(L){if(L.uniformsList===null){const Z=L.currentProgram.getUniforms();L.uniformsList=bl.seqWithValue(Z.seq,L.uniforms)}return L.uniformsList}function Ei(L,Z){const ie=xt.get(L);ie.outputColorSpace=Z.outputColorSpace,ie.batching=Z.batching,ie.batchingColor=Z.batchingColor,ie.instancing=Z.instancing,ie.instancingColor=Z.instancingColor,ie.instancingMorph=Z.instancingMorph,ie.skinning=Z.skinning,ie.morphTargets=Z.morphTargets,ie.morphNormals=Z.morphNormals,ie.morphColors=Z.morphColors,ie.morphTargetsCount=Z.morphTargetsCount,ie.numClippingPlanes=Z.numClippingPlanes,ie.numIntersection=Z.numClipIntersection,ie.vertexAlphas=Z.vertexAlphas,ie.vertexTangents=Z.vertexTangents,ie.toneMapping=Z.toneMapping}function Ra(L,Z,ie,se,Q){Z.isScene!==!0&&(Z=bt),lt.resetTextureUnits();const Pe=Z.fog,je=se.isMeshStandardMaterial?Z.environment:null,Ye=D===null?b.outputColorSpace:D.isXRRenderTarget===!0?D.texture.colorSpace:Es,Qe=(se.isMeshStandardMaterial?W:Ht).get(se.envMap||je),ut=se.vertexColors===!0&&!!ie.attributes.color&&ie.attributes.color.itemSize===4,dt=!!ie.attributes.tangent&&(!!se.normalMap||se.anisotropy>0),ot=!!ie.morphAttributes.position,$t=!!ie.morphAttributes.normal,Xt=!!ie.morphAttributes.color;let Ut=hs;se.toneMapped&&(D===null||D.isXRRenderTarget===!0)&&(Ut=b.toneMapping);const Fn=ie.morphAttributes.position||ie.morphAttributes.normal||ie.morphAttributes.color,Wt=Fn!==void 0?Fn.length:0,st=xt.get(se),_n=g.state.lights;if(xe===!0&&(Te===!0||L!==N)){const Un=L===N&&se.id===F;De.setState(se,L,Un)}let Tt=!1;se.version===st.__version?(st.needsLights&&st.lightsStateVersion!==_n.state.version||st.outputColorSpace!==Ye||Q.isBatchedMesh&&st.batching===!1||!Q.isBatchedMesh&&st.batching===!0||Q.isBatchedMesh&&st.batchingColor===!0&&Q.colorTexture===null||Q.isBatchedMesh&&st.batchingColor===!1&&Q.colorTexture!==null||Q.isInstancedMesh&&st.instancing===!1||!Q.isInstancedMesh&&st.instancing===!0||Q.isSkinnedMesh&&st.skinning===!1||!Q.isSkinnedMesh&&st.skinning===!0||Q.isInstancedMesh&&st.instancingColor===!0&&Q.instanceColor===null||Q.isInstancedMesh&&st.instancingColor===!1&&Q.instanceColor!==null||Q.isInstancedMesh&&st.instancingMorph===!0&&Q.morphTexture===null||Q.isInstancedMesh&&st.instancingMorph===!1&&Q.morphTexture!==null||st.envMap!==Qe||se.fog===!0&&st.fog!==Pe||st.numClippingPlanes!==void 0&&(st.numClippingPlanes!==De.numPlanes||st.numIntersection!==De.numIntersection)||st.vertexAlphas!==ut||st.vertexTangents!==dt||st.morphTargets!==ot||st.morphNormals!==$t||st.morphColors!==Xt||st.toneMapping!==Ut||st.morphTargetsCount!==Wt)&&(Tt=!0):(Tt=!0,st.__version=se.version);let sr=st.currentProgram;Tt===!0&&(sr=Zn(se,Z,Q));let ar=!1,Nr=!1,Ti=!1;const xn=sr.getUniforms(),Mr=st.uniforms;if(rt.useProgram(sr.program)&&(ar=!0,Nr=!0,Ti=!0),se.id!==F&&(F=se.id,Nr=!0),ar||N!==L){xn.setValue(j,"projectionMatrix",L.projectionMatrix),xn.setValue(j,"viewMatrix",L.matrixWorldInverse);const Un=xn.map.cameraPosition;Un!==void 0&&Un.setValue(j,Be.setFromMatrixPosition(L.matrixWorld)),qt.logarithmicDepthBuffer&&xn.setValue(j,"logDepthBufFC",2/(Math.log(L.far+1)/Math.LN2)),(se.isMeshPhongMaterial||se.isMeshToonMaterial||se.isMeshLambertMaterial||se.isMeshBasicMaterial||se.isMeshStandardMaterial||se.isShaderMaterial)&&xn.setValue(j,"isOrthographic",L.isOrthographicCamera===!0),N!==L&&(N=L,Nr=!0,Ti=!0)}if(Q.isSkinnedMesh){xn.setOptional(j,Q,"bindMatrix"),xn.setOptional(j,Q,"bindMatrixInverse");const Un=Q.skeleton;Un&&(Un.boneTexture===null&&Un.computeBoneTexture(),xn.setValue(j,"boneTexture",Un.boneTexture,lt))}Q.isBatchedMesh&&(xn.setOptional(j,Q,"batchingTexture"),xn.setValue(j,"batchingTexture",Q._matricesTexture,lt),xn.setOptional(j,Q,"batchingColorTexture"),Q._colorsTexture!==null&&xn.setValue(j,"batchingColorTexture",Q._colorsTexture,lt));const Ir=ie.morphAttributes;if((Ir.position!==void 0||Ir.normal!==void 0||Ir.color!==void 0)&&et.update(Q,ie,sr),(Nr||st.receiveShadow!==Q.receiveShadow)&&(st.receiveShadow=Q.receiveShadow,xn.setValue(j,"receiveShadow",Q.receiveShadow)),se.isMeshGouraudMaterial&&se.envMap!==null&&(Mr.envMap.value=Qe,Mr.flipEnvMap.value=Qe.isCubeTexture&&Qe.isRenderTargetTexture===!1?-1:1),se.isMeshStandardMaterial&&se.envMap===null&&Z.environment!==null&&(Mr.envMapIntensity.value=Z.environmentIntensity),Nr&&(xn.setValue(j,"toneMappingExposure",b.toneMappingExposure),st.needsLights&&ui(Mr,Ti),Pe&&se.fog===!0&&Se.refreshFogUniforms(Mr,Pe),Se.refreshMaterialUniforms(Mr,se,de,he,g.state.transmissionRenderTarget[L.id]),bl.upload(j,Ms(st),Mr,lt)),se.isShaderMaterial&&se.uniformsNeedUpdate===!0&&(bl.upload(j,Ms(st),Mr,lt),se.uniformsNeedUpdate=!1),se.isSpriteMaterial&&xn.setValue(j,"center",Q.center),xn.setValue(j,"modelViewMatrix",Q.modelViewMatrix),xn.setValue(j,"normalMatrix",Q.normalMatrix),xn.setValue(j,"modelMatrix",Q.matrixWorld),se.isShaderMaterial||se.isRawShaderMaterial){const Un=se.uniformsGroups;for(let Ki=0,Uo=Un.length;Ki<Uo;Ki++){const Na=Un[Ki];at.update(Na,sr),at.bind(Na,sr)}}return sr}function ui(L,Z){L.ambientLightColor.needsUpdate=Z,L.lightProbe.needsUpdate=Z,L.directionalLights.needsUpdate=Z,L.directionalLightShadows.needsUpdate=Z,L.pointLights.needsUpdate=Z,L.pointLightShadows.needsUpdate=Z,L.spotLights.needsUpdate=Z,L.spotLightShadows.needsUpdate=Z,L.rectAreaLights.needsUpdate=Z,L.hemisphereLights.needsUpdate=Z}function Fo(L){return L.isMeshLambertMaterial||L.isMeshToonMaterial||L.isMeshPhongMaterial||L.isMeshStandardMaterial||L.isShadowMaterial||L.isShaderMaterial&&L.lights===!0}this.getActiveCubeFace=function(){return I},this.getActiveMipmapLevel=function(){return M},this.getRenderTarget=function(){return D},this.setRenderTargetTextures=function(L,Z,ie){xt.get(L.texture).__webglTexture=Z,xt.get(L.depthTexture).__webglTexture=ie;const se=xt.get(L);se.__hasExternalTextures=!0,se.__autoAllocateDepthBuffer=ie===void 0,se.__autoAllocateDepthBuffer||Et.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),se.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(L,Z){const ie=xt.get(L);ie.__webglFramebuffer=Z,ie.__useDefaultFramebuffer=Z===void 0},this.setRenderTarget=function(L,Z=0,ie=0){D=L,I=Z,M=ie;let se=!0,Q=null,Pe=!1,je=!1;if(L){const Qe=xt.get(L);Qe.__useDefaultFramebuffer!==void 0?(rt.bindFramebuffer(j.FRAMEBUFFER,null),se=!1):Qe.__webglFramebuffer===void 0?lt.setupRenderTarget(L):Qe.__hasExternalTextures&&lt.rebindTextures(L,xt.get(L.texture).__webglTexture,xt.get(L.depthTexture).__webglTexture);const ut=L.texture;(ut.isData3DTexture||ut.isDataArrayTexture||ut.isCompressedArrayTexture)&&(je=!0);const dt=xt.get(L).__webglFramebuffer;L.isWebGLCubeRenderTarget?(Array.isArray(dt[Z])?Q=dt[Z][ie]:Q=dt[Z],Pe=!0):L.samples>0&&lt.useMultisampledRTT(L)===!1?Q=xt.get(L).__webglMultisampledFramebuffer:Array.isArray(dt)?Q=dt[ie]:Q=dt,A.copy(L.viewport),B.copy(L.scissor),J=L.scissorTest}else A.copy(He).multiplyScalar(de).floor(),B.copy(ze).multiplyScalar(de).floor(),J=_t;if(rt.bindFramebuffer(j.FRAMEBUFFER,Q)&&se&&rt.drawBuffers(L,Q),rt.viewport(A),rt.scissor(B),rt.setScissorTest(J),Pe){const Qe=xt.get(L.texture);j.framebufferTexture2D(j.FRAMEBUFFER,j.COLOR_ATTACHMENT0,j.TEXTURE_CUBE_MAP_POSITIVE_X+Z,Qe.__webglTexture,ie)}else if(je){const Qe=xt.get(L.texture),ut=Z||0;j.framebufferTextureLayer(j.FRAMEBUFFER,j.COLOR_ATTACHMENT0,Qe.__webglTexture,ie||0,ut)}F=-1},this.readRenderTargetPixels=function(L,Z,ie,se,Q,Pe,je){if(!(L&&L.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Ye=xt.get(L).__webglFramebuffer;if(L.isWebGLCubeRenderTarget&&je!==void 0&&(Ye=Ye[je]),Ye){rt.bindFramebuffer(j.FRAMEBUFFER,Ye);try{const Qe=L.texture,ut=Qe.format,dt=Qe.type;if(!qt.textureFormatReadable(ut)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!qt.textureTypeReadable(dt)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}Z>=0&&Z<=L.width-se&&ie>=0&&ie<=L.height-Q&&j.readPixels(Z,ie,se,Q,Me.convert(ut),Me.convert(dt),Pe)}finally{const Qe=D!==null?xt.get(D).__webglFramebuffer:null;rt.bindFramebuffer(j.FRAMEBUFFER,Qe)}}},this.readRenderTargetPixelsAsync=async function(L,Z,ie,se,Q,Pe,je){if(!(L&&L.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Ye=xt.get(L).__webglFramebuffer;if(L.isWebGLCubeRenderTarget&&je!==void 0&&(Ye=Ye[je]),Ye){rt.bindFramebuffer(j.FRAMEBUFFER,Ye);try{const Qe=L.texture,ut=Qe.format,dt=Qe.type;if(!qt.textureFormatReadable(ut))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!qt.textureTypeReadable(dt))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");if(Z>=0&&Z<=L.width-se&&ie>=0&&ie<=L.height-Q){const ot=j.createBuffer();j.bindBuffer(j.PIXEL_PACK_BUFFER,ot),j.bufferData(j.PIXEL_PACK_BUFFER,Pe.byteLength,j.STREAM_READ),j.readPixels(Z,ie,se,Q,Me.convert(ut),Me.convert(dt),0),j.flush();const $t=j.fenceSync(j.SYNC_GPU_COMMANDS_COMPLETE,0);await V_(j,$t,4);try{j.bindBuffer(j.PIXEL_PACK_BUFFER,ot),j.getBufferSubData(j.PIXEL_PACK_BUFFER,0,Pe)}finally{j.deleteBuffer(ot),j.deleteSync($t)}return Pe}}finally{const Qe=D!==null?xt.get(D).__webglFramebuffer:null;rt.bindFramebuffer(j.FRAMEBUFFER,Qe)}}},this.copyFramebufferToTexture=function(L,Z=null,ie=0){L.isTexture!==!0&&(console.warn("WebGLRenderer: copyFramebufferToTexture function signature has changed."),Z=arguments[0]||null,L=arguments[1]);const se=Math.pow(2,-ie),Q=Math.floor(L.image.width*se),Pe=Math.floor(L.image.height*se),je=Z!==null?Z.x:0,Ye=Z!==null?Z.y:0;lt.setTexture2D(L,0),j.copyTexSubImage2D(j.TEXTURE_2D,ie,0,0,je,Ye,Q,Pe),rt.unbindTexture()},this.copyTextureToTexture=function(L,Z,ie=null,se=null,Q=0){L.isTexture!==!0&&(console.warn("WebGLRenderer: copyTextureToTexture function signature has changed."),se=arguments[0]||null,L=arguments[1],Z=arguments[2],Q=arguments[3]||0,ie=null);let Pe,je,Ye,Qe,ut,dt;ie!==null?(Pe=ie.max.x-ie.min.x,je=ie.max.y-ie.min.y,Ye=ie.min.x,Qe=ie.min.y):(Pe=L.image.width,je=L.image.height,Ye=0,Qe=0),se!==null?(ut=se.x,dt=se.y):(ut=0,dt=0);const ot=Me.convert(Z.format),$t=Me.convert(Z.type);lt.setTexture2D(Z,0),j.pixelStorei(j.UNPACK_FLIP_Y_WEBGL,Z.flipY),j.pixelStorei(j.UNPACK_PREMULTIPLY_ALPHA_WEBGL,Z.premultiplyAlpha),j.pixelStorei(j.UNPACK_ALIGNMENT,Z.unpackAlignment);const Xt=j.getParameter(j.UNPACK_ROW_LENGTH),Ut=j.getParameter(j.UNPACK_IMAGE_HEIGHT),Fn=j.getParameter(j.UNPACK_SKIP_PIXELS),Wt=j.getParameter(j.UNPACK_SKIP_ROWS),st=j.getParameter(j.UNPACK_SKIP_IMAGES),_n=L.isCompressedTexture?L.mipmaps[Q]:L.image;j.pixelStorei(j.UNPACK_ROW_LENGTH,_n.width),j.pixelStorei(j.UNPACK_IMAGE_HEIGHT,_n.height),j.pixelStorei(j.UNPACK_SKIP_PIXELS,Ye),j.pixelStorei(j.UNPACK_SKIP_ROWS,Qe),L.isDataTexture?j.texSubImage2D(j.TEXTURE_2D,Q,ut,dt,Pe,je,ot,$t,_n.data):L.isCompressedTexture?j.compressedTexSubImage2D(j.TEXTURE_2D,Q,ut,dt,_n.width,_n.height,ot,_n.data):j.texSubImage2D(j.TEXTURE_2D,Q,ut,dt,ot,$t,_n),j.pixelStorei(j.UNPACK_ROW_LENGTH,Xt),j.pixelStorei(j.UNPACK_IMAGE_HEIGHT,Ut),j.pixelStorei(j.UNPACK_SKIP_PIXELS,Fn),j.pixelStorei(j.UNPACK_SKIP_ROWS,Wt),j.pixelStorei(j.UNPACK_SKIP_IMAGES,st),Q===0&&Z.generateMipmaps&&j.generateMipmap(j.TEXTURE_2D),rt.unbindTexture()},this.copyTextureToTexture3D=function(L,Z,ie=null,se=null,Q=0){L.isTexture!==!0&&(console.warn("WebGLRenderer: copyTextureToTexture3D function signature has changed."),ie=arguments[0]||null,se=arguments[1]||null,L=arguments[2],Z=arguments[3],Q=arguments[4]||0);let Pe,je,Ye,Qe,ut,dt,ot,$t,Xt;const Ut=L.isCompressedTexture?L.mipmaps[Q]:L.image;ie!==null?(Pe=ie.max.x-ie.min.x,je=ie.max.y-ie.min.y,Ye=ie.max.z-ie.min.z,Qe=ie.min.x,ut=ie.min.y,dt=ie.min.z):(Pe=Ut.width,je=Ut.height,Ye=Ut.depth,Qe=0,ut=0,dt=0),se!==null?(ot=se.x,$t=se.y,Xt=se.z):(ot=0,$t=0,Xt=0);const Fn=Me.convert(Z.format),Wt=Me.convert(Z.type);let st;if(Z.isData3DTexture)lt.setTexture3D(Z,0),st=j.TEXTURE_3D;else if(Z.isDataArrayTexture||Z.isCompressedArrayTexture)lt.setTexture2DArray(Z,0),st=j.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}j.pixelStorei(j.UNPACK_FLIP_Y_WEBGL,Z.flipY),j.pixelStorei(j.UNPACK_PREMULTIPLY_ALPHA_WEBGL,Z.premultiplyAlpha),j.pixelStorei(j.UNPACK_ALIGNMENT,Z.unpackAlignment);const _n=j.getParameter(j.UNPACK_ROW_LENGTH),Tt=j.getParameter(j.UNPACK_IMAGE_HEIGHT),sr=j.getParameter(j.UNPACK_SKIP_PIXELS),ar=j.getParameter(j.UNPACK_SKIP_ROWS),Nr=j.getParameter(j.UNPACK_SKIP_IMAGES);j.pixelStorei(j.UNPACK_ROW_LENGTH,Ut.width),j.pixelStorei(j.UNPACK_IMAGE_HEIGHT,Ut.height),j.pixelStorei(j.UNPACK_SKIP_PIXELS,Qe),j.pixelStorei(j.UNPACK_SKIP_ROWS,ut),j.pixelStorei(j.UNPACK_SKIP_IMAGES,dt),L.isDataTexture||L.isData3DTexture?j.texSubImage3D(st,Q,ot,$t,Xt,Pe,je,Ye,Fn,Wt,Ut.data):Z.isCompressedArrayTexture?j.compressedTexSubImage3D(st,Q,ot,$t,Xt,Pe,je,Ye,Fn,Ut.data):j.texSubImage3D(st,Q,ot,$t,Xt,Pe,je,Ye,Fn,Wt,Ut),j.pixelStorei(j.UNPACK_ROW_LENGTH,_n),j.pixelStorei(j.UNPACK_IMAGE_HEIGHT,Tt),j.pixelStorei(j.UNPACK_SKIP_PIXELS,sr),j.pixelStorei(j.UNPACK_SKIP_ROWS,ar),j.pixelStorei(j.UNPACK_SKIP_IMAGES,Nr),Q===0&&Z.generateMipmaps&&j.generateMipmap(st),rt.unbindTexture()},this.initRenderTarget=function(L){xt.get(L).__webglFramebuffer===void 0&&lt.setupRenderTarget(L)},this.initTexture=function(L){L.isCubeTexture?lt.setTextureCube(L,0):L.isData3DTexture?lt.setTexture3D(L,0):L.isDataArrayTexture||L.isCompressedArrayTexture?lt.setTexture2DArray(L,0):lt.setTexture2D(L,0),rt.unbindTexture()},this.resetState=function(){I=0,M=0,D=null,rt.reset(),tt.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return $i}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=e===Pd?"display-p3":"srgb",t.unpackColorSpace=Yt.workingColorSpace===au?"display-p3":"srgb"}}class ZE extends wr{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Fi,this.environmentIntensity=1,this.environmentRotation=new Fi,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}const tm={enabled:!1,files:{},add:function(n,e){this.enabled!==!1&&(this.files[n]=e)},get:function(n){if(this.enabled!==!1)return this.files[n]},remove:function(n){delete this.files[n]},clear:function(){this.files={}}};class JE{constructor(e,t,r){const i=this;let s=!1,a=0,o=0,c;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=r,this.itemStart=function(u){o++,s===!1&&i.onStart!==void 0&&i.onStart(u,a,o),s=!0},this.itemEnd=function(u){a++,i.onProgress!==void 0&&i.onProgress(u,a,o),a===o&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(u){i.onError!==void 0&&i.onError(u)},this.resolveURL=function(u){return c?c(u):u},this.setURLModifier=function(u){return c=u,this},this.addHandler=function(u,h){return l.push(u,h),this},this.removeHandler=function(u){const h=l.indexOf(u);return h!==-1&&l.splice(h,2),this},this.getHandler=function(u){for(let h=0,d=l.length;h<d;h+=2){const f=l[h],p=l[h+1];if(f.global&&(f.lastIndex=0),f.test(u))return p}return null}}}const QE=new JE;class kd{constructor(e){this.manager=e!==void 0?e:QE,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const r=this;return new Promise(function(i,s){r.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}kd.DEFAULT_MATERIAL_NAME="__DEFAULT";class eT extends kd{constructor(e){super(e)}load(e,t,r,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,a=tm.get(e);if(a!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(a),s.manager.itemEnd(e)},0),a;const o=uc("img");function c(){u(),tm.add(e,this),t&&t(this),s.manager.itemEnd(e)}function l(h){u(),i&&i(h),s.manager.itemError(e),s.manager.itemEnd(e)}function u(){o.removeEventListener("load",c,!1),o.removeEventListener("error",l,!1)}return o.addEventListener("load",c,!1),o.addEventListener("error",l,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),s.manager.itemStart(e),o.src=e,o}}class tT extends kd{constructor(e){super(e)}load(e,t,r,i){const s=new tr,a=new eT(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(o){s.image=o,s.needsUpdate=!0,t!==void 0&&t(s)},r,i),s}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Dd}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Dd);var vi=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function nT(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}function rT(n){if(n.__esModule)return n;var e=n.default;if(typeof e=="function"){var t=function r(){return this instanceof r?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(n).forEach(function(r){var i=Object.getOwnPropertyDescriptor(n,r);Object.defineProperty(t,r,i.get?i:{enumerable:!0,get:function(){return n[r]}})}),t}var iT={};(function(){var n;function e(v){var E=0;return function(){return E<v.length?{done:!1,value:v[E++]}:{done:!0}}}var t=typeof Object.defineProperties=="function"?Object.defineProperty:function(v,E,C){return v==Array.prototype||v==Object.prototype||(v[E]=C.value),v};function r(v){v=[typeof globalThis=="object"&&globalThis,v,typeof window=="object"&&window,typeof self=="object"&&self,typeof vi=="object"&&vi];for(var E=0;E<v.length;++E){var C=v[E];if(C&&C.Math==Math)return C}throw Error("Cannot find global object")}var i=r(this);function s(v,E){if(E)e:{var C=i;v=v.split(".");for(var z=0;z<v.length-1;z++){var ee=v[z];if(!(ee in C))break e;C=C[ee]}v=v[v.length-1],z=C[v],E=E(z),E!=z&&E!=null&&t(C,v,{configurable:!0,writable:!0,value:E})}}s("Symbol",function(v){function E(pe){if(this instanceof E)throw new TypeError("Symbol is not a constructor");return new C(z+(pe||"")+"_"+ee++,pe)}function C(pe,ne){this.g=pe,t(this,"description",{configurable:!0,writable:!0,value:ne})}if(v)return v;C.prototype.toString=function(){return this.g};var z="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",ee=0;return E}),s("Symbol.iterator",function(v){if(v)return v;v=Symbol("Symbol.iterator");for(var E="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),C=0;C<E.length;C++){var z=i[E[C]];typeof z=="function"&&typeof z.prototype[v]!="function"&&t(z.prototype,v,{configurable:!0,writable:!0,value:function(){return a(e(this))}})}return v});function a(v){return v={next:v},v[Symbol.iterator]=function(){return this},v}function o(v){var E=typeof Symbol<"u"&&Symbol.iterator&&v[Symbol.iterator];return E?E.call(v):{next:e(v)}}function c(v){if(!(v instanceof Array)){v=o(v);for(var E,C=[];!(E=v.next()).done;)C.push(E.value);v=C}return v}var l=typeof Object.create=="function"?Object.create:function(v){function E(){}return E.prototype=v,new E},u;if(typeof Object.setPrototypeOf=="function")u=Object.setPrototypeOf;else{var h;e:{var d={a:!0},f={};try{f.__proto__=d,h=f.a;break e}catch{}h=!1}u=h?function(v,E){if(v.__proto__=E,v.__proto__!==E)throw new TypeError(v+" is not extensible");return v}:null}var p=u;function x(v,E){if(v.prototype=l(E.prototype),v.prototype.constructor=v,p)p(v,E);else for(var C in E)if(C!="prototype")if(Object.defineProperties){var z=Object.getOwnPropertyDescriptor(E,C);z&&Object.defineProperty(v,C,z)}else v[C]=E[C];v.ea=E.prototype}function g(){this.l=!1,this.i=null,this.h=void 0,this.g=1,this.s=this.m=0,this.j=null}function m(v){if(v.l)throw new TypeError("Generator is already running");v.l=!0}g.prototype.o=function(v){this.h=v};function _(v,E){v.j={U:E,V:!0},v.g=v.m||v.s}g.prototype.return=function(v){this.j={return:v},this.g=this.s};function b(v,E,C){return v.g=C,{value:E}}function w(v){this.g=new g,this.h=v}function I(v,E){m(v.g);var C=v.g.i;return C?M(v,"return"in C?C.return:function(z){return{value:z,done:!0}},E,v.g.return):(v.g.return(E),D(v))}function M(v,E,C,z){try{var ee=E.call(v.g.i,C);if(!(ee instanceof Object))throw new TypeError("Iterator result "+ee+" is not an object");if(!ee.done)return v.g.l=!1,ee;var pe=ee.value}catch(ne){return v.g.i=null,_(v.g,ne),D(v)}return v.g.i=null,z.call(v.g,pe),D(v)}function D(v){for(;v.g.g;)try{var E=v.h(v.g);if(E)return v.g.l=!1,{value:E.value,done:!1}}catch(C){v.g.h=void 0,_(v.g,C)}if(v.g.l=!1,v.g.j){if(E=v.g.j,v.g.j=null,E.V)throw E.U;return{value:E.return,done:!0}}return{value:void 0,done:!0}}function F(v){this.next=function(E){return m(v.g),v.g.i?E=M(v,v.g.i.next,E,v.g.o):(v.g.o(E),E=D(v)),E},this.throw=function(E){return m(v.g),v.g.i?E=M(v,v.g.i.throw,E,v.g.o):(_(v.g,E),E=D(v)),E},this.return=function(E){return I(v,E)},this[Symbol.iterator]=function(){return this}}function N(v,E){return E=new F(new w(E)),p&&v.prototype&&p(E,v.prototype),E}function A(v,E){v instanceof String&&(v+="");var C=0,z=!1,ee={next:function(){if(!z&&C<v.length){var pe=C++;return{value:E(pe,v[pe]),done:!1}}return z=!0,{done:!0,value:void 0}}};return ee[Symbol.iterator]=function(){return ee},ee}var B=typeof Object.assign=="function"?Object.assign:function(v,E){for(var C=1;C<arguments.length;C++){var z=arguments[C];if(z)for(var ee in z)Object.prototype.hasOwnProperty.call(z,ee)&&(v[ee]=z[ee])}return v};s("Object.assign",function(v){return v||B}),s("Promise",function(v){function E(ne){this.h=0,this.i=void 0,this.g=[],this.o=!1;var ye=this.j();try{ne(ye.resolve,ye.reject)}catch(Re){ye.reject(Re)}}function C(){this.g=null}function z(ne){return ne instanceof E?ne:new E(function(ye){ye(ne)})}if(v)return v;C.prototype.h=function(ne){if(this.g==null){this.g=[];var ye=this;this.i(function(){ye.l()})}this.g.push(ne)};var ee=i.setTimeout;C.prototype.i=function(ne){ee(ne,0)},C.prototype.l=function(){for(;this.g&&this.g.length;){var ne=this.g;this.g=[];for(var ye=0;ye<ne.length;++ye){var Re=ne[ye];ne[ye]=null;try{Re()}catch(Ke){this.j(Ke)}}}this.g=null},C.prototype.j=function(ne){this.i(function(){throw ne})},E.prototype.j=function(){function ne(Ke){return function(mt){Re||(Re=!0,Ke.call(ye,mt))}}var ye=this,Re=!1;return{resolve:ne(this.C),reject:ne(this.l)}},E.prototype.C=function(ne){if(ne===this)this.l(new TypeError("A Promise cannot resolve to itself"));else if(ne instanceof E)this.F(ne);else{e:switch(typeof ne){case"object":var ye=ne!=null;break e;case"function":ye=!0;break e;default:ye=!1}ye?this.u(ne):this.m(ne)}},E.prototype.u=function(ne){var ye=void 0;try{ye=ne.then}catch(Re){this.l(Re);return}typeof ye=="function"?this.G(ye,ne):this.m(ne)},E.prototype.l=function(ne){this.s(2,ne)},E.prototype.m=function(ne){this.s(1,ne)},E.prototype.s=function(ne,ye){if(this.h!=0)throw Error("Cannot settle("+ne+", "+ye+"): Promise already settled in state"+this.h);this.h=ne,this.i=ye,this.h===2&&this.D(),this.A()},E.prototype.D=function(){var ne=this;ee(function(){if(ne.B()){var ye=i.console;typeof ye<"u"&&ye.error(ne.i)}},1)},E.prototype.B=function(){if(this.o)return!1;var ne=i.CustomEvent,ye=i.Event,Re=i.dispatchEvent;return typeof Re>"u"?!0:(typeof ne=="function"?ne=new ne("unhandledrejection",{cancelable:!0}):typeof ye=="function"?ne=new ye("unhandledrejection",{cancelable:!0}):(ne=i.document.createEvent("CustomEvent"),ne.initCustomEvent("unhandledrejection",!1,!0,ne)),ne.promise=this,ne.reason=this.i,Re(ne))},E.prototype.A=function(){if(this.g!=null){for(var ne=0;ne<this.g.length;++ne)pe.h(this.g[ne]);this.g=null}};var pe=new C;return E.prototype.F=function(ne){var ye=this.j();ne.J(ye.resolve,ye.reject)},E.prototype.G=function(ne,ye){var Re=this.j();try{ne.call(ye,Re.resolve,Re.reject)}catch(Ke){Re.reject(Ke)}},E.prototype.then=function(ne,ye){function Re(It,vt){return typeof It=="function"?function(nt){try{Ke(It(nt))}catch(y){mt(y)}}:vt}var Ke,mt,Vt=new E(function(It,vt){Ke=It,mt=vt});return this.J(Re(ne,Ke),Re(ye,mt)),Vt},E.prototype.catch=function(ne){return this.then(void 0,ne)},E.prototype.J=function(ne,ye){function Re(){switch(Ke.h){case 1:ne(Ke.i);break;case 2:ye(Ke.i);break;default:throw Error("Unexpected state: "+Ke.h)}}var Ke=this;this.g==null?pe.h(Re):this.g.push(Re),this.o=!0},E.resolve=z,E.reject=function(ne){return new E(function(ye,Re){Re(ne)})},E.race=function(ne){return new E(function(ye,Re){for(var Ke=o(ne),mt=Ke.next();!mt.done;mt=Ke.next())z(mt.value).J(ye,Re)})},E.all=function(ne){var ye=o(ne),Re=ye.next();return Re.done?z([]):new E(function(Ke,mt){function Vt(nt){return function(y){It[nt]=y,vt--,vt==0&&Ke(It)}}var It=[],vt=0;do It.push(void 0),vt++,z(Re.value).J(Vt(It.length-1),mt),Re=ye.next();while(!Re.done)})},E}),s("Object.is",function(v){return v||function(E,C){return E===C?E!==0||1/E===1/C:E!==E&&C!==C}}),s("Array.prototype.includes",function(v){return v||function(E,C){var z=this;z instanceof String&&(z=String(z));var ee=z.length;for(C=C||0,0>C&&(C=Math.max(C+ee,0));C<ee;C++){var pe=z[C];if(pe===E||Object.is(pe,E))return!0}return!1}}),s("String.prototype.includes",function(v){return v||function(E,C){if(this==null)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(E instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return this.indexOf(E,C||0)!==-1}}),s("Array.prototype.keys",function(v){return v||function(){return A(this,function(E){return E})}});var J=this||self;function Y(v,E){v=v.split(".");var C=J;v[0]in C||typeof C.execScript>"u"||C.execScript("var "+v[0]);for(var z;v.length&&(z=v.shift());)v.length||E===void 0?C[z]&&C[z]!==Object.prototype[z]?C=C[z]:C=C[z]={}:C[z]=E}function ae(v,E){return E=String.fromCharCode.apply(null,E),v==null?E:v+E}var le,he=typeof TextDecoder<"u",de,oe=typeof TextEncoder<"u";function $e(v){if(oe)v=(de||(de=new TextEncoder)).encode(v);else{var E=void 0;E=E===void 0?!1:E;for(var C=0,z=new Uint8Array(3*v.length),ee=0;ee<v.length;ee++){var pe=v.charCodeAt(ee);if(128>pe)z[C++]=pe;else{if(2048>pe)z[C++]=pe>>6|192;else{if(55296<=pe&&57343>=pe){if(56319>=pe&&ee<v.length){var ne=v.charCodeAt(++ee);if(56320<=ne&&57343>=ne){pe=1024*(pe-55296)+ne-56320+65536,z[C++]=pe>>18|240,z[C++]=pe>>12&63|128,z[C++]=pe>>6&63|128,z[C++]=pe&63|128;continue}else ee--}if(E)throw Error("Found an unpaired surrogate");pe=65533}z[C++]=pe>>12|224,z[C++]=pe>>6&63|128}z[C++]=pe&63|128}}v=z.subarray(0,C)}return v}var He={},ze=null;function _t(v,E){E===void 0&&(E=0),Te(),E=He[E];for(var C=Array(Math.floor(v.length/3)),z=E[64]||"",ee=0,pe=0;ee<v.length-2;ee+=3){var ne=v[ee],ye=v[ee+1],Re=v[ee+2],Ke=E[ne>>2];ne=E[(ne&3)<<4|ye>>4],ye=E[(ye&15)<<2|Re>>6],Re=E[Re&63],C[pe++]=Ke+ne+ye+Re}switch(Ke=0,Re=z,v.length-ee){case 2:Ke=v[ee+1],Re=E[(Ke&15)<<2]||z;case 1:v=v[ee],C[pe]=E[v>>2]+E[(v&3)<<4|Ke>>4]+Re+z}return C.join("")}function Ot(v){var E=v.length,C=3*E/4;C%3?C=Math.floor(C):"=.".indexOf(v[E-1])!=-1&&(C="=.".indexOf(v[E-2])!=-1?C-2:C-1);var z=new Uint8Array(C),ee=0;return xe(v,function(pe){z[ee++]=pe}),z.subarray(0,ee)}function xe(v,E){function C(Re){for(;z<v.length;){var Ke=v.charAt(z++),mt=ze[Ke];if(mt!=null)return mt;if(!/^[\s\xa0]*$/.test(Ke))throw Error("Unknown base64 encoding at char: "+Ke)}return Re}Te();for(var z=0;;){var ee=C(-1),pe=C(0),ne=C(64),ye=C(64);if(ye===64&&ee===-1)break;E(ee<<2|pe>>4),ne!=64&&(E(pe<<4&240|ne>>2),ye!=64&&E(ne<<6&192|ye))}}function Te(){if(!ze){ze={};for(var v="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),E=["+/=","+/","-_=","-_.","-_"],C=0;5>C;C++){var z=v.concat(E[C].split(""));He[C]=z;for(var ee=0;ee<z.length;ee++){var pe=z[ee];ze[pe]===void 0&&(ze[pe]=ee)}}}}var Ge=typeof Uint8Array.prototype.slice=="function",Be;function bt(v,E,C){return E===C?Be||(Be=new Uint8Array(0)):Ge?v.slice(E,C):new Uint8Array(v.subarray(E,C))}var ht=0,gt=0;function j(v,E){E=E===void 0?{}:E,E=E.v===void 0?!1:E.v,this.h=null,this.g=this.j=this.l=0,this.m=!1,this.v=E,v&&wt(this,v)}function wt(v,E){E=E.constructor===Uint8Array?E:E.constructor===ArrayBuffer?new Uint8Array(E):E.constructor===Array?new Uint8Array(E):E.constructor===String?Ot(E):E instanceof Uint8Array?new Uint8Array(E.buffer,E.byteOffset,E.byteLength):new Uint8Array(0),v.h=E,v.l=0,v.j=v.h.length,v.g=v.l}j.prototype.reset=function(){this.g=this.l};function Et(v){for(var E=128,C=0,z=0,ee=0;4>ee&&128<=E;ee++)E=v.h[v.g++],C|=(E&127)<<7*ee;if(128<=E&&(E=v.h[v.g++],C|=(E&127)<<28,z|=(E&127)>>4),128<=E)for(ee=0;5>ee&&128<=E;ee++)E=v.h[v.g++],z|=(E&127)<<7*ee+3;if(128>E)return v=C>>>0,E=z>>>0,(z=E&2147483648)&&(v=~v+1>>>0,E=~E>>>0,v==0&&(E=E+1>>>0)),v=4294967296*E+(v>>>0),z?-v:v;v.m=!0}j.prototype.i=function(){var v=this.h,E=v[this.g],C=E&127;return 128>E?(this.g+=1,C):(E=v[this.g+1],C|=(E&127)<<7,128>E?(this.g+=2,C):(E=v[this.g+2],C|=(E&127)<<14,128>E?(this.g+=3,C):(E=v[this.g+3],C|=(E&127)<<21,128>E?(this.g+=4,C):(E=v[this.g+4],C|=(E&15)<<28,128>E?(this.g+=5,C>>>0):(this.g+=5,128<=v[this.g++]&&128<=v[this.g++]&&128<=v[this.g++]&&128<=v[this.g++]&&this.g++,C)))))},j.prototype.o=function(){var v=this.h[this.g],E=this.h[this.g+1],C=this.h[this.g+2],z=this.h[this.g+3];return this.g+=4,C=(v<<0|E<<8|C<<16|z<<24)>>>0,v=2*(C>>31)+1,E=C>>>23&255,C&=8388607,E==255?C?NaN:1/0*v:E==0?v*Math.pow(2,-149)*C:v*Math.pow(2,E-150)*(C+Math.pow(2,23))};var qt=[];function rt(){this.g=new Uint8Array(64),this.h=0}rt.prototype.push=function(v){if(!(this.h+1<this.g.length)){var E=this.g;this.g=new Uint8Array(Math.ceil(1+2*this.g.length)),this.g.set(E)}this.g[this.h++]=v},rt.prototype.length=function(){return this.h},rt.prototype.end=function(){var v=this.g,E=this.h;return this.h=0,bt(v,0,E)};function St(v,E){for(;127<E;)v.push(E&127|128),E>>>=7;v.push(E)}function xt(v){var E={},C=E.N===void 0?!1:E.N;this.o={v:E.v===void 0?!1:E.v},this.N=C,E=this.o,qt.length?(C=qt.pop(),E&&(C.v=E.v),v&&wt(C,v),v=C):v=new j(v,E),this.g=v,this.m=this.g.g,this.h=this.i=this.l=-1,this.j=!1}xt.prototype.reset=function(){this.g.reset(),this.h=this.l=-1};function lt(v){var E=v.g;if((E=E.g==E.j)||(E=v.j)||(E=v.g,E=E.m||0>E.g||E.g>E.j),E)return!1;v.m=v.g.g,E=v.g.i();var C=E&7;return C!=0&&C!=5&&C!=1&&C!=2&&C!=3&&C!=4?(v.j=!0,!1):(v.i=E,v.l=E>>>3,v.h=C,!0)}function Ht(v){switch(v.h){case 0:if(v.h!=0)Ht(v);else{for(v=v.g;v.h[v.g]&128;)v.g++;v.g++}break;case 1:v.h!=1?Ht(v):(v=v.g,v.g+=8);break;case 2:if(v.h!=2)Ht(v);else{var E=v.g.i();v=v.g,v.g+=E}break;case 5:v.h!=5?Ht(v):(v=v.g,v.g+=4);break;case 3:E=v.l;do{if(!lt(v)){v.j=!0;break}if(v.h==4){v.l!=E&&(v.j=!0);break}Ht(v)}while(!0);break;default:v.j=!0}}function W(v,E,C){var z=v.g.j,ee=v.g.i(),pe=v.g.g+ee;if(v.g.j=pe,C(E,v),C=pe-v.g.g,C!==0)throw Error("Message parsing ended unexpectedly. Expected to read "+ee+" bytes, instead read "+(ee-C)+" bytes, either the data ended unexpectedly or the message misreported its own length");return v.g.g=pe,v.g.j=z,E}function P(v){return v.g.o()}function ce(v){var E=v.g.i();v=v.g;var C=v.g;v.g+=E,v=v.h;var z;if(he)(z=le)||(z=le=new TextDecoder("utf-8",{fatal:!1})),z=z.decode(v.subarray(C,C+E));else{E=C+E;for(var ee=[],pe=null,ne,ye,Re;C<E;)ne=v[C++],128>ne?ee.push(ne):224>ne?C>=E?ee.push(65533):(ye=v[C++],194>ne||(ye&192)!==128?(C--,ee.push(65533)):ee.push((ne&31)<<6|ye&63)):240>ne?C>=E-1?ee.push(65533):(ye=v[C++],(ye&192)!==128||ne===224&&160>ye||ne===237&&160<=ye||((z=v[C++])&192)!==128?(C--,ee.push(65533)):ee.push((ne&15)<<12|(ye&63)<<6|z&63)):244>=ne?C>=E-2?ee.push(65533):(ye=v[C++],(ye&192)!==128||(ne<<28)+(ye-144)>>30||((z=v[C++])&192)!==128||((Re=v[C++])&192)!==128?(C--,ee.push(65533)):(ne=(ne&7)<<18|(ye&63)<<12|(z&63)<<6|Re&63,ne-=65536,ee.push((ne>>10&1023)+55296,(ne&1023)+56320))):ee.push(65533),8192<=ee.length&&(pe=ae(pe,ee),ee.length=0);z=ae(pe,ee)}return z}function be(v,E,C){var z=v.g.i();for(z=v.g.g+z;v.g.g<z;)C.push(E.call(v.g))}function we(v,E){v.h==2?be(v,j.prototype.o,E):E.push(P(v))}function Se(){this.h=[],this.i=0,this.g=new rt}function Ze(v,E){E.length!==0&&(v.h.push(E),v.i+=E.length)}function Fe(v){var E=v.i+v.g.length();if(E===0)return new Uint8Array(0);E=new Uint8Array(E);for(var C=v.h,z=C.length,ee=0,pe=0;pe<z;pe++){var ne=C[pe];ne.length!==0&&(E.set(ne,ee),ee+=ne.length)}return C=v.g,z=C.h,z!==0&&(E.set(C.g.subarray(0,z),ee),C.h=0),v.h=[E],E}function De(v,E,C){if(C!=null){St(v.g,8*E+5),v=v.g;var z=C;z=(C=0>z?1:0)?-z:z,z===0?0<1/z?ht=gt=0:(gt=0,ht=2147483648):isNaN(z)?(gt=0,ht=2147483647):34028234663852886e22<z?(gt=0,ht=(C<<31|2139095040)>>>0):11754943508222875e-54>z?(z=Math.round(z/Math.pow(2,-149)),gt=0,ht=(C<<31|z)>>>0):(E=Math.floor(Math.log(z)/Math.LN2),z*=Math.pow(2,-E),z=Math.round(8388608*z),16777216<=z&&++E,gt=0,ht=(C<<31|E+127<<23|z&8388607)>>>0),C=ht,v.push(C>>>0&255),v.push(C>>>8&255),v.push(C>>>16&255),v.push(C>>>24&255)}}var pt=typeof Uint8Array=="function";function Ne(v,E,C){if(v!=null)return typeof v=="object"?pt&&v instanceof Uint8Array?C(v):et(v,E,C):E(v)}function et(v,E,C){if(Array.isArray(v)){for(var z=Array(v.length),ee=0;ee<v.length;ee++)z[ee]=Ne(v[ee],E,C);return Array.isArray(v)&&v.W&&Me(z),z}z={};for(ee in v)z[ee]=Ne(v[ee],E,C);return z}function At(v){return typeof v=="number"?isFinite(v)?v:String(v):v}var ft={W:{value:!0,configurable:!0}};function Me(v){return Array.isArray(v)&&!Object.isFrozen(v)&&Object.defineProperties(v,ft),v}var tt;function at(v,E,C){var z=tt;tt=null,v||(v=z),z=this.constructor.ca,v||(v=z?[z]:[]),this.j=z?0:-1,this.m=this.g=null,this.h=v;e:{if(z=this.h.length,v=z-1,z&&(z=this.h[v],!(z===null||typeof z!="object"||Array.isArray(z)||pt&&z instanceof Uint8Array))){this.l=v-this.j,this.i=z;break e}E!==void 0&&-1<E?(this.l=Math.max(E,v+1-this.j),this.i=null):this.l=Number.MAX_VALUE}if(C)for(E=0;E<C.length;E++)v=C[E],v<this.l?(v+=this.j,(z=this.h[v])?Me(z):this.h[v]=kt):(K(this),(z=this.i[v])?Me(z):this.i[v]=kt)}var kt=Object.freeze(Me([]));function K(v){var E=v.l+v.j;v.h[E]||(v.i=v.h[E]={})}function Ee(v,E,C){return E===-1?null:C!==void 0&&C||E>=v.l?v.i?v.i[E]:void 0:v.h[E+v.j]}function fe(v,E){var C=C===void 0?!1:C,z=Ee(v,E,C);return z==null&&(z=kt),z===kt&&(z=Me([]),qe(v,E,z,C)),z}function ve(v){var E=fe(v,3);if(v.m||(v.m={}),!v.m[3]){for(var C=0;C<E.length;C++)E[C]=+E[C];v.m[3]=!0}return E}function Ce(v,E,C){return v=Ee(v,E),v??C}function it(v,E,C){return v=Ee(v,E),v=v==null?v:+v,v??(C===void 0?0:C)}function qe(v,E,C,z){z!==void 0&&z||E>=v.l?(K(v),v.i[E]=C):v.h[E+v.j]=C}function nn(v,E,C){if(C===-1)return null;if(v.g||(v.g={}),!v.g[C]){var z=Ee(v,C,!1);z&&(v.g[C]=new E(z))}return v.g[C]}function ln(v,E){v.g||(v.g={});var C=v.g[1];if(!C){var z=fe(v,1);C=[];for(var ee=0;ee<z.length;ee++)C[ee]=new E(z[ee]);v.g[1]=C}return C}function Ft(v,E,C){var z=z===void 0?!1:z;v.g||(v.g={});var ee=C&&yn(C);v.g[E]=C,qe(v,E,ee,z)}function Nn(v,E,C,z){var ee=ln(v,C);E=E||new C,v=fe(v,1),z!=null?(ee.splice(z,0,E),v.splice(z,0,yn(E))):(ee.push(E),v.push(yn(E)))}at.prototype.toJSON=function(){var v=yn(this);return et(v,At,_t)};function yn(v,E){if(v.g)for(var C in v.g){var z=v.g[C];if(Array.isArray(z))for(var ee=0;ee<z.length;ee++)z[ee]&&yn(z[ee]);else z&&yn(z)}return v.h}at.prototype.toString=function(){return yn(this).toString()};function ir(v,E){if(v=v.o){Ze(E,E.g.end());for(var C=0;C<v.length;C++)Ze(E,v[C])}}function kn(v,E){if(E.h==4)return!1;var C=E.m;return Ht(E),E.N||(E=bt(E.g.h,C,E.g.g),(C=v.o)?C.push(E):v.o=[E]),!0}function yr(v){at.call(this,v,-1,qi)}x(yr,at),yr.prototype.getRows=function(){return Ee(this,1)},yr.prototype.getCols=function(){return Ee(this,2)},yr.prototype.getPackedDataList=function(){return ve(this)},yr.prototype.getLayout=function(){return Ce(this,4,0)};function Ns(v,E){for(;lt(E);)switch(E.i){case 8:var C=E.g.i();qe(v,1,C);break;case 16:C=E.g.i(),qe(v,2,C);break;case 29:case 26:we(E,v.getPackedDataList());break;case 32:C=Et(E.g),qe(v,4,C);break;default:if(!kn(v,E))return v}return v}var qi=[3];function vn(v,E){var C=void 0;return new(C||(C=Promise))(function(z,ee){function pe(Re){try{ye(E.next(Re))}catch(Ke){ee(Ke)}}function ne(Re){try{ye(E.throw(Re))}catch(Ke){ee(Ke)}}function ye(Re){Re.done?z(Re.value):new C(function(Ke){Ke(Re.value)}).then(pe,ne)}ye((E=E.apply(v,void 0)).next())})}function Zn(v){at.call(this,v)}x(Zn,at);function Ms(v,E){for(;lt(E);)switch(E.i){case 8:var C=E.g.i();qe(v,1,C);break;case 21:C=P(E),qe(v,2,C);break;case 26:C=ce(E),qe(v,3,C);break;case 34:C=ce(E),qe(v,4,C);break;default:if(!kn(v,E))return v}return v}function Ei(v){at.call(this,v,-1,Ra)}x(Ei,at),Ei.prototype.addClassification=function(v,E){return Nn(this,v,Zn,E),this};var Ra=[1];function ui(v){at.call(this,v)}x(ui,at);function Fo(v,E){for(;lt(E);)switch(E.i){case 13:var C=P(E);qe(v,1,C);break;case 21:C=P(E),qe(v,2,C);break;case 29:C=P(E),qe(v,3,C);break;case 37:C=P(E),qe(v,4,C);break;case 45:C=P(E),qe(v,5,C);break;default:if(!kn(v,E))return v}return v}function L(v){at.call(this,v,-1,ie)}x(L,at);function Z(v){e:{var E=new L;for(v=new xt(v);lt(v);)switch(v.i){case 10:var C=W(v,new ui,Fo);Nn(E,C,ui,void 0);break;default:if(!kn(E,v))break e}}return E}var ie=[1];function se(v){at.call(this,v)}x(se,at);function Q(v){at.call(this,v,-1,je)}x(Q,at),Q.prototype.getVertexType=function(){return Ce(this,1,0)},Q.prototype.getPrimitiveType=function(){return Ce(this,2,0)},Q.prototype.getVertexBufferList=function(){return ve(this)},Q.prototype.getIndexBufferList=function(){return fe(this,4)};function Pe(v,E){for(;lt(E);)switch(E.i){case 8:var C=Et(E.g);qe(v,1,C);break;case 16:C=Et(E.g),qe(v,2,C);break;case 29:case 26:we(E,v.getVertexBufferList());break;case 32:case 34:C=E;var z=v.getIndexBufferList();C.h==2?be(C,j.prototype.i,z):z.push(C.g.i());break;default:if(!kn(v,E))return v}return v}var je=[3,4];function Ye(v){at.call(this,v)}x(Ye,at),Ye.prototype.getMesh=function(){return nn(this,Q,1)},Ye.prototype.getPoseTransformMatrix=function(){return nn(this,yr,2)};function Qe(v){e:{var E=new Ye;for(v=new xt(v);lt(v);)switch(v.i){case 10:var C=W(v,new Q,Pe);Ft(E,1,C);break;case 18:C=W(v,new yr,Ns),Ft(E,2,C);break;default:if(!kn(E,v))break e}}return E}function ut(v,E,C){if(C=v.createShader(C===0?v.VERTEX_SHADER:v.FRAGMENT_SHADER),v.shaderSource(C,E),v.compileShader(C),!v.getShaderParameter(C,v.COMPILE_STATUS))throw Error(`Could not compile WebGL shader.

`+v.getShaderInfoLog(C));return C}function dt(v){return ln(v,Zn).map(function(E){return{index:Ce(E,1,0),Y:it(E,2),label:Ee(E,3)!=null?Ce(E,3,""):void 0,displayName:Ee(E,4)!=null?Ce(E,4,""):void 0}})}function ot(v){return{x:it(v,1),y:it(v,2),z:it(v,3),visibility:Ee(v,4)!=null?it(v,4):void 0}}function $t(v,E){this.h=v,this.g=E,this.l=0}function Xt(v,E,C){return Ut(v,E),typeof v.g.canvas.transferToImageBitmap=="function"?Promise.resolve(v.g.canvas.transferToImageBitmap()):C?Promise.resolve(v.g.canvas):typeof createImageBitmap=="function"?createImageBitmap(v.g.canvas):(v.i===void 0&&(v.i=document.createElement("canvas")),new Promise(function(z){v.i.height=v.g.canvas.height,v.i.width=v.g.canvas.width,v.i.getContext("2d",{}).drawImage(v.g.canvas,0,0,v.g.canvas.width,v.g.canvas.height),z(v.i)}))}function Ut(v,E){var C=v.g;if(v.m===void 0){var z=ut(C,`
  attribute vec2 aVertex;
  attribute vec2 aTex;
  varying vec2 vTex;
  void main(void) {
    gl_Position = vec4(aVertex, 0.0, 1.0);
    vTex = aTex;
  }`,0),ee=ut(C,`
  precision mediump float;
  varying vec2 vTex;
  uniform sampler2D sampler0;
  void main(){
    gl_FragColor = texture2D(sampler0, vTex);
  }`,1),pe=C.createProgram();if(C.attachShader(pe,z),C.attachShader(pe,ee),C.linkProgram(pe),!C.getProgramParameter(pe,C.LINK_STATUS))throw Error(`Could not compile WebGL program.

`+C.getProgramInfoLog(pe));z=v.m=pe,C.useProgram(z),ee=C.getUniformLocation(z,"sampler0"),v.j={I:C.getAttribLocation(z,"aVertex"),H:C.getAttribLocation(z,"aTex"),da:ee},v.s=C.createBuffer(),C.bindBuffer(C.ARRAY_BUFFER,v.s),C.enableVertexAttribArray(v.j.I),C.vertexAttribPointer(v.j.I,2,C.FLOAT,!1,0,0),C.bufferData(C.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),C.STATIC_DRAW),C.bindBuffer(C.ARRAY_BUFFER,null),v.o=C.createBuffer(),C.bindBuffer(C.ARRAY_BUFFER,v.o),C.enableVertexAttribArray(v.j.H),C.vertexAttribPointer(v.j.H,2,C.FLOAT,!1,0,0),C.bufferData(C.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),C.STATIC_DRAW),C.bindBuffer(C.ARRAY_BUFFER,null),C.uniform1i(ee,0)}z=v.j,C.useProgram(v.m),C.canvas.width=E.width,C.canvas.height=E.height,C.viewport(0,0,E.width,E.height),C.activeTexture(C.TEXTURE0),v.h.bindTexture2d(E.glName),C.enableVertexAttribArray(z.I),C.bindBuffer(C.ARRAY_BUFFER,v.s),C.vertexAttribPointer(z.I,2,C.FLOAT,!1,0,0),C.enableVertexAttribArray(z.H),C.bindBuffer(C.ARRAY_BUFFER,v.o),C.vertexAttribPointer(z.H,2,C.FLOAT,!1,0,0),C.bindFramebuffer(C.DRAW_FRAMEBUFFER?C.DRAW_FRAMEBUFFER:C.FRAMEBUFFER,null),C.clearColor(0,0,0,0),C.clear(C.COLOR_BUFFER_BIT),C.colorMask(!0,!0,!0,!0),C.drawArrays(C.TRIANGLE_FAN,0,4),C.disableVertexAttribArray(z.I),C.disableVertexAttribArray(z.H),C.bindBuffer(C.ARRAY_BUFFER,null),v.h.bindTexture2d(0)}function Fn(v){this.g=v}var Wt=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function st(v,E){return E+v}function _n(v,E){window[v]=E}function Tt(v){var E=document.createElement("script");return E.setAttribute("src",v),E.setAttribute("crossorigin","anonymous"),new Promise(function(C){E.addEventListener("load",function(){C()},!1),E.addEventListener("error",function(){C()},!1),document.body.appendChild(E)})}function sr(){return vn(this,function v(){return N(v,function(E){switch(E.g){case 1:return E.m=2,b(E,WebAssembly.instantiate(Wt),4);case 4:E.g=3,E.m=0;break;case 2:return E.m=0,E.j=null,E.return(!1);case 3:return E.return(!0)}})})}function ar(v){if(this.g=v,this.listeners={},this.j={},this.F={},this.m={},this.s={},this.G=this.o=this.R=!0,this.C=Promise.resolve(),this.P="",this.B={},this.locateFile=v&&v.locateFile||st,typeof window=="object")var E=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else if(typeof location<"u")E=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/";else throw Error("solutions can only be loaded on a web page or in a web worker");if(this.S=E,v.options){E=o(Object.keys(v.options));for(var C=E.next();!C.done;C=E.next()){C=C.value;var z=v.options[C].default;z!==void 0&&(this.j[C]=typeof z=="function"?z():z)}}}n=ar.prototype,n.close=function(){return this.i&&this.i.delete(),Promise.resolve()};function Nr(v,E){return v.g.files===void 0?[]:typeof v.g.files=="function"?v.g.files(E):v.g.files}function Ti(v){return vn(v,function E(){var C=this,z,ee,pe,ne,ye,Re,Ke,mt,Vt,It,vt;return N(E,function(nt){switch(nt.g){case 1:return z=C,C.R?(ee=Nr(C,C.j),b(nt,sr(),2)):nt.return();case 2:if(pe=nt.h,typeof window=="object")return _n("createMediapipeSolutionsWasm",{locateFile:C.locateFile}),_n("createMediapipeSolutionsPackedAssets",{locateFile:C.locateFile}),Re=ee.filter(function(y){return y.data!==void 0}),Ke=ee.filter(function(y){return y.data===void 0}),mt=Promise.all(Re.map(function(y){var T=Ir(z,y.url);if(y.path!==void 0){var R=y.path;T=T.then(function(O){return z.overrideFile(R,O),Promise.resolve(O)})}return T})),Vt=Promise.all(Ke.map(function(y){return y.simd===void 0||y.simd&&pe||!y.simd&&!pe?Tt(z.locateFile(y.url,z.S)):Promise.resolve()})).then(function(){return vn(z,function y(){var T,R,O=this;return N(y,function(V){if(V.g==1)return T=window.createMediapipeSolutionsWasm,R=window.createMediapipeSolutionsPackedAssets,b(V,T(R),2);O.h=V.h,V.g=0})})}),It=function(){return vn(z,function y(){var T=this;return N(y,function(R){return T.g.graph&&T.g.graph.url?R=b(R,Ir(T,T.g.graph.url),0):(R.g=0,R=void 0),R})})}(),b(nt,Promise.all([Vt,mt,It]),7);if(typeof importScripts!="function")throw Error("solutions can only be loaded on a web page or in a web worker");return ne=ee.filter(function(y){return y.simd===void 0||y.simd&&pe||!y.simd&&!pe}).map(function(y){return z.locateFile(y.url,z.S)}),importScripts.apply(null,c(ne)),b(nt,createMediapipeSolutionsWasm(Module),6);case 6:C.h=nt.h,C.l=new OffscreenCanvas(1,1),C.h.canvas=C.l,ye=C.h.GL.createContext(C.l,{antialias:!1,alpha:!1,ba:typeof WebGL2RenderingContext<"u"?2:1}),C.h.GL.makeContextCurrent(ye),nt.g=4;break;case 7:if(C.l=document.createElement("canvas"),vt=C.l.getContext("webgl2",{}),!vt&&(vt=C.l.getContext("webgl",{}),!vt))return alert("Failed to create WebGL canvas context when passing video frame."),nt.return();C.D=vt,C.h.canvas=C.l,C.h.createContext(C.l,!0,!0,{});case 4:C.i=new C.h.SolutionWasm,C.R=!1,nt.g=0}})})}function xn(v){return vn(v,function E(){var C=this,z,ee,pe,ne,ye,Re,Ke,mt;return N(E,function(Vt){if(Vt.g==1){if(C.g.graph&&C.g.graph.url&&C.P===C.g.graph.url)return Vt.return();if(C.o=!0,!C.g.graph||!C.g.graph.url){Vt.g=2;return}return C.P=C.g.graph.url,b(Vt,Ir(C,C.g.graph.url),3)}for(Vt.g!=2&&(z=Vt.h,C.i.loadGraph(z)),ee=o(Object.keys(C.B)),pe=ee.next();!pe.done;pe=ee.next())ne=pe.value,C.i.overrideFile(ne,C.B[ne]);if(C.B={},C.g.listeners)for(ye=o(C.g.listeners),Re=ye.next();!Re.done;Re=ye.next())Ke=Re.value,Uo(C,Ke);mt=C.j,C.j={},C.setOptions(mt),Vt.g=0})})}n.reset=function(){return vn(this,function v(){var E=this;return N(v,function(C){E.i&&(E.i.reset(),E.m={},E.s={}),C.g=0})})},n.setOptions=function(v,E){var C=this;if(E=E||this.g.options){for(var z=[],ee=[],pe={},ne=o(Object.keys(v)),ye=ne.next();!ye.done;pe={K:pe.K,L:pe.L},ye=ne.next()){var Re=ye.value;Re in this.j&&this.j[Re]===v[Re]||(this.j[Re]=v[Re],ye=E[Re],ye!==void 0&&(ye.onChange&&(pe.K=ye.onChange,pe.L=v[Re],z.push(function(Ke){return function(){return vn(C,function mt(){var Vt,It=this;return N(mt,function(vt){if(vt.g==1)return b(vt,Ke.K(Ke.L),2);Vt=vt.h,Vt===!0&&(It.o=!0),vt.g=0})})}}(pe))),ye.graphOptionXref&&(Re={valueNumber:ye.type===1?v[Re]:0,valueBoolean:ye.type===0?v[Re]:!1,valueString:ye.type===2?v[Re]:""},ye=Object.assign(Object.assign(Object.assign({},{calculatorName:"",calculatorIndex:0}),ye.graphOptionXref),Re),ee.push(ye))))}(z.length!==0||ee.length!==0)&&(this.o=!0,this.A=(this.A===void 0?[]:this.A).concat(ee),this.u=(this.u===void 0?[]:this.u).concat(z))}};function Mr(v){return vn(v,function E(){var C=this,z,ee,pe,ne,ye,Re,Ke;return N(E,function(mt){switch(mt.g){case 1:if(!C.o)return mt.return();if(!C.u){mt.g=2;break}z=o(C.u),ee=z.next();case 3:if(ee.done){mt.g=5;break}return pe=ee.value,b(mt,pe(),4);case 4:ee=z.next(),mt.g=3;break;case 5:C.u=void 0;case 2:if(C.A){for(ne=new C.h.GraphOptionChangeRequestList,ye=o(C.A),Re=ye.next();!Re.done;Re=ye.next())Ke=Re.value,ne.push_back(Ke);C.i.changeOptions(ne),ne.delete(),C.A=void 0}C.o=!1,mt.g=0}})})}n.initialize=function(){return vn(this,function v(){var E=this;return N(v,function(C){return C.g==1?b(C,Ti(E),2):C.g!=3?b(C,xn(E),3):b(C,Mr(E),0)})})};function Ir(v,E){return vn(v,function C(){var z=this,ee,pe;return N(C,function(ne){return E in z.F?ne.return(z.F[E]):(ee=z.locateFile(E,""),pe=fetch(ee).then(function(ye){return ye.arrayBuffer()}),z.F[E]=pe,ne.return(pe))})})}n.overrideFile=function(v,E){this.i?this.i.overrideFile(v,E):this.B[v]=E},n.clearOverriddenFiles=function(){this.B={},this.i&&this.i.clearOverriddenFiles()},n.send=function(v,E){return vn(this,function C(){var z=this,ee,pe,ne,ye,Re,Ke,mt,Vt,It;return N(C,function(vt){switch(vt.g){case 1:return z.g.inputs?(ee=1e3*(E??performance.now()),b(vt,z.C,2)):vt.return();case 2:return b(vt,z.initialize(),3);case 3:for(pe=new z.h.PacketDataList,ne=o(Object.keys(v)),ye=ne.next();!ye.done;ye=ne.next())if(Re=ye.value,Ke=z.g.inputs[Re]){e:{var nt=z,y=v[Re];switch(Ke.type){case"video":var T=nt.m[Ke.stream];if(T||(T=new $t(nt.h,nt.D),nt.m[Ke.stream]=T),nt=T,nt.l===0&&(nt.l=nt.h.createTexture()),typeof HTMLVideoElement<"u"&&y instanceof HTMLVideoElement){var R=y.videoWidth;T=y.videoHeight}else typeof HTMLImageElement<"u"&&y instanceof HTMLImageElement?(R=y.naturalWidth,T=y.naturalHeight):(R=y.width,T=y.height);T={glName:nt.l,width:R,height:T},R=nt.g,R.canvas.width=T.width,R.canvas.height=T.height,R.activeTexture(R.TEXTURE0),nt.h.bindTexture2d(nt.l),R.texImage2D(R.TEXTURE_2D,0,R.RGBA,R.RGBA,R.UNSIGNED_BYTE,y),nt.h.bindTexture2d(0),nt=T;break e;case"detections":for(T=nt.m[Ke.stream],T||(T=new Fn(nt.h),nt.m[Ke.stream]=T),nt=T,nt.data||(nt.data=new nt.g.DetectionListData),nt.data.reset(y.length),T=0;T<y.length;++T){R=y[T];var O=nt.data,V=O.setBoundingBox,U=T,G=R.T,X=new se;qe(X,1,G.Z),qe(X,2,G.$),qe(X,3,G.height),qe(X,4,G.width),qe(X,5,G.rotation),qe(X,6,G.X);var re=G=new Se;De(re,1,Ee(X,1)),De(re,2,Ee(X,2)),De(re,3,Ee(X,3)),De(re,4,Ee(X,4)),De(re,5,Ee(X,5));var me=Ee(X,6);if(me!=null&&me!=null){St(re.g,48);var _e=re.g,Ie=me;me=0>Ie,Ie=Math.abs(Ie);var Le=Ie>>>0;for(Ie=Math.floor((Ie-Le)/4294967296),Ie>>>=0,me&&(Ie=~Ie>>>0,Le=(~Le>>>0)+1,4294967295<Le&&(Le=0,Ie++,4294967295<Ie&&(Ie=0))),ht=Le,gt=Ie,me=ht,Le=gt;0<Le||127<me;)_e.push(me&127|128),me=(me>>>7|Le<<25)>>>0,Le>>>=7;_e.push(me)}if(ir(X,re),G=Fe(G),V.call(O,U,G),R.O)for(O=0;O<R.O.length;++O)X=R.O[O],re=!!X.visibility,V=nt.data,U=V.addNormalizedLandmark,G=T,X=Object.assign(Object.assign({},X),{visibility:re?X.visibility:0}),re=new ui,qe(re,1,X.x),qe(re,2,X.y),qe(re,3,X.z),X.visibility&&qe(re,4,X.visibility),_e=X=new Se,De(_e,1,Ee(re,1)),De(_e,2,Ee(re,2)),De(_e,3,Ee(re,3)),De(_e,4,Ee(re,4)),De(_e,5,Ee(re,5)),ir(re,_e),X=Fe(X),U.call(V,G,X);if(R.M)for(O=0;O<R.M.length;++O){if(V=nt.data,U=V.addClassification,G=T,X=R.M[O],re=new Zn,qe(re,2,X.Y),X.index&&qe(re,1,X.index),X.label&&qe(re,3,X.label),X.displayName&&qe(re,4,X.displayName),_e=X=new Se,Le=Ee(re,1),Le!=null&&Le!=null)if(St(_e.g,8),me=_e.g,0<=Le)St(me,Le);else{for(Ie=0;9>Ie;Ie++)me.push(Le&127|128),Le>>=7;me.push(1)}De(_e,2,Ee(re,2)),me=Ee(re,3),me!=null&&(me=$e(me),St(_e.g,26),St(_e.g,me.length),Ze(_e,_e.g.end()),Ze(_e,me)),me=Ee(re,4),me!=null&&(me=$e(me),St(_e.g,34),St(_e.g,me.length),Ze(_e,_e.g.end()),Ze(_e,me)),ir(re,_e),X=Fe(X),U.call(V,G,X)}}nt=nt.data;break e;default:nt={}}}switch(mt=nt,Vt=Ke.stream,Ke.type){case"video":pe.pushTexture2d(Object.assign(Object.assign({},mt),{stream:Vt,timestamp:ee}));break;case"detections":It=mt,It.stream=Vt,It.timestamp=ee,pe.pushDetectionList(It);break;default:throw Error("Unknown input config type: '"+Ke.type+"'")}}return z.i.send(pe),b(vt,z.C,4);case 4:pe.delete(),vt.g=0}})})};function Un(v,E,C){return vn(v,function z(){var ee,pe,ne,ye,Re,Ke,mt=this,Vt,It,vt,nt,y,T,R,O;return N(z,function(V){switch(V.g){case 1:if(!C)return V.return(E);for(ee={},pe=0,ne=o(Object.keys(C)),ye=ne.next();!ye.done;ye=ne.next())Re=ye.value,Ke=C[Re],typeof Ke!="string"&&Ke.type==="texture"&&E[Ke.stream]!==void 0&&++pe;1<pe&&(mt.G=!1),Vt=o(Object.keys(C)),ye=Vt.next();case 2:if(ye.done){V.g=4;break}if(It=ye.value,vt=C[It],typeof vt=="string")return R=ee,O=It,b(V,Ki(mt,It,E[vt]),14);if(nt=E[vt.stream],vt.type==="detection_list"){if(nt){for(var U=nt.getRectList(),G=nt.getLandmarksList(),X=nt.getClassificationsList(),re=[],me=0;me<U.size();++me){var _e=U.get(me);e:{var Ie=new se;for(_e=new xt(_e);lt(_e);)switch(_e.i){case 13:var Le=P(_e);qe(Ie,1,Le);break;case 21:Le=P(_e),qe(Ie,2,Le);break;case 29:Le=P(_e),qe(Ie,3,Le);break;case 37:Le=P(_e),qe(Ie,4,Le);break;case 45:Le=P(_e),qe(Ie,5,Le);break;case 48:Le=Et(_e.g),qe(Ie,6,Le);break;default:if(!kn(Ie,_e))break e}}Ie={Z:it(Ie,1),$:it(Ie,2),height:it(Ie,3),width:it(Ie,4),rotation:it(Ie,5,0),X:Ce(Ie,6,0)},_e=ln(Z(G.get(me)),ui).map(ot);var Ve=X.get(me);e:for(Le=new Ei,Ve=new xt(Ve);lt(Ve);)switch(Ve.i){case 10:Le.addClassification(W(Ve,new Zn,Ms));break;default:if(!kn(Le,Ve))break e}Ie={T:Ie,O:_e,M:dt(Le)},re.push(Ie)}U=re}else U=[];ee[It]=U,V.g=7;break}if(vt.type==="proto_list"){if(nt){for(U=Array(nt.size()),G=0;G<nt.size();G++)U[G]=nt.get(G);nt.delete()}else U=[];ee[It]=U,V.g=7;break}if(nt===void 0){V.g=3;break}if(vt.type==="float_list"){ee[It]=nt,V.g=7;break}if(vt.type==="proto"){ee[It]=nt,V.g=7;break}if(vt.type!=="texture")throw Error("Unknown output config type: '"+vt.type+"'");return y=mt.s[It],y||(y=new $t(mt.h,mt.D),mt.s[It]=y),b(V,Xt(y,nt,mt.G),13);case 13:T=V.h,ee[It]=T;case 7:vt.transform&&ee[It]&&(ee[It]=vt.transform(ee[It])),V.g=3;break;case 14:R[O]=V.h;case 3:ye=Vt.next(),V.g=2;break;case 4:return V.return(ee)}})})}function Ki(v,E,C){return vn(v,function z(){var ee=this,pe;return N(z,function(ne){return typeof C=="number"||C instanceof Uint8Array||C instanceof ee.h.Uint8BlobList?ne.return(C):C instanceof ee.h.Texture2dDataOut?(pe=ee.s[E],pe||(pe=new $t(ee.h,ee.D),ee.s[E]=pe),ne.return(Xt(pe,C,ee.G))):ne.return(void 0)})})}function Uo(v,E){for(var C=E.name||"$",z=[].concat(c(E.wants)),ee=new v.h.StringList,pe=o(E.wants),ne=pe.next();!ne.done;ne=pe.next())ee.push_back(ne.value);pe=v.h.PacketListener.implement({onResults:function(ye){for(var Re={},Ke=0;Ke<E.wants.length;++Ke)Re[z[Ke]]=ye.get(Ke);var mt=v.listeners[C];mt&&(v.C=Un(v,Re,E.outs).then(function(Vt){Vt=mt(Vt);for(var It=0;It<E.wants.length;++It){var vt=Re[z[It]];typeof vt=="object"&&vt.hasOwnProperty&&vt.hasOwnProperty("delete")&&vt.delete()}Vt&&(v.C=Vt)}))}}),v.i.attachMultiListener(ee,pe),ee.delete()}n.onResults=function(v,E){this.listeners[E||"$"]=v},Y("Solution",ar),Y("OptionType",{BOOL:0,NUMBER:1,aa:2,0:"BOOL",1:"NUMBER",2:"STRING"});function Na(v){v=Qe(v);var E=v.getMesh();if(!E)return v;var C=new Float32Array(E.getVertexBufferList());E.getVertexBufferList=function(){return C};var z=new Uint32Array(E.getIndexBufferList());return E.getIndexBufferList=function(){return z},v}var Bo={files:[{url:"face_mesh_solution_packed_assets_loader.js"},{simd:!0,url:"face_mesh_solution_simd_wasm_bin.js"},{simd:!1,url:"face_mesh_solution_wasm_bin.js"}],graph:{url:"face_mesh.binarypb"},listeners:[{wants:["multi_face_geometry","image_transformed","multi_face_landmarks"],outs:{image:"image_transformed",multiFaceGeometry:{type:"proto_list",stream:"multi_face_geometry",transform:function(v){return v.map(Na)}},multiFaceLandmarks:{type:"proto_list",stream:"multi_face_landmarks",transform:function(v){return v.map(function(E){return ln(Z(E),ui).map(ot)})}}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document},enableFaceGeometry:{type:0,graphOptionXref:{calculatorName:"EnableFaceGeometryConstant",calculatorType:"ConstantSidePacketCalculator",fieldName:"bool_value"}},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},maxNumFaces:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorNumFaces",fieldName:"int_value"}},refineLandmarks:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorRefineLandmarks",fieldName:"bool_value"}},minDetectionConfidence:{type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"facelandmarkfrontgpu__facedetectionshortrangegpu__facedetectionshortrangecommon__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}},minTrackingConfidence:{type:1,graphOptionXref:{calculatorType:"ThresholdingCalculator",calculatorName:"facelandmarkfrontgpu__facelandmarkgpu__ThresholdingCalculator",fieldName:"threshold"}},cameraNear:{type:1,graphOptionXref:{calculatorType:"FaceGeometryEnvGeneratorCalculator",fieldName:"near"}},cameraFar:{type:1,graphOptionXref:{calculatorType:"FaceGeometryEnvGeneratorCalculator",fieldName:"far"}},cameraVerticalFovDegrees:{type:1,graphOptionXref:{calculatorType:"FaceGeometryEnvGeneratorCalculator",fieldName:"vertical_fov_degrees"}}}},Vo=[[61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]],zo=[[263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]],Go=[[276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]],Wo=[[33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]],Ho=[[46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]],Xo=[[10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]],Fc=[].concat(c(Vo),c(zo),c(Go),c(Wo),c(Ho),c(Xo));function Uc(v){v=v||{},v=Object.assign(Object.assign({},Bo),v),this.g=new ar(v)}n=Uc.prototype,n.close=function(){return this.g.close(),Promise.resolve()},n.onResults=function(v){this.g.onResults(v)},n.initialize=function(){return vn(this,function v(){var E=this;return N(v,function(C){return b(C,E.g.initialize(),0)})})},n.reset=function(){this.g.reset()},n.send=function(v){return vn(this,function E(){var C=this;return N(E,function(z){return b(z,C.g.send(v),0)})})},n.setOptions=function(v){this.g.setOptions(v)},Y("FACE_GEOMETRY",{Layout:{COLUMN_MAJOR:0,ROW_MAJOR:1,0:"COLUMN_MAJOR",1:"ROW_MAJOR"},PrimitiveType:{TRIANGLE:0,0:"TRIANGLE"},VertexType:{VERTEX_PT:0,0:"VERTEX_PT"},DEFAULT_CAMERA_PARAMS:{verticalFovDegrees:63,near:1,far:1e4}}),Y("FaceMesh",Uc),Y("FACEMESH_LIPS",Vo),Y("FACEMESH_LEFT_EYE",zo),Y("FACEMESH_LEFT_EYEBROW",Go),Y("FACEMESH_LEFT_IRIS",[[474,475],[475,476],[476,477],[477,474]]),Y("FACEMESH_RIGHT_EYE",Wo),Y("FACEMESH_RIGHT_EYEBROW",Ho),Y("FACEMESH_RIGHT_IRIS",[[469,470],[470,471],[471,472],[472,469]]),Y("FACEMESH_FACE_OVAL",Xo),Y("FACEMESH_CONTOURS",Fc),Y("FACEMESH_TESSELATION",[[127,34],[34,139],[139,127],[11,0],[0,37],[37,11],[232,231],[231,120],[120,232],[72,37],[37,39],[39,72],[128,121],[121,47],[47,128],[232,121],[121,128],[128,232],[104,69],[69,67],[67,104],[175,171],[171,148],[148,175],[118,50],[50,101],[101,118],[73,39],[39,40],[40,73],[9,151],[151,108],[108,9],[48,115],[115,131],[131,48],[194,204],[204,211],[211,194],[74,40],[40,185],[185,74],[80,42],[42,183],[183,80],[40,92],[92,186],[186,40],[230,229],[229,118],[118,230],[202,212],[212,214],[214,202],[83,18],[18,17],[17,83],[76,61],[61,146],[146,76],[160,29],[29,30],[30,160],[56,157],[157,173],[173,56],[106,204],[204,194],[194,106],[135,214],[214,192],[192,135],[203,165],[165,98],[98,203],[21,71],[71,68],[68,21],[51,45],[45,4],[4,51],[144,24],[24,23],[23,144],[77,146],[146,91],[91,77],[205,50],[50,187],[187,205],[201,200],[200,18],[18,201],[91,106],[106,182],[182,91],[90,91],[91,181],[181,90],[85,84],[84,17],[17,85],[206,203],[203,36],[36,206],[148,171],[171,140],[140,148],[92,40],[40,39],[39,92],[193,189],[189,244],[244,193],[159,158],[158,28],[28,159],[247,246],[246,161],[161,247],[236,3],[3,196],[196,236],[54,68],[68,104],[104,54],[193,168],[168,8],[8,193],[117,228],[228,31],[31,117],[189,193],[193,55],[55,189],[98,97],[97,99],[99,98],[126,47],[47,100],[100,126],[166,79],[79,218],[218,166],[155,154],[154,26],[26,155],[209,49],[49,131],[131,209],[135,136],[136,150],[150,135],[47,126],[126,217],[217,47],[223,52],[52,53],[53,223],[45,51],[51,134],[134,45],[211,170],[170,140],[140,211],[67,69],[69,108],[108,67],[43,106],[106,91],[91,43],[230,119],[119,120],[120,230],[226,130],[130,247],[247,226],[63,53],[53,52],[52,63],[238,20],[20,242],[242,238],[46,70],[70,156],[156,46],[78,62],[62,96],[96,78],[46,53],[53,63],[63,46],[143,34],[34,227],[227,143],[123,117],[117,111],[111,123],[44,125],[125,19],[19,44],[236,134],[134,51],[51,236],[216,206],[206,205],[205,216],[154,153],[153,22],[22,154],[39,37],[37,167],[167,39],[200,201],[201,208],[208,200],[36,142],[142,100],[100,36],[57,212],[212,202],[202,57],[20,60],[60,99],[99,20],[28,158],[158,157],[157,28],[35,226],[226,113],[113,35],[160,159],[159,27],[27,160],[204,202],[202,210],[210,204],[113,225],[225,46],[46,113],[43,202],[202,204],[204,43],[62,76],[76,77],[77,62],[137,123],[123,116],[116,137],[41,38],[38,72],[72,41],[203,129],[129,142],[142,203],[64,98],[98,240],[240,64],[49,102],[102,64],[64,49],[41,73],[73,74],[74,41],[212,216],[216,207],[207,212],[42,74],[74,184],[184,42],[169,170],[170,211],[211,169],[170,149],[149,176],[176,170],[105,66],[66,69],[69,105],[122,6],[6,168],[168,122],[123,147],[147,187],[187,123],[96,77],[77,90],[90,96],[65,55],[55,107],[107,65],[89,90],[90,180],[180,89],[101,100],[100,120],[120,101],[63,105],[105,104],[104,63],[93,137],[137,227],[227,93],[15,86],[86,85],[85,15],[129,102],[102,49],[49,129],[14,87],[87,86],[86,14],[55,8],[8,9],[9,55],[100,47],[47,121],[121,100],[145,23],[23,22],[22,145],[88,89],[89,179],[179,88],[6,122],[122,196],[196,6],[88,95],[95,96],[96,88],[138,172],[172,136],[136,138],[215,58],[58,172],[172,215],[115,48],[48,219],[219,115],[42,80],[80,81],[81,42],[195,3],[3,51],[51,195],[43,146],[146,61],[61,43],[171,175],[175,199],[199,171],[81,82],[82,38],[38,81],[53,46],[46,225],[225,53],[144,163],[163,110],[110,144],[52,65],[65,66],[66,52],[229,228],[228,117],[117,229],[34,127],[127,234],[234,34],[107,108],[108,69],[69,107],[109,108],[108,151],[151,109],[48,64],[64,235],[235,48],[62,78],[78,191],[191,62],[129,209],[209,126],[126,129],[111,35],[35,143],[143,111],[117,123],[123,50],[50,117],[222,65],[65,52],[52,222],[19,125],[125,141],[141,19],[221,55],[55,65],[65,221],[3,195],[195,197],[197,3],[25,7],[7,33],[33,25],[220,237],[237,44],[44,220],[70,71],[71,139],[139,70],[122,193],[193,245],[245,122],[247,130],[130,33],[33,247],[71,21],[21,162],[162,71],[170,169],[169,150],[150,170],[188,174],[174,196],[196,188],[216,186],[186,92],[92,216],[2,97],[97,167],[167,2],[141,125],[125,241],[241,141],[164,167],[167,37],[37,164],[72,38],[38,12],[12,72],[38,82],[82,13],[13,38],[63,68],[68,71],[71,63],[226,35],[35,111],[111,226],[101,50],[50,205],[205,101],[206,92],[92,165],[165,206],[209,198],[198,217],[217,209],[165,167],[167,97],[97,165],[220,115],[115,218],[218,220],[133,112],[112,243],[243,133],[239,238],[238,241],[241,239],[214,135],[135,169],[169,214],[190,173],[173,133],[133,190],[171,208],[208,32],[32,171],[125,44],[44,237],[237,125],[86,87],[87,178],[178,86],[85,86],[86,179],[179,85],[84,85],[85,180],[180,84],[83,84],[84,181],[181,83],[201,83],[83,182],[182,201],[137,93],[93,132],[132,137],[76,62],[62,183],[183,76],[61,76],[76,184],[184,61],[57,61],[61,185],[185,57],[212,57],[57,186],[186,212],[214,207],[207,187],[187,214],[34,143],[143,156],[156,34],[79,239],[239,237],[237,79],[123,137],[137,177],[177,123],[44,1],[1,4],[4,44],[201,194],[194,32],[32,201],[64,102],[102,129],[129,64],[213,215],[215,138],[138,213],[59,166],[166,219],[219,59],[242,99],[99,97],[97,242],[2,94],[94,141],[141,2],[75,59],[59,235],[235,75],[24,110],[110,228],[228,24],[25,130],[130,226],[226,25],[23,24],[24,229],[229,23],[22,23],[23,230],[230,22],[26,22],[22,231],[231,26],[112,26],[26,232],[232,112],[189,190],[190,243],[243,189],[221,56],[56,190],[190,221],[28,56],[56,221],[221,28],[27,28],[28,222],[222,27],[29,27],[27,223],[223,29],[30,29],[29,224],[224,30],[247,30],[30,225],[225,247],[238,79],[79,20],[20,238],[166,59],[59,75],[75,166],[60,75],[75,240],[240,60],[147,177],[177,215],[215,147],[20,79],[79,166],[166,20],[187,147],[147,213],[213,187],[112,233],[233,244],[244,112],[233,128],[128,245],[245,233],[128,114],[114,188],[188,128],[114,217],[217,174],[174,114],[131,115],[115,220],[220,131],[217,198],[198,236],[236,217],[198,131],[131,134],[134,198],[177,132],[132,58],[58,177],[143,35],[35,124],[124,143],[110,163],[163,7],[7,110],[228,110],[110,25],[25,228],[356,389],[389,368],[368,356],[11,302],[302,267],[267,11],[452,350],[350,349],[349,452],[302,303],[303,269],[269,302],[357,343],[343,277],[277,357],[452,453],[453,357],[357,452],[333,332],[332,297],[297,333],[175,152],[152,377],[377,175],[347,348],[348,330],[330,347],[303,304],[304,270],[270,303],[9,336],[336,337],[337,9],[278,279],[279,360],[360,278],[418,262],[262,431],[431,418],[304,408],[408,409],[409,304],[310,415],[415,407],[407,310],[270,409],[409,410],[410,270],[450,348],[348,347],[347,450],[422,430],[430,434],[434,422],[313,314],[314,17],[17,313],[306,307],[307,375],[375,306],[387,388],[388,260],[260,387],[286,414],[414,398],[398,286],[335,406],[406,418],[418,335],[364,367],[367,416],[416,364],[423,358],[358,327],[327,423],[251,284],[284,298],[298,251],[281,5],[5,4],[4,281],[373,374],[374,253],[253,373],[307,320],[320,321],[321,307],[425,427],[427,411],[411,425],[421,313],[313,18],[18,421],[321,405],[405,406],[406,321],[320,404],[404,405],[405,320],[315,16],[16,17],[17,315],[426,425],[425,266],[266,426],[377,400],[400,369],[369,377],[322,391],[391,269],[269,322],[417,465],[465,464],[464,417],[386,257],[257,258],[258,386],[466,260],[260,388],[388,466],[456,399],[399,419],[419,456],[284,332],[332,333],[333,284],[417,285],[285,8],[8,417],[346,340],[340,261],[261,346],[413,441],[441,285],[285,413],[327,460],[460,328],[328,327],[355,371],[371,329],[329,355],[392,439],[439,438],[438,392],[382,341],[341,256],[256,382],[429,420],[420,360],[360,429],[364,394],[394,379],[379,364],[277,343],[343,437],[437,277],[443,444],[444,283],[283,443],[275,440],[440,363],[363,275],[431,262],[262,369],[369,431],[297,338],[338,337],[337,297],[273,375],[375,321],[321,273],[450,451],[451,349],[349,450],[446,342],[342,467],[467,446],[293,334],[334,282],[282,293],[458,461],[461,462],[462,458],[276,353],[353,383],[383,276],[308,324],[324,325],[325,308],[276,300],[300,293],[293,276],[372,345],[345,447],[447,372],[352,345],[345,340],[340,352],[274,1],[1,19],[19,274],[456,248],[248,281],[281,456],[436,427],[427,425],[425,436],[381,256],[256,252],[252,381],[269,391],[391,393],[393,269],[200,199],[199,428],[428,200],[266,330],[330,329],[329,266],[287,273],[273,422],[422,287],[250,462],[462,328],[328,250],[258,286],[286,384],[384,258],[265,353],[353,342],[342,265],[387,259],[259,257],[257,387],[424,431],[431,430],[430,424],[342,353],[353,276],[276,342],[273,335],[335,424],[424,273],[292,325],[325,307],[307,292],[366,447],[447,345],[345,366],[271,303],[303,302],[302,271],[423,266],[266,371],[371,423],[294,455],[455,460],[460,294],[279,278],[278,294],[294,279],[271,272],[272,304],[304,271],[432,434],[434,427],[427,432],[272,407],[407,408],[408,272],[394,430],[430,431],[431,394],[395,369],[369,400],[400,395],[334,333],[333,299],[299,334],[351,417],[417,168],[168,351],[352,280],[280,411],[411,352],[325,319],[319,320],[320,325],[295,296],[296,336],[336,295],[319,403],[403,404],[404,319],[330,348],[348,349],[349,330],[293,298],[298,333],[333,293],[323,454],[454,447],[447,323],[15,16],[16,315],[315,15],[358,429],[429,279],[279,358],[14,15],[15,316],[316,14],[285,336],[336,9],[9,285],[329,349],[349,350],[350,329],[374,380],[380,252],[252,374],[318,402],[402,403],[403,318],[6,197],[197,419],[419,6],[318,319],[319,325],[325,318],[367,364],[364,365],[365,367],[435,367],[367,397],[397,435],[344,438],[438,439],[439,344],[272,271],[271,311],[311,272],[195,5],[5,281],[281,195],[273,287],[287,291],[291,273],[396,428],[428,199],[199,396],[311,271],[271,268],[268,311],[283,444],[444,445],[445,283],[373,254],[254,339],[339,373],[282,334],[334,296],[296,282],[449,347],[347,346],[346,449],[264,447],[447,454],[454,264],[336,296],[296,299],[299,336],[338,10],[10,151],[151,338],[278,439],[439,455],[455,278],[292,407],[407,415],[415,292],[358,371],[371,355],[355,358],[340,345],[345,372],[372,340],[346,347],[347,280],[280,346],[442,443],[443,282],[282,442],[19,94],[94,370],[370,19],[441,442],[442,295],[295,441],[248,419],[419,197],[197,248],[263,255],[255,359],[359,263],[440,275],[275,274],[274,440],[300,383],[383,368],[368,300],[351,412],[412,465],[465,351],[263,467],[467,466],[466,263],[301,368],[368,389],[389,301],[395,378],[378,379],[379,395],[412,351],[351,419],[419,412],[436,426],[426,322],[322,436],[2,164],[164,393],[393,2],[370,462],[462,461],[461,370],[164,0],[0,267],[267,164],[302,11],[11,12],[12,302],[268,12],[12,13],[13,268],[293,300],[300,301],[301,293],[446,261],[261,340],[340,446],[330,266],[266,425],[425,330],[426,423],[423,391],[391,426],[429,355],[355,437],[437,429],[391,327],[327,326],[326,391],[440,457],[457,438],[438,440],[341,382],[382,362],[362,341],[459,457],[457,461],[461,459],[434,430],[430,394],[394,434],[414,463],[463,362],[362,414],[396,369],[369,262],[262,396],[354,461],[461,457],[457,354],[316,403],[403,402],[402,316],[315,404],[404,403],[403,315],[314,405],[405,404],[404,314],[313,406],[406,405],[405,313],[421,418],[418,406],[406,421],[366,401],[401,361],[361,366],[306,408],[408,407],[407,306],[291,409],[409,408],[408,291],[287,410],[410,409],[409,287],[432,436],[436,410],[410,432],[434,416],[416,411],[411,434],[264,368],[368,383],[383,264],[309,438],[438,457],[457,309],[352,376],[376,401],[401,352],[274,275],[275,4],[4,274],[421,428],[428,262],[262,421],[294,327],[327,358],[358,294],[433,416],[416,367],[367,433],[289,455],[455,439],[439,289],[462,370],[370,326],[326,462],[2,326],[326,370],[370,2],[305,460],[460,455],[455,305],[254,449],[449,448],[448,254],[255,261],[261,446],[446,255],[253,450],[450,449],[449,253],[252,451],[451,450],[450,252],[256,452],[452,451],[451,256],[341,453],[453,452],[452,341],[413,464],[464,463],[463,413],[441,413],[413,414],[414,441],[258,442],[442,441],[441,258],[257,443],[443,442],[442,257],[259,444],[444,443],[443,259],[260,445],[445,444],[444,260],[467,342],[342,445],[445,467],[459,458],[458,250],[250,459],[289,392],[392,290],[290,289],[290,328],[328,460],[460,290],[376,433],[433,435],[435,376],[250,290],[290,392],[392,250],[411,416],[416,433],[433,411],[341,463],[463,464],[464,341],[453,464],[464,465],[465,453],[357,465],[465,412],[412,357],[343,412],[412,399],[399,343],[360,363],[363,440],[440,360],[437,399],[399,456],[456,437],[420,456],[456,363],[363,420],[401,435],[435,288],[288,401],[372,383],[383,353],[353,372],[339,255],[255,249],[249,339],[448,261],[261,255],[255,448],[133,243],[243,190],[190,133],[133,155],[155,112],[112,133],[33,246],[246,247],[247,33],[33,130],[130,25],[25,33],[398,384],[384,286],[286,398],[362,398],[398,414],[414,362],[362,463],[463,341],[341,362],[263,359],[359,467],[467,263],[263,249],[249,255],[255,263],[466,467],[467,260],[260,466],[75,60],[60,166],[166,75],[238,239],[239,79],[79,238],[162,127],[127,139],[139,162],[72,11],[11,37],[37,72],[121,232],[232,120],[120,121],[73,72],[72,39],[39,73],[114,128],[128,47],[47,114],[233,232],[232,128],[128,233],[103,104],[104,67],[67,103],[152,175],[175,148],[148,152],[119,118],[118,101],[101,119],[74,73],[73,40],[40,74],[107,9],[9,108],[108,107],[49,48],[48,131],[131,49],[32,194],[194,211],[211,32],[184,74],[74,185],[185,184],[191,80],[80,183],[183,191],[185,40],[40,186],[186,185],[119,230],[230,118],[118,119],[210,202],[202,214],[214,210],[84,83],[83,17],[17,84],[77,76],[76,146],[146,77],[161,160],[160,30],[30,161],[190,56],[56,173],[173,190],[182,106],[106,194],[194,182],[138,135],[135,192],[192,138],[129,203],[203,98],[98,129],[54,21],[21,68],[68,54],[5,51],[51,4],[4,5],[145,144],[144,23],[23,145],[90,77],[77,91],[91,90],[207,205],[205,187],[187,207],[83,201],[201,18],[18,83],[181,91],[91,182],[182,181],[180,90],[90,181],[181,180],[16,85],[85,17],[17,16],[205,206],[206,36],[36,205],[176,148],[148,140],[140,176],[165,92],[92,39],[39,165],[245,193],[193,244],[244,245],[27,159],[159,28],[28,27],[30,247],[247,161],[161,30],[174,236],[236,196],[196,174],[103,54],[54,104],[104,103],[55,193],[193,8],[8,55],[111,117],[117,31],[31,111],[221,189],[189,55],[55,221],[240,98],[98,99],[99,240],[142,126],[126,100],[100,142],[219,166],[166,218],[218,219],[112,155],[155,26],[26,112],[198,209],[209,131],[131,198],[169,135],[135,150],[150,169],[114,47],[47,217],[217,114],[224,223],[223,53],[53,224],[220,45],[45,134],[134,220],[32,211],[211,140],[140,32],[109,67],[67,108],[108,109],[146,43],[43,91],[91,146],[231,230],[230,120],[120,231],[113,226],[226,247],[247,113],[105,63],[63,52],[52,105],[241,238],[238,242],[242,241],[124,46],[46,156],[156,124],[95,78],[78,96],[96,95],[70,46],[46,63],[63,70],[116,143],[143,227],[227,116],[116,123],[123,111],[111,116],[1,44],[44,19],[19,1],[3,236],[236,51],[51,3],[207,216],[216,205],[205,207],[26,154],[154,22],[22,26],[165,39],[39,167],[167,165],[199,200],[200,208],[208,199],[101,36],[36,100],[100,101],[43,57],[57,202],[202,43],[242,20],[20,99],[99,242],[56,28],[28,157],[157,56],[124,35],[35,113],[113,124],[29,160],[160,27],[27,29],[211,204],[204,210],[210,211],[124,113],[113,46],[46,124],[106,43],[43,204],[204,106],[96,62],[62,77],[77,96],[227,137],[137,116],[116,227],[73,41],[41,72],[72,73],[36,203],[203,142],[142,36],[235,64],[64,240],[240,235],[48,49],[49,64],[64,48],[42,41],[41,74],[74,42],[214,212],[212,207],[207,214],[183,42],[42,184],[184,183],[210,169],[169,211],[211,210],[140,170],[170,176],[176,140],[104,105],[105,69],[69,104],[193,122],[122,168],[168,193],[50,123],[123,187],[187,50],[89,96],[96,90],[90,89],[66,65],[65,107],[107,66],[179,89],[89,180],[180,179],[119,101],[101,120],[120,119],[68,63],[63,104],[104,68],[234,93],[93,227],[227,234],[16,15],[15,85],[85,16],[209,129],[129,49],[49,209],[15,14],[14,86],[86,15],[107,55],[55,9],[9,107],[120,100],[100,121],[121,120],[153,145],[145,22],[22,153],[178,88],[88,179],[179,178],[197,6],[6,196],[196,197],[89,88],[88,96],[96,89],[135,138],[138,136],[136,135],[138,215],[215,172],[172,138],[218,115],[115,219],[219,218],[41,42],[42,81],[81,41],[5,195],[195,51],[51,5],[57,43],[43,61],[61,57],[208,171],[171,199],[199,208],[41,81],[81,38],[38,41],[224,53],[53,225],[225,224],[24,144],[144,110],[110,24],[105,52],[52,66],[66,105],[118,229],[229,117],[117,118],[227,34],[34,234],[234,227],[66,107],[107,69],[69,66],[10,109],[109,151],[151,10],[219,48],[48,235],[235,219],[183,62],[62,191],[191,183],[142,129],[129,126],[126,142],[116,111],[111,143],[143,116],[118,117],[117,50],[50,118],[223,222],[222,52],[52,223],[94,19],[19,141],[141,94],[222,221],[221,65],[65,222],[196,3],[3,197],[197,196],[45,220],[220,44],[44,45],[156,70],[70,139],[139,156],[188,122],[122,245],[245,188],[139,71],[71,162],[162,139],[149,170],[170,150],[150,149],[122,188],[188,196],[196,122],[206,216],[216,92],[92,206],[164,2],[2,167],[167,164],[242,141],[141,241],[241,242],[0,164],[164,37],[37,0],[11,72],[72,12],[12,11],[12,38],[38,13],[13,12],[70,63],[63,71],[71,70],[31,226],[226,111],[111,31],[36,101],[101,205],[205,36],[203,206],[206,165],[165,203],[126,209],[209,217],[217,126],[98,165],[165,97],[97,98],[237,220],[220,218],[218,237],[237,239],[239,241],[241,237],[210,214],[214,169],[169,210],[140,171],[171,32],[32,140],[241,125],[125,237],[237,241],[179,86],[86,178],[178,179],[180,85],[85,179],[179,180],[181,84],[84,180],[180,181],[182,83],[83,181],[181,182],[194,201],[201,182],[182,194],[177,137],[137,132],[132,177],[184,76],[76,183],[183,184],[185,61],[61,184],[184,185],[186,57],[57,185],[185,186],[216,212],[212,186],[186,216],[192,214],[214,187],[187,192],[139,34],[34,156],[156,139],[218,79],[79,237],[237,218],[147,123],[123,177],[177,147],[45,44],[44,4],[4,45],[208,201],[201,32],[32,208],[98,64],[64,129],[129,98],[192,213],[213,138],[138,192],[235,59],[59,219],[219,235],[141,242],[242,97],[97,141],[97,2],[2,141],[141,97],[240,75],[75,235],[235,240],[229,24],[24,228],[228,229],[31,25],[25,226],[226,31],[230,23],[23,229],[229,230],[231,22],[22,230],[230,231],[232,26],[26,231],[231,232],[233,112],[112,232],[232,233],[244,189],[189,243],[243,244],[189,221],[221,190],[190,189],[222,28],[28,221],[221,222],[223,27],[27,222],[222,223],[224,29],[29,223],[223,224],[225,30],[30,224],[224,225],[113,247],[247,225],[225,113],[99,60],[60,240],[240,99],[213,147],[147,215],[215,213],[60,20],[20,166],[166,60],[192,187],[187,213],[213,192],[243,112],[112,244],[244,243],[244,233],[233,245],[245,244],[245,128],[128,188],[188,245],[188,114],[114,174],[174,188],[134,131],[131,220],[220,134],[174,217],[217,236],[236,174],[236,198],[198,134],[134,236],[215,177],[177,58],[58,215],[156,143],[143,124],[124,156],[25,110],[110,7],[7,25],[31,228],[228,25],[25,31],[264,356],[356,368],[368,264],[0,11],[11,267],[267,0],[451,452],[452,349],[349,451],[267,302],[302,269],[269,267],[350,357],[357,277],[277,350],[350,452],[452,357],[357,350],[299,333],[333,297],[297,299],[396,175],[175,377],[377,396],[280,347],[347,330],[330,280],[269,303],[303,270],[270,269],[151,9],[9,337],[337,151],[344,278],[278,360],[360,344],[424,418],[418,431],[431,424],[270,304],[304,409],[409,270],[272,310],[310,407],[407,272],[322,270],[270,410],[410,322],[449,450],[450,347],[347,449],[432,422],[422,434],[434,432],[18,313],[313,17],[17,18],[291,306],[306,375],[375,291],[259,387],[387,260],[260,259],[424,335],[335,418],[418,424],[434,364],[364,416],[416,434],[391,423],[423,327],[327,391],[301,251],[251,298],[298,301],[275,281],[281,4],[4,275],[254,373],[373,253],[253,254],[375,307],[307,321],[321,375],[280,425],[425,411],[411,280],[200,421],[421,18],[18,200],[335,321],[321,406],[406,335],[321,320],[320,405],[405,321],[314,315],[315,17],[17,314],[423,426],[426,266],[266,423],[396,377],[377,369],[369,396],[270,322],[322,269],[269,270],[413,417],[417,464],[464,413],[385,386],[386,258],[258,385],[248,456],[456,419],[419,248],[298,284],[284,333],[333,298],[168,417],[417,8],[8,168],[448,346],[346,261],[261,448],[417,413],[413,285],[285,417],[326,327],[327,328],[328,326],[277,355],[355,329],[329,277],[309,392],[392,438],[438,309],[381,382],[382,256],[256,381],[279,429],[429,360],[360,279],[365,364],[364,379],[379,365],[355,277],[277,437],[437,355],[282,443],[443,283],[283,282],[281,275],[275,363],[363,281],[395,431],[431,369],[369,395],[299,297],[297,337],[337,299],[335,273],[273,321],[321,335],[348,450],[450,349],[349,348],[359,446],[446,467],[467,359],[283,293],[293,282],[282,283],[250,458],[458,462],[462,250],[300,276],[276,383],[383,300],[292,308],[308,325],[325,292],[283,276],[276,293],[293,283],[264,372],[372,447],[447,264],[346,352],[352,340],[340,346],[354,274],[274,19],[19,354],[363,456],[456,281],[281,363],[426,436],[436,425],[425,426],[380,381],[381,252],[252,380],[267,269],[269,393],[393,267],[421,200],[200,428],[428,421],[371,266],[266,329],[329,371],[432,287],[287,422],[422,432],[290,250],[250,328],[328,290],[385,258],[258,384],[384,385],[446,265],[265,342],[342,446],[386,387],[387,257],[257,386],[422,424],[424,430],[430,422],[445,342],[342,276],[276,445],[422,273],[273,424],[424,422],[306,292],[292,307],[307,306],[352,366],[366,345],[345,352],[268,271],[271,302],[302,268],[358,423],[423,371],[371,358],[327,294],[294,460],[460,327],[331,279],[279,294],[294,331],[303,271],[271,304],[304,303],[436,432],[432,427],[427,436],[304,272],[272,408],[408,304],[395,394],[394,431],[431,395],[378,395],[395,400],[400,378],[296,334],[334,299],[299,296],[6,351],[351,168],[168,6],[376,352],[352,411],[411,376],[307,325],[325,320],[320,307],[285,295],[295,336],[336,285],[320,319],[319,404],[404,320],[329,330],[330,349],[349,329],[334,293],[293,333],[333,334],[366,323],[323,447],[447,366],[316,15],[15,315],[315,316],[331,358],[358,279],[279,331],[317,14],[14,316],[316,317],[8,285],[285,9],[9,8],[277,329],[329,350],[350,277],[253,374],[374,252],[252,253],[319,318],[318,403],[403,319],[351,6],[6,419],[419,351],[324,318],[318,325],[325,324],[397,367],[367,365],[365,397],[288,435],[435,397],[397,288],[278,344],[344,439],[439,278],[310,272],[272,311],[311,310],[248,195],[195,281],[281,248],[375,273],[273,291],[291,375],[175,396],[396,199],[199,175],[312,311],[311,268],[268,312],[276,283],[283,445],[445,276],[390,373],[373,339],[339,390],[295,282],[282,296],[296,295],[448,449],[449,346],[346,448],[356,264],[264,454],[454,356],[337,336],[336,299],[299,337],[337,338],[338,151],[151,337],[294,278],[278,455],[455,294],[308,292],[292,415],[415,308],[429,358],[358,355],[355,429],[265,340],[340,372],[372,265],[352,346],[346,280],[280,352],[295,442],[442,282],[282,295],[354,19],[19,370],[370,354],[285,441],[441,295],[295,285],[195,248],[248,197],[197,195],[457,440],[440,274],[274,457],[301,300],[300,368],[368,301],[417,351],[351,465],[465,417],[251,301],[301,389],[389,251],[394,395],[395,379],[379,394],[399,412],[412,419],[419,399],[410,436],[436,322],[322,410],[326,2],[2,393],[393,326],[354,370],[370,461],[461,354],[393,164],[164,267],[267,393],[268,302],[302,12],[12,268],[312,268],[268,13],[13,312],[298,293],[293,301],[301,298],[265,446],[446,340],[340,265],[280,330],[330,425],[425,280],[322,426],[426,391],[391,322],[420,429],[429,437],[437,420],[393,391],[391,326],[326,393],[344,440],[440,438],[438,344],[458,459],[459,461],[461,458],[364,434],[434,394],[394,364],[428,396],[396,262],[262,428],[274,354],[354,457],[457,274],[317,316],[316,402],[402,317],[316,315],[315,403],[403,316],[315,314],[314,404],[404,315],[314,313],[313,405],[405,314],[313,421],[421,406],[406,313],[323,366],[366,361],[361,323],[292,306],[306,407],[407,292],[306,291],[291,408],[408,306],[291,287],[287,409],[409,291],[287,432],[432,410],[410,287],[427,434],[434,411],[411,427],[372,264],[264,383],[383,372],[459,309],[309,457],[457,459],[366,352],[352,401],[401,366],[1,274],[274,4],[4,1],[418,421],[421,262],[262,418],[331,294],[294,358],[358,331],[435,433],[433,367],[367,435],[392,289],[289,439],[439,392],[328,462],[462,326],[326,328],[94,2],[2,370],[370,94],[289,305],[305,455],[455,289],[339,254],[254,448],[448,339],[359,255],[255,446],[446,359],[254,253],[253,449],[449,254],[253,252],[252,450],[450,253],[252,256],[256,451],[451,252],[256,341],[341,452],[452,256],[414,413],[413,463],[463,414],[286,441],[441,414],[414,286],[286,258],[258,441],[441,286],[258,257],[257,442],[442,258],[257,259],[259,443],[443,257],[259,260],[260,444],[444,259],[260,467],[467,445],[445,260],[309,459],[459,250],[250,309],[305,289],[289,290],[290,305],[305,290],[290,460],[460,305],[401,376],[376,435],[435,401],[309,250],[250,392],[392,309],[376,411],[411,433],[433,376],[453,341],[341,464],[464,453],[357,453],[453,465],[465,357],[343,357],[357,412],[412,343],[437,343],[343,399],[399,437],[344,360],[360,440],[440,344],[420,437],[437,456],[456,420],[360,420],[420,363],[363,360],[361,401],[401,288],[288,361],[265,372],[372,353],[353,265],[390,339],[339,249],[249,390],[339,448],[448,255],[255,339]]),Y("matrixDataToMatrix",function(v){for(var E=v.getCols(),C=v.getRows(),z=v.getPackedDataList(),ee=[],pe=0;pe<C;pe++)ee.push(Array(E));for(pe=0;pe<C;pe++)for(var ne=0;ne<E;ne++){var ye=v.getLayout()===1?pe*E+ne:ne*C+pe;ee[pe][ne]=z[ye]}return ee}),Y("VERSION","0.4.1633559619")}).call(vi);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sT=1e-7,aT=1e-4;class oT{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class e1{refCount(e){return lr("refCount")}incRef(e){return lr("incRef")}timerAvailable(){return!0}time(e){return lr("time")}read(e){return lr("read")}readSync(e){return lr("readSync")}readToGPU(e,t){return lr("readToGPU")}numDataIds(){return lr("numDataIds")}disposeData(e,t){return lr("disposeData")}write(e,t,r){return lr("write")}move(e,t,r,i,s){return lr("move")}createTensorFromGPUData(e,t,r){return lr("createTensorFromGPUData")}memory(){return lr("memory")}floatPrecision(){return lr("floatPrecision")}epsilon(){return this.floatPrecision()===32?sT:aT}dispose(){return lr("dispose")}}function lr(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ll(n,e,t){return Math.max(n,Math.min(e,t))}function Fd(n){return n%2===0?n:n+1}function Jo(n,e,t){const r=n[e];n[e]=n[t],n[t]=r}function cT(n){let e=0;for(let t=0;t<n.length;t++)e+=n[t];return e}function k(n,e){if(!n)throw new Error(typeof e=="string"?e:e())}function Tr(n,e,t=""){k(fn(n,e),()=>t+` Shapes ${n} and ${e} must match`)}function To(n){k(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function Ae(n){if(n.length===0)return 1;let e=n[0];for(let t=1;t<n.length;t++)e*=n[t];return e}function lT(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==null&&e[t]!==null&&n[t]!==e[t])return!1;return!0}function fn(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}function po(n){return n%1===0}function Bh(n){const e=Math.ceil(Math.sqrt(n));return[e,Math.ceil(n/e)]}function ro(n,e){return e<=n.length?n:n+" ".repeat(e-n.length)}function nm(n,e=i=>0,t,r){return new Promise((i,s)=>{let a=0;const o=()=>{if(n()){i();return}a++;const c=e(a);if(t!=null&&a>=t){s();return}r!=null?r(o,c):setTimeout(o,c)};o()})}function uT(n,e){let t=1,r=-1;for(let s=0;s<n.length;++s)if(n[s]>=0)t*=n[s];else if(n[s]===-1){if(r!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${s}`);r=s}else if(n[s]<0)throw Error(`Shapes can not be < 0. Found ${n[s]} at dim ${s}`);if(r===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${n}`);return n}if(t===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);const i=n.slice();return i[r]=e/t,i}function Rn(n,e){const t=e.length;return n=n==null?e.map((r,i)=>i):[].concat(n),k(n.every(r=>r>=-t&&r<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${n}`),k(n.every(r=>po(r)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(r=>r<0?t+r:r)}function Ts(n,e){const t=[],r=[],i=e!=null&&Array.isArray(e)&&e.length===0,s=e==null||i?null:Rn(e,n).sort();let a=0;for(let o=0;o<n.length;++o){if(s!=null){if(s[a]===o&&n[o]!==1)throw new Error(`Can't squeeze axis ${o} since its dim '${n[o]}' is not 1`);(s[a]==null||s[a]>o)&&n[o]===1&&(t.push(n[o]),r.push(o)),s[a]<=o&&a++}n[o]!==1&&(t.push(n[o]),r.push(o))}return{newShape:t,keptDims:r}}function vs(n,e){return En(n,e)}function En(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else if(n==="string")t=new Array(e);else throw new Error(`Unknown data type ${n}`);return t}function hT(n,e){for(let t=0;t<n.length;t++){const r=n[t];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}function dT(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function fT(n,e){return!(e==="complex64"||e==="float32"&&n!=="complex64"||e==="int32"&&n!=="float32"&&n!=="complex64"||e==="bool"&&n==="bool")}function kl(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function pT(n){if(n==null)return 0;let e=0;return n.forEach(t=>e+=t.length),e}function lu(n){return typeof n=="string"||n instanceof String}function mT(n){return typeof n=="boolean"}function gT(n){return typeof n=="number"}function Ac(n){return Array.isArray(n)?Ac(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":gT(n)?"float32":lu(n)?"string":mT(n)?"bool":"float32"}function Vh(n){return!!(n&&n.constructor&&n.call&&n.apply)}function zh(n,e){for(let t=e;t<n;++t)if(n%t===0)return t;return n}function Pn(n){const e=n.length;if(e<2)return[];const t=new Array(e-1);t[e-2]=n[e-1];for(let r=e-3;r>=0;--r)t[r]=t[r+1]*n[r+1];return t}function t1(n,e,t,r=!1){const i=new Array;if(e.length===1){const s=e[0]*(r?2:1);for(let a=0;a<s;a++)i[a]=t[n+a]}else{const s=e[0],a=e.slice(1),o=a.reduce((c,l)=>c*l)*(r?2:1);for(let c=0;c<s;c++)i[c]=t1(n+c*o,a,t,r)}return i}function Gh(n,e,t=!1){if(n.length===0)return e[0];const r=n.reduce((i,s)=>i*s)*(t?2:1);if(r===0)return[];if(r!==e.length)throw new Error(`[${n}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return t1(0,n,e,t)}function n1(n,e){const t=_s(n,e);for(let r=0;r<t.length;r++)t[r]=1;return t}function _s(n,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${e}`)}function Cr(n){n.forEach(e=>{k(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function Wh(n,e,t){if(e===0)return 0;if(e===1)return n[0];let r=n[n.length-1];for(let i=0;i<n.length-1;++i)r+=t[i]*n[i];return r}function Ud(n,e,t){if(e===0)return[];if(e===1)return[n];const r=new Array(e);for(let i=0;i<r.length-1;++i)r[i]=Math.floor(n/t[i]),n-=r[i]*t[i];return r[r.length-1]=n,r}function aa(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rm="tfjsflags";class xT{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=yT,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(te().getBool("IS_TEST")||te().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,r){if(this.flagRegistry[e]={evaluationFn:t,setHook:r},this.urlFlags[e]!=null){const i=this.urlFlags[e];te().getBool("IS_TEST")||te().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${i}.`),this.set(e,i)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(aa(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);rm in e&&e[rm].split(",").forEach(r=>{const[i,s]=r.split(":");this.urlFlags[i]=_T(i,s)})}}function yT(n){const e={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...r)=>(vT(e,r[0],r[1]),r.join("="))),e}function vT(n,e,t){n[decodeURIComponent(e)]=decodeURIComponent(t||"")}function _T(n,e){const t=e.toLowerCase();return t==="true"||t==="false"?t==="true":`${+t}`===t?+t:e}function te(){return r1}let r1=null;function bT(n){r1=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let uh;function i1(){if(uh==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");uh=n}return uh}function ST(){const n=i1();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function Bd(n,e){const t=ST();if(t.has(n))return t.get(n);{const r=e();return t.set(n,r),t.get(n)}}const s1="Abs",a1="Acos",o1="Acosh",Vd="Add",c1="AddN",l1="All",u1="Any",h1="ArgMax",d1="ArgMin",f1="Asin",p1="Asinh",m1="Atan",g1="Atanh",x1="Atan2",y1="AvgPool",wT="AvgPoolGrad",v1="AvgPool3D",ET="AvgPool3DGrad",_1="BatchMatMul",b1="BatchToSpaceND",S1="Bincount",w1="BitwiseAnd",E1="BroadcastArgs",zd="Cast",T1="Ceil",C1="ClipByValue",A1="Complex",R1="ComplexAbs",N1="Concat",M1="Conv2D",I1="Conv2DBackpropFilter",D1="Conv2DBackpropInput",P1="Conv3D",TT="Conv3DBackpropFilterV2",O1="Conv3DBackpropInputV2",$1="Cos",L1="Cosh",k1="Cumprod",F1="Cumsum",U1="CropAndResize",B1="DenseBincount",V1="DepthToSpace",z1="DepthwiseConv2dNative",G1="DepthwiseConv2dNativeBackpropFilter",W1="DepthwiseConv2dNativeBackpropInput",H1="Diag",X1="Dilation2D",j1="RealDiv",q1="Einsum",K1="Elu",CT="EluGrad",Y1="Erf",Z1="Equal",J1="Exp",Q1="ExpandDims",e0="Expm1",t0="FFT",n0="Fill",r0="FlipLeftRight",i0="Floor",s0="FloorDiv",a0="FusedBatchNorm",o0="GatherV2",c0="GatherNd",l0="Greater",u0="GreaterEqual",Gd="Identity",h0="IFFT",d0="Imag",f0="IsFinite",p0="IsInf",m0="IsNan",g0="LeakyRelu",x0="Less",y0="LessEqual",v0="LinSpace",_0="Log",b0="Log1p",S0="LogicalAnd",w0="LogicalNot",E0="LogicalOr",T0="LRN",AT="LRNGrad",C0="Max",A0="Maximum",R0="MaxPool",RT="MaxPoolGrad",N0="MaxPool3D",NT="MaxPool3DGrad",M0="MaxPoolWithArgmax",I0="Mean",D0="Min",P0="Minimum",O0="MirrorPad",$0="Mod",L0="Multinomial",k0="Multiply",F0="Neg",U0="NotEqual",B0="NonMaxSuppressionV3",V0="NonMaxSuppressionV4",z0="NonMaxSuppressionV5",G0="OnesLike",W0="OneHot",H0="Pack",X0="PadV2",j0="Pow",q0="Prelu",K0="Prod",Y0="RaggedGather",Z0="RaggedRange",J0="RaggedTensorToTensor",Q0="Range",e2="Real",t2="Reciprocal",n2="Relu",r2="Reshape",i2="ResizeNearestNeighbor",MT="ResizeNearestNeighborGrad",s2="ResizeBilinear",IT="ResizeBilinearGrad",a2="Relu6",o2="Reverse",c2="Round",l2="Rsqrt",u2="ScatterNd",h2="TensorScatterUpdate",d2="SearchSorted",f2="Select",p2="Selu",m2="Slice",g2="Sin",x2="Sinh",y2="Sign",v2="Sigmoid",_2="Softplus",b2="Sqrt",S2="Sum",w2="SpaceToBatchND",E2="SplitV",T2="Softmax",C2="SparseFillEmptyRows",A2="SparseReshape",R2="SparseSegmentMean",N2="SparseSegmentSum",M2="SparseToDense",I2="SquaredDifference",DT="Square",D2="StaticRegexReplace",P2="StridedSlice",O2="StringNGrams",$2="StringSplit",L2="StringToHashBucketFast",k2="Sub",F2="Tan",U2="Tanh",Wd="Tile",B2="TopK",V2="Transform",Sl="Transpose",z2="Unique",G2="Unpack",W2="UnsortedSegmentSum",H2="ZerosLike",X2="Step",Hh="FromPixels",j2="RotateWithOffset",Xh="_FusedMatMul",jh="FusedConv2D",qh="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ri(...n){te().getBool("IS_TEST")||te().getBool("PROD")||console.warn(...n)}function PT(...n){te().getBool("IS_TEST")||te().getBool("PROD")||console.log(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fl=Bd("kernelRegistry",()=>new Map),OT=Bd("gradRegistry",()=>new Map);function Kh(n,e){const t=q2(n,e);return Fl.get(t)}function im(n){return OT.get(n)}function sm(n){const e=Fl.entries(),t=[];for(;;){const{done:r,value:i}=e.next();if(r)break;const[s,a]=i,[o]=s.split("_");o===n&&t.push(a)}return t}function $T(n){const{kernelName:e,backendName:t}=n,r=q2(e,t);Fl.has(r)&&ri(`The kernel '${e}' for backend '${t}' is already registered`),Fl.set(r,n)}function q2(n,e){return`${e}_${n}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K2(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}var Y2=an,Br=null;try{Br=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function an(n,e,t){this.low=n|0,this.high=e|0,this.unsigned=!!t}an.prototype.__isLong__;Object.defineProperty(an.prototype,"__isLong__",{value:!0});function gr(n){return(n&&n.__isLong__)===!0}an.isLong=gr;var am={},om={};function va(n,e){var t,r,i;return e?(n>>>=0,(i=0<=n&&n<256)&&(r=om[n],r)?r:(t=on(n,(n|0)<0?-1:0,!0),i&&(om[n]=t),t)):(n|=0,(i=-128<=n&&n<128)&&(r=am[n],r)?r:(t=on(n,n<0?-1:0,!1),i&&(am[n]=t),t))}an.fromInt=va;function Vr(n,e){if(isNaN(n))return e?Js:zr;if(e){if(n<0)return Js;if(n>=Z2)return ex}else{if(n<=-lm)return fr;if(n+1>=lm)return Q2}return n<0?Vr(-n,e).neg():on(n%mo|0,n/mo|0,e)}an.fromNumber=Vr;function on(n,e,t){return new an(n,e,t)}an.fromBits=on;var Ul=Math.pow;function Hd(n,e,t){if(n.length===0)throw Error("empty string");if(n==="NaN"||n==="Infinity"||n==="+Infinity"||n==="-Infinity")return zr;if(typeof e=="number"?(t=e,e=!1):e=!!e,t=t||10,t<2||36<t)throw RangeError("radix");var r;if((r=n.indexOf("-"))>0)throw Error("interior hyphen");if(r===0)return Hd(n.substring(1),e,t).neg();for(var i=Vr(Ul(t,8)),s=zr,a=0;a<n.length;a+=8){var o=Math.min(8,n.length-a),c=parseInt(n.substring(a,a+o),t);if(o<8){var l=Vr(Ul(t,o));s=s.mul(l).add(Vr(c))}else s=s.mul(i),s=s.add(Vr(c))}return s.unsigned=e,s}an.fromString=Hd;function oi(n,e){return typeof n=="number"?Vr(n,e):typeof n=="string"?Hd(n,e):on(n.low,n.high,typeof e=="boolean"?e:n.unsigned)}an.fromValue=oi;var cm=65536,LT=1<<24,mo=cm*cm,Z2=mo*mo,lm=Z2/2,um=va(LT),zr=va(0);an.ZERO=zr;var Js=va(0,!0);an.UZERO=Js;var Qa=va(1);an.ONE=Qa;var J2=va(1,!0);an.UONE=J2;var Yh=va(-1);an.NEG_ONE=Yh;var Q2=on(-1,2147483647,!1);an.MAX_VALUE=Q2;var ex=on(-1,-1,!0);an.MAX_UNSIGNED_VALUE=ex;var fr=on(0,-2147483648,!1);an.MIN_VALUE=fr;var Ue=an.prototype;Ue.toInt=function(){return this.unsigned?this.low>>>0:this.low};Ue.toNumber=function(){return this.unsigned?(this.high>>>0)*mo+(this.low>>>0):this.high*mo+(this.low>>>0)};Ue.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(fr)){var t=Vr(e),r=this.div(t),i=r.mul(t).sub(this);return r.toString(e)+i.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var s=Vr(Ul(e,6),this.unsigned),a=this,o="";;){var c=a.div(s),l=a.sub(c.mul(s)).toInt()>>>0,u=l.toString(e);if(a=c,a.isZero())return u+o;for(;u.length<6;)u="0"+u;o=""+u+o}};Ue.getHighBits=function(){return this.high};Ue.getHighBitsUnsigned=function(){return this.high>>>0};Ue.getLowBits=function(){return this.low};Ue.getLowBitsUnsigned=function(){return this.low>>>0};Ue.getNumBitsAbs=function(){if(this.isNegative())return this.eq(fr)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return this.high!=0?t+33:t+1};Ue.isZero=function(){return this.high===0&&this.low===0};Ue.eqz=Ue.isZero;Ue.isNegative=function(){return!this.unsigned&&this.high<0};Ue.isPositive=function(){return this.unsigned||this.high>=0};Ue.isOdd=function(){return(this.low&1)===1};Ue.isEven=function(){return(this.low&1)===0};Ue.equals=function(e){return gr(e)||(e=oi(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};Ue.eq=Ue.equals;Ue.notEquals=function(e){return!this.eq(e)};Ue.neq=Ue.notEquals;Ue.ne=Ue.notEquals;Ue.lessThan=function(e){return this.comp(e)<0};Ue.lt=Ue.lessThan;Ue.lessThanOrEqual=function(e){return this.comp(e)<=0};Ue.lte=Ue.lessThanOrEqual;Ue.le=Ue.lessThanOrEqual;Ue.greaterThan=function(e){return this.comp(e)>0};Ue.gt=Ue.greaterThan;Ue.greaterThanOrEqual=function(e){return this.comp(e)>=0};Ue.gte=Ue.greaterThanOrEqual;Ue.ge=Ue.greaterThanOrEqual;Ue.compare=function(e){if(gr(e)||(e=oi(e)),this.eq(e))return 0;var t=this.isNegative(),r=e.isNegative();return t&&!r?-1:!t&&r?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};Ue.comp=Ue.compare;Ue.negate=function(){return!this.unsigned&&this.eq(fr)?fr:this.not().add(Qa)};Ue.neg=Ue.negate;Ue.add=function(e){gr(e)||(e=oi(e));var t=this.high>>>16,r=this.high&65535,i=this.low>>>16,s=this.low&65535,a=e.high>>>16,o=e.high&65535,c=e.low>>>16,l=e.low&65535,u=0,h=0,d=0,f=0;return f+=s+l,d+=f>>>16,f&=65535,d+=i+c,h+=d>>>16,d&=65535,h+=r+o,u+=h>>>16,h&=65535,u+=t+a,u&=65535,on(d<<16|f,u<<16|h,this.unsigned)};Ue.subtract=function(e){return gr(e)||(e=oi(e)),this.add(e.neg())};Ue.sub=Ue.subtract;Ue.multiply=function(e){if(this.isZero())return zr;if(gr(e)||(e=oi(e)),Br){var t=Br.mul(this.low,this.high,e.low,e.high);return on(t,Br.get_high(),this.unsigned)}if(e.isZero())return zr;if(this.eq(fr))return e.isOdd()?fr:zr;if(e.eq(fr))return this.isOdd()?fr:zr;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(um)&&e.lt(um))return Vr(this.toNumber()*e.toNumber(),this.unsigned);var r=this.high>>>16,i=this.high&65535,s=this.low>>>16,a=this.low&65535,o=e.high>>>16,c=e.high&65535,l=e.low>>>16,u=e.low&65535,h=0,d=0,f=0,p=0;return p+=a*u,f+=p>>>16,p&=65535,f+=s*u,d+=f>>>16,f&=65535,f+=a*l,d+=f>>>16,f&=65535,d+=i*u,h+=d>>>16,d&=65535,d+=s*l,h+=d>>>16,d&=65535,d+=a*c,h+=d>>>16,d&=65535,h+=r*u+i*l+s*c+a*o,h&=65535,on(f<<16|p,h<<16|d,this.unsigned)};Ue.mul=Ue.multiply;Ue.divide=function(e){if(gr(e)||(e=oi(e)),e.isZero())throw Error("division by zero");if(Br){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var t=(this.unsigned?Br.div_u:Br.div_s)(this.low,this.high,e.low,e.high);return on(t,Br.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Js:zr;var r,i,s;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return Js;if(e.gt(this.shru(1)))return J2;s=Js}else{if(this.eq(fr)){if(e.eq(Qa)||e.eq(Yh))return fr;if(e.eq(fr))return Qa;var a=this.shr(1);return r=a.div(e).shl(1),r.eq(zr)?e.isNegative()?Qa:Yh:(i=this.sub(e.mul(r)),s=r.add(i.div(e)),s)}else if(e.eq(fr))return this.unsigned?Js:zr;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=zr}for(i=this;i.gte(e);){r=Math.max(1,Math.floor(i.toNumber()/e.toNumber()));for(var o=Math.ceil(Math.log(r)/Math.LN2),c=o<=48?1:Ul(2,o-48),l=Vr(r),u=l.mul(e);u.isNegative()||u.gt(i);)r-=c,l=Vr(r,this.unsigned),u=l.mul(e);l.isZero()&&(l=Qa),s=s.add(l),i=i.sub(u)}return s};Ue.div=Ue.divide;Ue.modulo=function(e){if(gr(e)||(e=oi(e)),Br){var t=(this.unsigned?Br.rem_u:Br.rem_s)(this.low,this.high,e.low,e.high);return on(t,Br.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};Ue.mod=Ue.modulo;Ue.rem=Ue.modulo;Ue.not=function(){return on(~this.low,~this.high,this.unsigned)};Ue.and=function(e){return gr(e)||(e=oi(e)),on(this.low&e.low,this.high&e.high,this.unsigned)};Ue.or=function(e){return gr(e)||(e=oi(e)),on(this.low|e.low,this.high|e.high,this.unsigned)};Ue.xor=function(e){return gr(e)||(e=oi(e)),on(this.low^e.low,this.high^e.high,this.unsigned)};Ue.shiftLeft=function(e){return gr(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?on(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):on(0,this.low<<e-32,this.unsigned)};Ue.shl=Ue.shiftLeft;Ue.shiftRight=function(e){return gr(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?on(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):on(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};Ue.shr=Ue.shiftRight;Ue.shiftRightUnsigned=function(e){if(gr(e)&&(e=e.toInt()),e&=63,e===0)return this;var t=this.high;if(e<32){var r=this.low;return on(r>>>e|t<<32-e,t>>>e,this.unsigned)}else return e===32?on(t,0,this.unsigned):on(t>>>e-32,0,this.unsigned)};Ue.shru=Ue.shiftRightUnsigned;Ue.shr_u=Ue.shiftRightUnsigned;Ue.toSigned=function(){return this.unsigned?on(this.low,this.high,!1):this};Ue.toUnsigned=function(){return this.unsigned?this:on(this.low,this.high,!0)};Ue.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};Ue.toBytesLE=function(){var e=this.high,t=this.low;return[t&255,t>>>8&255,t>>>16&255,t>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};Ue.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,t>>>24,t>>>16&255,t>>>8&255,t&255]};an.fromBytes=function(e,t,r){return r?an.fromBytesLE(e,t):an.fromBytesBE(e,t)};an.fromBytesLE=function(e,t){return new an(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)};an.fromBytesBE=function(e,t){return new an(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};const tx=nT(Y2),kT=P3({__proto__:null,default:tx},[Y2]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xs=tx||kT;function uu(n){return Xs.fromString(n,!0,16)}const nx=uu("c3a5c85c97cb3127"),Gs=uu("b492b66fbe98f273"),jn=uu("9ae16a3b2f90404f");function Zh(n){return n.xor(n.shru(47))}function rx(n,e,t){const r=n.slice(e,e+t);return Xs.fromBytes(Array.from(r),!0,!0)}function tn(n,e){return rx(n,e,8)}function hm(n,e){return rx(n,e,4)}function wn(n,e){return e===0?n:n.shru(e).or(n.shl(64-e))}function ds(n,e,t=uu("9ddfea08eb382d69")){let r=n.xor(e).mul(t);r=r.xor(r.shru(47));let i=e.xor(r).mul(t);return i=i.xor(i.shru(47)),i=i.mul(t),i}function FT(n,e,t,r,i,s){i=i.add(n),s=wn(s.add(i).add(r),21);const a=i;return i=i.add(e),i=i.add(t),s=s.add(wn(i,44)),[i.add(r),s.add(a)]}function ul(n,e,t,r){return FT(tn(n,e),tn(n,e+8),tn(n,e+16),tn(n,e+24),t,r)}function UT(n,e=n.length){if(e>=8){const t=jn.add(e*2),r=tn(n,0).add(jn),i=tn(n,e-8),s=wn(i,37).mul(t).add(r),a=wn(r,25).add(i).mul(t);return ds(s,a,t)}if(e>=4){const t=jn.add(e*2),r=hm(n,0);return ds(r.shl(3).add(e),hm(n,e-4),t)}if(e>0){const t=n[0],r=n[e>>1],i=n[e-1],s=t+(r<<8),a=e+(i<<2);return Zh(jn.mul(s).xor(nx.mul(a))).mul(jn)}return jn}function BT(n,e=n.length){const t=jn.add(e*2),r=tn(n,0).mul(Gs),i=tn(n,8),s=tn(n,e-8).mul(t),a=tn(n,e-16).mul(jn);return ds(wn(r.add(i),43).add(wn(s,30)).add(a),r.add(wn(i.add(jn),18)).add(s),t)}function VT(n,e=n.length){const t=jn.add(e*2),r=tn(n,0).mul(jn),i=tn(n,8),s=tn(n,e-8).mul(t),a=tn(n,e-16).mul(jn),o=wn(r.add(i),43).add(wn(s,30)).add(a),c=ds(o,r.add(wn(i.add(jn),18)).add(s),t),l=tn(n,16).mul(t),u=tn(n,24),h=o.add(tn(n,e-32)).mul(t),d=c.add(tn(n,e-24)).mul(t);return ds(wn(l.add(u),43).add(wn(h,30)).add(d),l.add(wn(u.add(r),18)).add(h),t)}function zT(n,e=n.length){const t=Xs.fromNumber(81,!0);if(e<=32)return e<=16?UT(n,e):BT(n,e);if(e<=64)return VT(n,e);let r=t,i=t.mul(Gs).add(113),s=Zh(i.mul(jn).add(113)).mul(jn),a=[Xs.UZERO,Xs.UZERO],o=[Xs.UZERO,Xs.UZERO];r=r.mul(jn).add(tn(n,0));let c=0;const l=(e-1>>6)*64,u=l+(e-1&63)-63;do r=wn(r.add(i).add(a[0]).add(tn(n,c+8)),37).mul(Gs),i=wn(i.add(a[1]).add(tn(n,c+48)),42).mul(Gs),r=r.xor(o[1]),i=i.add(a[0]).add(tn(n,c+40)),s=wn(s.add(o[0]),33).mul(Gs),a=ul(n,c,a[1].mul(Gs),r.add(o[0])),o=ul(n,c+32,s.add(o[1]),i.add(tn(n,c+16))),[s,r]=[r,s],c+=64;while(c!==l);const h=Gs.add(s.and(255).shl(1));return c=u,o[0]=o[0].add(e-1&63),a[0]=a[0].add(o[0]),o[0]=o[0].add(a[0]),r=wn(r.add(i).add(a[0]).add(tn(n,c+8)),37).mul(h),i=wn(i.add(a[1]).add(tn(n,c+48)),42).mul(h),r=r.xor(o[1].mul(9)),i=i.add(a[0].mul(9).add(tn(n,c+40))),s=wn(s.add(o[0]),33).mul(h),a=ul(n,c,a[1].mul(h),r.add(o[0])),o=ul(n,c+32,s.add(o[1]),i.add(tn(n,c+16))),[s,r]=[r,s],ds(ds(a[0],o[0],h).add(Zh(i).mul(nx)).add(s),ds(a[1],o[1],h).add(r),h)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Co(n,e){return e==="string"?na(n):hu([n],e)}function GT(n,e){return n instanceof Float32Array&&e==="float32"||n instanceof Int32Array&&e==="int32"||n instanceof Uint8Array&&e==="bool"}function hu(n,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=oa(n)),te().getBool("DEBUG")&&hT(n,e),GT(n,e))return n;if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool"){const t=new Uint8Array(n.length);for(let r=0;r<t.length;++r)Math.round(n[r])!==0&&(t[r]=1);return t}else throw new Error(`Unknown data type ${e}`)}function Qr(){return te().platform.now()}function na(n,e="utf-8"){return e=e||"utf-8",te().platform.encode(n,e)}function go(n,e="utf-8"){return e=e||"utf-8",te().platform.decode(n,e)}function Wr(n){return te().platform.isTypedArray!=null?te().platform.isTypedArray(n):K2(n)}function oa(n,e=[],t=!1){if(e==null&&(e=[]),typeof n=="boolean"||typeof n=="number"||typeof n=="string"||aa(n)||n==null||Wr(n)&&t)e.push(n);else if(Array.isArray(n)||Wr(n))for(let r=0;r<n.length;++r)oa(n[r],e,t);else{let r=-1;for(const i of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(i)&&(r=Math.max(r,Number(i)));for(let i=0;i<=r;i++)oa(n[i],e,t)}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WT{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new XT)}profileKernel(e,t,r){let i;const s=()=>{i=r()};let a;const o=Qr();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(const l of i)l.dataSync();a=Promise.resolve({kernelMs:Qr()-o})}if(te().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<i.length;l++){const u=i[l];u.data().then(h=>{HT(h,u.dtype,e)})}return{kernelName:e,outputs:i,inputs:t,timeMs:a.then(l=>l.kernelMs),extraInfo:a.then(l=>l.getExtraProfileInfo!=null?l.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:r,timeMs:i,inputs:s,extraInfo:a}=e;r.forEach(o=>{Promise.all([o.data(),i,a]).then(c=>{this.logger.logKernelProfile(t,o,c[0],c[1],s,c[2])})})}}function HT(n,e,t){if(e!=="float32")return!1;for(let r=0;r<n.length;r++){const i=n[r];if(isNaN(i)||!isFinite(i))return console.warn(`Found ${i} in the result of '${t}'`),!0}return!1}class XT{logKernelProfile(e,t,r,i,s,a){const o=typeof i=="number"?ro(`${i}ms`,9):i.error,c=ro(e,25),l=t.rank,u=t.size,h=ro(t.shape.toString(),14);let d="";for(const f in s){const p=s[f];if(p!=null){const x=p.shape||t.shape,g=x.length;d+=`${f}: ${g}D ${g>0?x:""} `}}console.log(`%c${c}	%c${o}	%c${l}D ${h}	%c${u}	%c${d}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jT(n,e,t){const r={},i={};for(let c=0;c<e.length;c++)r[e[c].id]=!0;for(let c=0;c<n.length;c++){const l=n[c],u=l.inputs;for(const h in u){const d=u[h];let f=!1;for(let p=0;p<e.length;p++)if(r[d.id]){l.outputs.forEach(x=>r[x.id]=!0),f=!0,i[l.id]=!0;break}if(f)break}}const s={};s[t.id]=!0;const a={};for(let c=n.length-1;c>=0;c--){const l=n[c],u=l.inputs;for(let h=0;h<l.outputs.length;h++)if(s[l.outputs[h].id]){for(const d in u)s[u[d].id]=!0,a[l.id]=!0;break}}const o=[];for(let c=0;c<n.length;c++){const l=n[c];if(i[l.id]&&a[l.id]){const u={};for(const d in l.inputs){const f=l.inputs[d];r[f.id]&&(u[d]=f)}const h=Object.assign({},l);h.inputs=u,h.outputs=l.outputs,o.push(h)}}return o}function qT(n,e,t,r){for(let i=e.length-1;i>=0;i--){const s=e[i],a=[];if(s.outputs.forEach(c=>{const l=n[c.id];l!=null?a.push(l):a.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(a);for(const c in s.inputs){if(!(c in o))throw new Error(`Cannot backprop through input ${c}. Available gradients found: ${Object.keys(o)}.`);const l=t(()=>o[c]());if(l.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${c} must have 'float32' dtype, but has '${l.dtype}'`);const u=s.inputs[c];if(!fn(l.shape,u.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${c}' has shape '${l.shape}', which does not match the shape of the input '${u.shape}'`);if(n[u.id]==null)n[u.id]=l;else{const h=n[u.id];n[u.id]=r(h,l),h.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dm=20,Qo=3,hh=7;function KT(n,e,t,r){const i=Pn(e),s=YT(n,e,t,i),a=e.length,o=wl(n,e,t,i,s),c=["Tensor"];return r&&(c.push(`  dtype: ${t}`),c.push(`  rank: ${a}`),c.push(`  shape: [${e}]`),c.push("  values:")),c.push(o.map(l=>"    "+l).join(`
`)),c.join(`
`)}function YT(n,e,t,r){const i=Ae(e),s=r[r.length-1],a=new Array(s).fill(0),o=e.length,c=t==="complex64"?rc(n):n;if(o>1)for(let l=0;l<i/s;l++){const u=l*s;for(let h=0;h<s;h++)a[h]=Math.max(a[h],nc(c[u+h],0,t).length)}return a}function nc(n,e,t){let r;return Array.isArray(n)?r=`${parseFloat(n[0].toFixed(hh))} + ${parseFloat(n[1].toFixed(hh))}j`:lu(n)?r=`'${n}'`:t==="bool"?r=ix(n):r=parseFloat(n.toFixed(hh)).toString(),ro(r,e)}function ix(n){return n===0?"false":"true"}function wl(n,e,t,r,i,s=!0){const a=t==="complex64"?2:1,o=e[0],c=e.length;if(c===0){if(t==="complex64"){const x=rc(n);return[nc(x[0],0,t)]}return t==="bool"?[ix(n[0])]:[n[0].toString()]}if(c===1){if(o>dm){const g=Qo*a;let m=Array.from(n.slice(0,g)),_=Array.from(n.slice((o-Qo)*a,o*a));return t==="complex64"&&(m=rc(m),_=rc(_)),["["+m.map((b,w)=>nc(b,i[w],t)).join(", ")+", ..., "+_.map((b,w)=>nc(b,i[o-Qo+w],t)).join(", ")+"]"]}return["["+(t==="complex64"?rc(n):Array.from(n)).map((g,m)=>nc(g,i[m],t)).join(", ")+"]"]}const l=e.slice(1),u=r.slice(1),h=r[0]*a,d=[];if(o>dm){for(let x=0;x<Qo;x++){const g=x*h,m=g+h;d.push(...wl(n.slice(g,m),l,t,u,i,!1))}d.push("...");for(let x=o-Qo;x<o;x++){const g=x*h,m=g+h;d.push(...wl(n.slice(g,m),l,t,u,i,x===o-1))}}else for(let x=0;x<o;x++){const g=x*h,m=g+h;d.push(...wl(n.slice(g,m),l,t,u,i,x===o-1))}const f=c===2?",":"";d[0]="["+(o>0?d[0]+f:"");for(let x=1;x<d.length-1;x++)d[x]=" "+d[x]+f;let p=`,
`;for(let x=2;x<c;x++)p+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(s?"":p),d}function rc(n){const e=[];for(let t=0;t<n.length;t+=2)e.push([n[t],n[t+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xo{constructor(e,t,r){if(this.dtype=t,this.shape=e.slice(),this.size=Ae(e),r!=null){const i=r.length;k(i===this.size,()=>`Length of values '${i}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=r||En(t,this.size),this.strides=Pn(e)}set(e,...t){t.length===0&&(t=[0]),k(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const r=this.locToIndex(t);this.values[r]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(const i of e){if(i<0||i>=this.shape[t]){const s=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(s)}t++}let r=e[e.length-1];for(let i=0;i<e.length-1;++i)r+=this.strides[i]*e[i];return this.values[r]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let r=0;r<e.length-1;++r)t+=this.strides[r]*e[r];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const t=new Array(this.shape.length);for(let r=0;r<t.length-1;++r)t[r]=Math.floor(e/this.strides[r]),e-=t[r]*this.strides[r];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return ei().makeTensor(this.values,this.shape,this.dtype)}}let ei=null,Ka=null;function ZT(n){ei=n}function JT(n){Ka=n}class mn{constructor(e,t,r,i){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=Ae(e),this.strides=Pn(e),this.dataId=r,this.id=i,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Ka.buffer(this.shape,this.dtype,e)}bufferSync(){return Ka.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Gh(this.shape,e,this.dtype==="complex64")}arraySync(){return Gh(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=ei().read(this.dataId);if(this.dtype==="string"){const t=await e;try{return t.map(r=>go(r))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),ei().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=ei().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>go(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await ei().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),ei().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Ka.print(this,e)}clone(){return this.throwIfDisposed(),Ka.clone(this)}toString(e=!1){const t=this.dataSync();return KT(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Ka.cast(this,e)}variable(e=!0,t,r){return this.throwIfDisposed(),ei().makeVariable(this,e,t,r)}}Object.defineProperty(mn,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function sx(){return Bd("Tensor",()=>mn)}sx();class Bl extends mn{constructor(e,t,r,i){super(e.shape,e.dtype,e.dataId,i),this.trainable=t,this.name=r}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!fn(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);ei().disposeTensor(this),this.dataId=e.dataId,ei().incRef(this,null)}dispose(){ei().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Bl,Symbol.hasInstance,{value:n=>n instanceof mn&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var fm;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(fm||(fm={}));var Jh;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(Jh||(Jh={}));var Qh;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(Qh||(Qh={}));var ed;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(ed||(ed={}));var td;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(td||(td={}));const QT={float32:ed,int32:Jh,bool:Qh,complex64:td};function Si(n,e){if(n==="string"||e==="string"){if(n==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${n} with ${e}`)}return QT[n][e]}function Xd(n){return Si(n,"int32")}function ax(n){return n!=null&&typeof n=="object"&&"texture"in n&&n.texture instanceof WebGLTexture}function ox(n){return typeof GPUBuffer<"u"&&n!=null&&typeof n=="object"&&"buffer"in n&&n.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gn(n,e){if(n.dtype===e.dtype)return[n,e];const t=Si(n.dtype,e.dtype);return[n.cast(t),e.cast(t)]}function eC(n,e){k(n.dtype===e.dtype,()=>`The dtypes of the first(${n.dtype}) and second(${e.dtype}) input must match`)}function cx(n){const e=[];return lx(n,e,new Set),e}function lx(n,e,t){if(n==null)return;if(n instanceof mn){e.push(n);return}if(!tC(n))return;const r=n;for(const i in r){const s=r[i];t.has(s)||(t.add(s),lx(s,e,t))}}function tC(n){return Array.isArray(n)||typeof n=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dh(n){return n.kernelName!=null}class pm{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class yo{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new pm}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const r=e[t];if(await this.initializeBackend(r).success){await this.setBackend(r);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,r=1){return e in this.registryFactory?(ri(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:r},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:t,asyncInit:r}=this.initializeBackend(e);if(!(r?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new WT(this.backendInstance),!0}setupRegisteredKernels(){sm(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){sm(e).forEach(r=>{r.disposeFunc!=null&&r.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const r=t.factory();if(r&&!(r instanceof e1)&&typeof r.then=="function"){const i=++this.pendingBackendInitId,s=r.then(a=>i<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(i<this.pendingBackendInitId||(this.pendingBackendInit=null,ri(`Initialization of backend ${e} failed`),ri(a.stack||a.message)),!1));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}else return this.registry[e]=r,{success:!0,asyncInit:!1}}catch(r){return ri(`Initialization of backend ${e} failed`),ri(r.stack||r.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const r=e[t],{success:i,asyncInit:s}=this.initializeBackend(r);if(s||i)return{name:r,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const r=this.state.tensorInfo.get(t),i=r.backend,s=this.readSync(t),a=i.refCount(t);i.disposeData(t,!0),r.backend=e,e.move(t,s,r.shape,r.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let r=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}let i;return this.scopedRun(()=>this.startScope(r),()=>this.endScope(i),()=>(i=t(),i instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),i))}scopedRun(e,t,r){e();try{const i=r();return t(),i}catch(i){throw t(),i}}nextTensorId(){return yo.nextTensorId++}nextVariableId(){return yo.nextVariableId++}clone(e){const t=q.runKernel(Gd,{x:e}),r={x:e},i=a=>({x:()=>{const o="float32",c={x:a},l={dtype:o};return q.runKernel(zd,c,l)}}),s=[];return this.addTapeNode(this.state.activeScope.name,r,[t],i,s,{}),t}runKernel(e,t,r){if(this.backendName==null&&this.backend,!(Kh(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:r})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,r){const i=this.backend.numDataIds();let s=0;r.forEach(c=>{s+=c.dtype==="complex64"?3:1});const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=i-t-s-a;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,r=[];const i=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let o;this.backendName==null&&this.backend;let c;const l=dh(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(dh(e)){const{kernelName:p,inputs:x,attrs:g}=e;this.backendName==null&&this.backend;const m=Kh(p,this.backendName);k(m!=null,()=>`Cannot find registered kernel '${p}' for backend '${this.backendName}'`),o=()=>{const _=this.backend.numDataIds();c=m.kernelFunc({inputs:x,attrs:g,backend:this.backend});const b=Array.isArray(c)?c:[c];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(p,_,b);const w=b.map(I=>I.rank!=null?I:this.makeTensorFromTensorInfo(I));if(i){const I=this.getTensorsForGradient(p,x,w);r=this.saveTensorsForBackwardMode(I)}return w}}else{const{forwardFunc:p}=e,x=g=>{i&&(r=g.map(m=>this.keep(this.clone(m))))};o=()=>{const g=this.backend.numDataIds();c=this.tidy(()=>p(this.backend,x));const m=Array.isArray(c)?c:[c];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,g,m),m}}const{inputs:u,attrs:h}=e,d=dh(e)?null:e.backwardsFunc;let f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=o():(f=this.profiler.profileKernel(l,u,()=>o()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs)}),i&&this.addTapeNode(l,u,t,d,r,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(p=>u[p]!=null?u[p].shape:null),outputShapes:t.map(p=>p.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(c)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(r=>this.keep(this.clone(r)))}getTensorsForGradient(e,t,r){const i=im(e);if(i!=null){const s=i.inputsToSave||[],a=i.outputsToSave||[];let o;i.saveAllInputs?(k(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(t).map(l=>t[l])):o=s.map(l=>t[l]);const c=r.filter((l,u)=>a[u]);return o.concat(c)}return[]}makeTensor(e,t,r,i){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");r=r||"float32",i=i||this.backend;let s=e;r==="string"&&lu(e[0])&&(s=e.map(c=>na(c)));const a=i.write(s,t,r),o=new mn(t,r,a,this.nextTensorId());if(this.trackTensor(o,i),r==="string"){const c=this.state.tensorInfo.get(a),l=pT(s);this.state.numBytes+=l-c.bytes,c.bytes=l}return o}makeTensorFromDataId(e,t,r,i){r=r||"float32";const s={dataId:e,shape:t,dtype:r};return this.makeTensorFromTensorInfo(s,i)}makeTensorFromTensorInfo(e,t){const{dataId:r,shape:i,dtype:s}=e,a=new mn(i,s,r,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,r,i){r=r||this.nextVariableId().toString(),i!=null&&i!==e.dtype&&(e=e.cast(i));const s=new Bl(e,t,r,this.nextTensorId());if(this.state.registeredVariables[s.name]!=null)throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let r=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(r=e.size*kl(e.dtype)),this.state.numBytes+=r,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:r})),e instanceof Bl||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const r=e.size*kl(e.dtype);this.state.numBytes-=r}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,r=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(i=>i.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-r;for(const i of this.state.activeProfile.kernels)i.kernelTimeMs=await i.kernelTimeMs,i.extraInfo=await i.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,r,i,s,a){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:r,saved:s},c=im(e);c!=null&&(i=c.gradFunc),i!=null&&(o.gradient=l=>(l=l.map((u,h)=>{if(u==null){const d=r[h],f=_s(d.size,d.dtype);return this.makeTensor(f,d.shape,d.dtype)}return u}),i(l.length>1?l:l[0],s,a))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=cx(e),r=new Set(t.map(s=>s.id));for(let s=0;s<this.state.activeScope.track.length;s++){const a=this.state.activeScope.track[s];!a.kept&&!r.has(a.id)&&a.dispose()}const i=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(s=>{!s.kept&&s.scopeId===i.id&&this.track(s)})}gradients(e,t,r,i=!1){if(k(t.length>0,()=>"gradients() received an empty list of xs."),r!=null&&r.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${r.dtype}'`);const s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));k(s instanceof mn,()=>"The result y returned by f() must be a tensor.");const a=jT(this.state.activeTape,t,s);if(!i&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const o={};o[s.id]=r??nC(s.shape),qT(o,a,l=>this.tidy(l),rC);const c=t.map(l=>o[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(const u of l.saved)u.dispose()}),this.state.activeTape=null),{value:s,grads:c}})}customGrad(e){return k(Vh(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{k(t.every(o=>o instanceof mn),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let r;const i={};t.forEach((o,c)=>{i[c]=o});const s=(o,c)=>(r=e(...t,c),k(r.value instanceof mn,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),k(Vh(r.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),r.value),a=(o,c)=>{const l=r.gradFunc(o,c),u=Array.isArray(l)?l:[l];k(u.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),k(u.every(d=>d instanceof mn),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const h={};return u.forEach((d,f)=>{h[f]=()=>d}),h};return this.runKernelFunc({forwardFunc:s,backwardsFunc:a,inputs:i})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Qr(),r=await this.backend.time(e);return r.wallMs=Qr()-t,r}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new pm;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}yo.nextTensorId=0;yo.nextVariableId=0;function nC(n){const e=n1(Ae(n),"float32");return q.makeTensor(e,n,"float32")}function ux(){const n=i1();if(n._tfengine==null){const e=new xT(n);n._tfengine=new yo(e)}return bT(n._tfengine.ENV),ZT(()=>n._tfengine),n._tfengine}const q=ux();function rC(n,e){const t={a:n,b:e};return q.runKernel(Vd,t)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iC(){return typeof navigator<"u"&&navigator!=null}function hx(n){if(n||iC()){if(n||(n=navigator),n.product==="ReactNative")return!0;const e=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!e){const t=n;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function dx(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nr=te();nr.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});nr.registerFlag("IS_BROWSER",()=>dx());nr.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");nr.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));nr.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));nr.registerFlag("PROD",()=>!1);nr.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>nr.getBool("DEBUG"));nr.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);nr.registerFlag("IS_TEST",()=>!1);nr.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>nr.getBool("DEBUG"));nr.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);nr.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);nr.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cs(n,e){let t=n;if(Wr(n))return e==="string"?[]:[n.length];if(ax(n)){const i=n.channels||"RGBA";return[n.height,n.width*i.length]}else if(ox(n))return[n.buffer.size/(e==null?4:kl(e))];if(!Array.isArray(n))return[];const r=[];for(;Array.isArray(t)||Wr(t)&&e!=="string";)r.push(t.length),t=t[0];return Array.isArray(n)&&te().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&fx(n,r,[]),r}function fx(n,e,t){if(t=t||[],!Array.isArray(n)&&!Wr(n)){k(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}k(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${n.length} elements`),k(n.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${n.length} elements`);const r=e.slice(1);for(let i=0;i<n.length;++i)fx(n[i],r,t.concat(i))}function mm(n,e,t,r){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==e||n==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${r}' must be ${n} tensor, but got ${e} tensor`)}}function $(n,e,t,r="numeric"){if(n instanceof sx())return mm(r,n.dtype,e,t),n;let i=Ac(n);if(i!=="string"&&["bool","int32","float32"].indexOf(r)>=0&&(i=r),mm(r,i,e,t),n==null||!Wr(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const c=n==null?"null":n.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${c}'`)}const s=Cs(n,i);!Wr(n)&&!Array.isArray(n)&&(n=[n]);const o=i!=="string"?hu(n,i):oa(n,[],!0);return q.makeTensor(o,s,i)}function Vl(n,e,t,r="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((s,a)=>$(s,`${e}[${a}]`,t,r))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const px="__op";function H(n){const e=Object.keys(n);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0];const r=n[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+px;const i=(...s)=>{q.startScope(t);try{const a=r(...s);return aa(a)&&console.error("Cannot return a Promise inside of tidy."),q.endScope(a),a}catch(a){throw q.endScope(null),a}};return Object.defineProperty(i,"name",{value:t,configurable:!0}),i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sC(n,e){const t=$(n,"real","complex"),r=$(e,"imag","complex");Tr(t.shape,r.shape,`real and imag shapes, ${t.shape} and ${r.shape}, must match in call to tf.complex().`);const i={real:t,imag:r};return q.runKernel(A1,i)}const bs=H({complex_:sC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function As(n,e,t,r){if(r==null)r=Ac(n);else if(r==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(ox(n)||ax(n)){if(r!=="float32"&&r!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return q.backend.createTensorFromGPUData(n,e||t,r)}if(!Wr(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){Cr(e);const i=Ae(e),s=Ae(t);k(i===s,()=>`Based on the provided shape, [${e}], the tensor should have ${i} values but has ${s}`);for(let a=0;a<t.length;++a){const o=t[a],c=a===t.length-1?o!==Ae(e.slice(a)):!0;k(t[a]===e[a]||!c,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!Wr(n)&&!Array.isArray(n)&&(n=[n]),e=e||t,n=r!=="string"?hu(n,r):oa(n,[],!0),q.makeTensor(n,e,r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _i(n,e,t){const r=Cs(n,t);return As(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ca={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class ci{static join(e){return new ci(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,e==null||(e instanceof Array||(e=[e]),e=e.map(r=>Wr(r)?r.buffer:r),e.length===0))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let r=0;r<e.length;r++){const i=e[r];r!==e.length-1&&i.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const s=t+i.byteLength;this.shards.push({buffer:i,start:t,end:s}),t=s}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const r=this.findShardForByte(e);if(r===-1)throw new Error(`Could not find start shard for byte ${e}`);const i=t-e,s=new ArrayBuffer(i),a=new Uint8Array(s);let o=0;for(let c=r;c<this.shards.length;c++){const l=this.shards[c],h=e+o-l.start,d=o,p=Math.min(t,l.end)-l.start,x=new Uint8Array(l.buffer,h,p-h);if(a.set(x,d),o+=x.length,t<l.end)break}return s}findShardForByte(e){if(this.shards.length===0||e<0||e>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(i){return e<i.start?-1:e>=i.end?1:0}if(t(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const r=aC(this.shards,t);return r===-1?-1:(this.previousShardIndex=r,this.previousShardIndex)}}function aC(n,e){let t=0,r=n.length;for(;t<=r;){const i=Math.floor((r-t)/2)+t,s=e(n[i]);if(s===0)return i;s<0?r=i:t=i+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rs(){return q}function Ct(n,e){return q.tidy(n,e)}function dn(n){cx(n).forEach(t=>t.dispose())}function gi(n){return q.keep(n)}function oC(){return q.backendName}function cC(n,e,t=1){return q.registerBackend(n,e,t)}function lC(){return q.backend}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ss=4;async function uC(n,e){const t=[],r=[],i=Array.isArray(n)?n.map(a=>a.name):Object.keys(n);for(let a=0;a<i.length;++a){const o=i[a],c=Array.isArray(n)?n[a].tensor:n[o];if(c.dtype!=="float32"&&c.dtype!=="int32"&&c.dtype!=="bool"&&c.dtype!=="string"&&c.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${o}': ${c.dtype}`);const l={name:o,shape:c.shape,dtype:c.dtype};if(c.dtype==="string"){const u=new Promise(async h=>{const d=await c.bytes(),f=d.reduce((g,m)=>g+m.length,0)+Ss*d.length,p=new Uint8Array(f);let x=0;for(let g=0;g<d.length;g++){const m=d[g],_=new Uint8Array(new Uint32Array([m.length]).buffer);p.set(_,x),x+=Ss,p.set(m,x),x+=m.length}h(p)});r.push(u)}else r.push(c.data());e!=null&&(l.group=e),t.push(l)}const s=await Promise.all(r);return{data:fC(s),specs:t}}function mx(n,e){const t=new ci(n),r={};let i=0;for(const s of e){const a=hC(s,(o,c)=>t.slice(i+o,i+c));r[s.name]=gx(s,t.slice(i,i+a)),i+=a}return r}function hC(n,e){const t=Ae(n.shape);let r;if("quantization"in n){const i=n.quantization;r=ca[i.dtype]}else if(n.dtype==="string"){let i=0;for(let s=0;s<t;s++)i+=Ss+new Uint32Array(e(i,i+Ss))[0];return i}else r=ca[n.dtype];return t*r}async function dC(n,e){const t=Ae(n.shape);let r;if("quantization"in n){const i=n.quantization;r=ca[i.dtype]}else if(n.dtype==="string"){let i=0;for(let s=0;s<t;s++)i+=Ss+new Uint32Array(await e(i,i+Ss))[0];return i}else r=ca[n.dtype];return t*r}function gx(n,e){const t=n.name,r=n.dtype,i=n.shape,s=Ae(i);let a,o=0;if("quantization"in n){const c=n.quantization;if(c.dtype==="uint8"||c.dtype==="uint16"){if(!("min"in c&&"scale"in c))throw new Error(`Weight ${n.name} with quantization ${c.dtype} doesn't have corresponding metadata min and scale.`)}else if(c.dtype==="float16"){if(r!=="float32")throw new Error(`Weight ${n.name} is quantized with ${c.dtype} which only supports weights of type float32 not ${r}.`)}else throw new Error(`Weight ${n.name} has unknown quantization dtype ${c.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const l=ca[c.dtype],u=c.dtype==="uint8"?new Uint8Array(e):new Uint16Array(e);if(r==="float32")if(c.dtype==="uint8"||c.dtype==="uint16"){a=new Float32Array(u.length);for(let h=0;h<u.length;h++){const d=u[h];a[h]=d*c.scale+c.min}}else if(c.dtype==="float16")a=_C()(u);else throw new Error(`Unsupported quantization type ${c.dtype} for weight type float32.`);else if(r==="int32"){if(c.dtype!=="uint8"&&c.dtype!=="uint16")throw new Error(`Unsupported quantization type ${c.dtype} for weight type int32.`);a=new Int32Array(u.length);for(let h=0;h<u.length;h++){const d=u[h];a[h]=Math.round(d*c.scale+c.min)}}else throw new Error(`Unsupported dtype in weight '${t}': ${r}`);o+=s*l}else if(r==="string"){const c=Ae(n.shape);a=[];for(let l=0;l<c;l++){const u=new Uint32Array(e.slice(o,o+Ss))[0];o+=Ss;const h=new Uint8Array(e.slice(o,o+u));a.push(h),o+=u}}else{const c=ca[r];if(r==="float32")a=new Float32Array(e);else if(r==="int32")a=new Int32Array(e);else if(r==="bool")a=new Uint8Array(e);else if(r==="complex64"){a=new Float32Array(e);const l=new Float32Array(a.length/2),u=new Float32Array(a.length/2);for(let p=0;p<l.length;p++)l[p]=a[p*2],u[p]=a[p*2+1];const h=_i(l,i,"float32"),d=_i(u,i,"float32"),f=bs(h,d);return h.dispose(),d.dispose(),f}else throw new Error(`Unsupported dtype in weight '${t}': ${r}`);o+=s*c}return _i(a,i,r)}async function gm(n,e,t){let r=new Uint8Array(e);for(;r.byteLength<t;){const{done:i,value:s}=await n.read();if(i&&s==null){const o=t-r.byteLength;throw new Error(`Reader is done but ${o} bytes are still expected`)}const a=new Uint8Array(r.length+s.byteLength);a.set(r,0),a.set(new Uint8Array(s),r.length),r=a}return r.buffer}async function xx(n,e){const t={},r=n.getReader();let i=new ArrayBuffer(0);for(const s of e){const a=await dC(s,async(l,u)=>(i=await gm(r,i,u),i.slice(l,u)));i=await gm(r,i,a);const o=i.slice(0,a);i=i.slice(a);const c=gx(s,o);if(t[s.name]=c,oC()==="webgpu"){const l=lC();"uploadToGPU"in l&&Ae(c.shape)>=te().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&l.uploadToGPU(c.dataId)}}return t}function fC(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let e=0;const t=[];n.forEach(s=>{if(e+=s.byteLength,t.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});const r=new Uint8Array(e);let i=0;return t.forEach(s=>{r.set(new Uint8Array(s.buffer),i),i+=s.byteLength}),r.buffer}const jd=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function xm(n){return jd?Buffer.byteLength(n,"utf8"):new Blob([n]).size}function pC(n){if(jd)return Buffer.from(n).toString("base64");const e=new Uint8Array(n);let t="";for(let r=0,i=e.length;r<i;r++)t+=String.fromCharCode(e[r]);return btoa(t)}function mC(n){if(jd){const r=Buffer.from(n,"base64");return r.buffer.slice(r.byteOffset,r.byteOffset+r.byteLength)}const e=atob(n),t=new Uint8Array(e.length);for(let r=0;r<e.length;++r)t.set([e.charCodeAt(r)],r);return t.buffer}function gC(n){return ci.join(n)}function ym(n){const e="/";for(n=n.trim();n.endsWith(e);)n=n.slice(0,n.length-1);const t=n.split(e);return t[t.length-1]}function yx(n,e){const t={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:e};return n.signature!=null&&(t.signature=n.signature),n.userDefinedMetadata!=null&&(t.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(t.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(t.initializerSignature=n.initializerSignature),n.trainingConfig!=null&&(t.trainingConfig=n.trainingConfig),t}function vx(n,e,t){const r={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(r.trainingConfig=n.trainingConfig),n.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!t)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=e,r.weightData=t}return n.signature!=null&&(r.signature=n.signature),n.userDefinedMetadata!=null&&(r.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(r.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(r.initializerSignature=n.initializerSignature),r}async function qd(n,e){let t,r;return n.weightsManifest!=null&&([t,r]=await e(n.weightsManifest)),vx(n,t,r)}function Rc(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:xm(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:xm(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:new ci(n.weightData).byteLength}}function nd(n){const e=[];for(const t of n)e.push(...t.weights);return e}function xC(){const n=t=>{let r=t<<13,i=0;for(;!(r&8388608);)i-=8388608,r<<=1;return r&=-8388609,i+=947912704,r|i},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=n(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function yC(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let e=1;e<31;e++)n[e]=e<<23;for(let e=33;e<63;e++)n[e]=2147483648+(e-32<<23);return n}function vC(){const n=new Uint32Array(64);for(let e=0;e<64;e++)n[e]=1024;return n[0]=n[32]=0,n}function _C(){const n=xC(),e=yC(),t=vC();return r=>{const i=new ArrayBuffer(4*r.length),s=new Uint32Array(i);for(let a=0;a<r.length;a++){const o=r[a],c=n[t[o>>10]+(o&1023)]+e[o>>10];s[a]=c}return new Float32Array(i)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hn{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return hn.instance==null&&(hn.instance=new hn),hn.instance}static registerSaveRouter(e){hn.getInstance().saveRouters.push(e)}static registerLoadRouter(e){hn.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return hn.getHandlers(e,"save")}static getLoadHandlers(e,t){return hn.getHandlers(e,"load",t)}static getHandlers(e,t,r){const i=[];return(t==="load"?hn.getInstance().loadRouters:hn.getInstance().saveRouters).forEach(a=>{const o=a(e,r);o!==null&&i.push(o)}),i}}const bC=n=>hn.registerSaveRouter(n),SC=n=>hn.registerLoadRouter(n),wC=n=>hn.getSaveHandlers(n),EC=(n,e)=>hn.getLoadHandlers(n,e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rd="tensorflowjs",id=1,Qs="models_store",cs="model_info_store";function _x(){if(!te().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,e=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function sd(n){const e=n.result;e.createObjectStore(Qs,{keyPath:"modelPath"}),e.createObjectStore(cs,{keyPath:"modelPath"})}class la{constructor(e){if(this.indexedDB=_x(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((r,i)=>{const s=this.indexedDB.open(rd,id);s.onupgradeneeded=()=>sd(s),s.onsuccess=()=>{const a=s.result;if(t==null){const o=a.transaction(Qs,"readonly"),l=o.objectStore(Qs).get(this.modelPath);l.onsuccess=()=>{if(l.result==null)return a.close(),i(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));r(l.result.modelArtifacts)},l.onerror=u=>(a.close(),i(l.error)),o.oncomplete=()=>a.close()}else{t.weightData=ci.join(t.weightData);const o=Rc(t),c=a.transaction(cs,"readwrite");let l=c.objectStore(cs),u;try{u=l.put({modelPath:this.modelPath,modelArtifactsInfo:o})}catch(d){return i(d)}let h;u.onsuccess=()=>{h=a.transaction(Qs,"readwrite");const d=h.objectStore(Qs);let f;try{f=d.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:o})}catch(p){return i(p)}f.onsuccess=()=>r({modelArtifactsInfo:o}),f.onerror=p=>{l=c.objectStore(cs);const x=l.delete(this.modelPath);x.onsuccess=()=>(a.close(),i(f.error)),x.onerror=g=>(a.close(),i(f.error))}},u.onerror=d=>(a.close(),i(u.error)),c.oncomplete=()=>{h==null?a.close():h.oncomplete=()=>a.close()}}},s.onerror=a=>i(s.error)})}}la.URL_SCHEME="indexeddb://";const bx=n=>te().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(la.URL_SCHEME)?TC(n.slice(la.URL_SCHEME.length)):null;hn.registerSaveRouter(bx);hn.registerLoadRouter(bx);function TC(n){return new la(n)}function CC(n){return n.startsWith(la.URL_SCHEME)?n.slice(la.URL_SCHEME.length):n}class AC{constructor(){this.indexedDB=_x()}async listModels(){return new Promise((e,t)=>{const r=this.indexedDB.open(rd,id);r.onupgradeneeded=()=>sd(r),r.onsuccess=()=>{const i=r.result,s=i.transaction(cs,"readonly"),o=s.objectStore(cs).getAll();o.onsuccess=()=>{const c={};for(const l of o.result)c[l.modelPath]=l.modelArtifactsInfo;e(c)},o.onerror=c=>(i.close(),t(o.error)),s.oncomplete=()=>i.close()},r.onerror=i=>t(r.error)})}async removeModel(e){return e=CC(e),new Promise((t,r)=>{const i=this.indexedDB.open(rd,id);i.onupgradeneeded=()=>sd(i),i.onsuccess=()=>{const s=i.result,a=s.transaction(cs,"readwrite"),o=a.objectStore(cs),c=o.get(e);let l;c.onsuccess=()=>{if(c.result==null)return s.close(),r(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const u=o.delete(e),h=()=>{l=s.transaction(Qs,"readwrite");const f=l.objectStore(Qs).delete(e);f.onsuccess=()=>t(c.result.modelArtifactsInfo),f.onerror=p=>r(c.error)};u.onsuccess=h,u.onerror=d=>(h(),s.close(),r(c.error))}},c.onerror=u=>(s.close(),r(c.error)),a.oncomplete=()=>{l==null?s.close():l.oncomplete=()=>s.close()}},i.onerror=s=>r(i.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oi="/",Ya="tensorflowjs_models",Sx="info",RC="model_topology",NC="weight_specs",MC="weight_data",IC="model_metadata";function wx(n){return{info:[Ya,n,Sx].join(Oi),topology:[Ya,n,RC].join(Oi),weightSpecs:[Ya,n,NC].join(Oi),weightData:[Ya,n,MC].join(Oi),modelMetadata:[Ya,n,IC].join(Oi)}}function Ex(n){for(const e of Object.values(n))window.localStorage.removeItem(e)}function DC(n){const e=n.split(Oi);if(e.length<3)throw new Error(`Invalid key format: ${n}`);return e.slice(1,e.length-1).join(Oi)}function PC(n){return n.startsWith(ua.URL_SCHEME)?n.slice(ua.URL_SCHEME.length):n}class ua{constructor(e){if(!te().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=wx(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),i=Rc(e),s=ci.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(i)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,pC(s));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:i}}catch{throw Ex(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${i.modelTopologyBytes}, weightSpecsBytes=${i.weightSpecsBytes}, weightDataBytes=${i.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},r=JSON.parse(this.LS.getItem(this.keys.topology));if(r==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=r;const i=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(i==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=i;const s=this.LS.getItem(this.keys.modelMetadata);if(s!=null){const o=JSON.parse(s);t.format=o.format,t.generatedBy=o.generatedBy,t.convertedBy=o.convertedBy,o.signature!=null&&(t.signature=o.signature),o.userDefinedMetadata!=null&&(t.userDefinedMetadata=o.userDefinedMetadata),o.modelInitializer!=null&&(t.modelInitializer=o.modelInitializer),o.initializerSignature!=null&&(t.initializerSignature=o.initializerSignature),o.trainingConfig!=null&&(t.trainingConfig=o.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=mC(a),t}}ua.URL_SCHEME="localstorage://";const Tx=n=>te().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(ua.URL_SCHEME)?OC(n.slice(ua.URL_SCHEME.length)):null;hn.registerSaveRouter(Tx);hn.registerLoadRouter(Tx);function OC(n){return new ua(n)}class $C{constructor(){k(te().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),k(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=Ya+Oi,r=Oi+Sx;for(let i=0;i<this.LS.length;++i){const s=this.LS.key(i);if(s.startsWith(t)&&s.endsWith(r)){const a=DC(s);e[a]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){e=PC(e);const t=wx(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(t.info));return Ex(t),r}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const io="://";class Xn{constructor(){this.managers={}}static getInstance(){return Xn.instance==null&&(Xn.instance=new Xn),Xn.instance}static registerManager(e,t){k(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(io)&&(e=e.slice(0,e.indexOf(io))),k(e.length>0,()=>"scheme must not be an empty string.");const r=Xn.getInstance();k(r.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),r.managers[e]=t}static getManager(e){const t=Xn.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(Xn.getInstance().managers)}}function El(n){if(n.indexOf(io)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Xn.getSchemes().join(",")}`);return{scheme:n.split(io)[0],path:n.split(io)[1]}}async function Cx(n,e,t=!1){k(n!==e,()=>`Old path and new path are the same: '${n}'`);const r=hn.getLoadHandlers(n);k(r.length>0,()=>`Copying failed because no load handler is found for source URL ${n}.`),k(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${n}.`);const i=r[0],s=hn.getSaveHandlers(e);k(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),k(s.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${e}.`);const a=s[0],o=El(n).scheme,c=El(n).path,l=o===El(n).scheme,u=await i.load();t&&l&&await Xn.getManager(o).removeModel(c);const h=await a.save(u);return t&&!l&&await Xn.getManager(o).removeModel(c),h.modelArtifactsInfo}async function LC(){const n=Xn.getSchemes(),e={};for(const t of n){const r=await Xn.getManager(t).listModels();for(const i in r){const s=t+io+i;e[s]=r[i]}}return e}async function kC(n){const e=El(n);return Xn.getManager(e.scheme).removeModel(e.path)}async function FC(n,e){return Cx(n,e,!1)}async function UC(n,e){return Cx(n,e,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BC{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!te().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",r=>{if(r.source===window&&r.data.name===this.messageName){r.stopPropagation();const i=this.functionRefs[r.data.index];i(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return K2(e)}}if(te().get("IS_BROWSER")){te().setPlatform("browser",new BC);try{Xn.registerManager(ua.URL_SCHEME,new $C)}catch{}try{Xn.registerManager(la.URL_SCHEME,new AC)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VC={importFetch:()=>require("node-fetch")};let fh;class zC{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return te().global.fetch!=null?te().global.fetch(e,t):(fh==null&&(fh=VC.importFetch()),fh(e,t))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}te().get("IS_NODE")&&!te().get("IS_BROWSER")&&te().setPlatform("node",new zC);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pn(n,e="float32",t){return e=e||"float32",Cr(n),new xo(n,e,t)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GC(n,e){const t=$(n,"x","cast");if(!dT(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");const r={x:t},i={dtype:e};return q.runKernel(zd,r,i)}const cn=H({cast_:GC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WC(n){const t={x:$(n,"x","clone","string_or_numeric")};return q.runKernel(Gd,t)}const fs=H({clone_:WC});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ax(n,e=!1){console.log(n.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ux();const HC={buffer:pn,cast:cn,clone:fs,print:Ax};JT(HC);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XC(n,e){let t=$(n,"a","add"),r=$(e,"b","add");[t,r]=gn(t,r);const i={a:t,b:r};return q.runKernel(Vd,i)}const ct=H({add_:XC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jC(n,e){let t=$(n,"a","floorDiv"),r=$(e,"b","floorDiv");[t,r]=gn(t,r);const i={a:t,b:r};return q.runKernel(s0,i)}const Rx=H({floorDiv_:jC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qC(n,e){let t=$(n,"a","div"),r=$(e,"b","div");if([t,r]=gn(t,r),t.dtype==="int32"&&r.dtype==="int32")return Rx(t,r);const i={a:t,b:r},s={};return q.runKernel(j1,i,s)}const Lt=H({div_:qC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KC(n,e){let t=$(n,"a","mul"),r=$(e,"b","mul");[t,r]=gn(t,r);const i={a:t,b:r};return q.runKernel(k0,i)}const Oe=H({mul_:KC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YC(n){const e=$(n,"x","abs");if(e.dtype==="complex64"){const t={x:e};return q.runKernel(R1,t)}else{const t={x:e};return q.runKernel(s1,t)}}const br=H({abs_:YC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZC(n){const t={x:$(n,"x","acos")};return q.runKernel(a1,t)}const JC=H({acos_:ZC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QC(n){const t={x:$(n,"x","acosh")};return q.runKernel(o1,t)}const eA=H({acosh_:QC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tA(n){k(Array.isArray(n),()=>"The argument passed to tf.addN() must be a list of tensors"),k(n.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${n.length}`);const e=n.map((i,s)=>$(i,`tensors${s}`,"addN")),t=e[0];e.forEach(i=>{if(i.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(i=>{if(!fn(i.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const r=e;return q.runKernel(c1,r)}const nA=H({addN_:tA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rA(n,e=null,t=!1){const i={x:$(n,"x","all","bool")},s={axis:e,keepDims:t};return q.runKernel(l1,i,s)}const iA=H({all_:rA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sA(n,e=null,t=!1){const i={x:$(n,"x","any","bool")},s={axis:e,keepDims:t};return q.runKernel(u1,i,s)}const aA=H({any_:sA});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oA(n,e=0){const r={x:$(n,"x","argMax")},i={axis:e};return q.runKernel(h1,r,i)}const cA=H({argMax_:oA});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lA(n,e=0){const r={x:$(n,"x","argMin")},i={axis:e};return q.runKernel(d1,r,i)}const uA=H({argMin_:lA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hA(n){const t={x:$(n,"x","asin")};return q.runKernel(f1,t)}const dA=H({asin_:hA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fA(n){const t={x:$(n,"x","asinh")};return q.runKernel(p1,t)}const pA=H({asinh_:fA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mA(n){const t={x:$(n,"x","atan")};return q.runKernel(m1,t)}const gA=H({atan_:mA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xA(n,e){let t=$(n,"a","atan2"),r=$(e,"b","atan2");[t,r]=gn(t,r);const i={a:t,b:r};return q.runKernel(x1,i)}const yA=H({atan2_:xA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vA(n){const t={x:$(n,"x","atanh")};return q.runKernel(g1,t)}const _A=H({atanh_:vA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nx(n,e,t,r,i="NHWC",s){const a=n[3],o=[...e,a],c=Ao(i);return Ar(n,o,t,s,r,null,null,c)}function _a(n,e,t,r,i,s,a="channelsLast"){const[o,c]=hc(e);let l;if(a==="channelsLast")l=[o,c,n[3],n[3]];else if(a==="channelsFirst")l=[o,c,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return Ar(n,l,t,r,i,s,!1,a)}function Nc(n,e,t,r,i,s,a="NDHWC"){const[o,c,l]=ad(e);let u,h;if(a==="NDHWC")h="channelsLast",u=[o,c,l,n[4],n[4]];else if(a==="NCDHW")h="channelsFirst",u=[o,c,l,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return Mc(n,u,t,r,i,!1,h,s)}function Ar(n,e,t,r,i,s,a=!1,o="channelsLast"){let[c,l,u,h]=[-1,-1,-1,-1];if(o==="channelsLast")[c,l,u,h]=n;else if(o==="channelsFirst")[c,h,l,u]=n;else throw new Error(`Unknown dataFormat ${o}`);const[d,f,,p]=e,[x,g]=hc(t),[m,_]=hc(r),b=so(d,m),w=so(f,_),{padInfo:I,outHeight:M,outWidth:D}=wA(i,l,u,x,g,b,w,s,o),F=a?p*h:p;let N;return o==="channelsFirst"?N=[c,F,M,D]:o==="channelsLast"&&(N=[c,M,D,F]),{batchSize:c,dataFormat:o,inHeight:l,inWidth:u,inChannels:h,outHeight:M,outWidth:D,outChannels:F,padInfo:I,strideHeight:x,strideWidth:g,filterHeight:d,filterWidth:f,effectiveFilterHeight:b,effectiveFilterWidth:w,dilationHeight:m,dilationWidth:_,inShape:n,outShape:N,filterShape:e}}function Mc(n,e,t,r,i,s=!1,a="channelsLast",o){let[c,l,u,h,d]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[c,l,u,h,d]=n;else if(a==="channelsFirst")[c,d,l,u,h]=n;else throw new Error(`Unknown dataFormat ${a}`);const[f,p,x,,g]=e,[m,_,b]=ad(t),[w,I,M]=ad(r),D=so(f,w),F=so(p,I),N=so(x,M),{padInfo:A,outDepth:B,outHeight:J,outWidth:Y}=EA(i,l,u,h,m,_,b,D,F,N,o),ae=s?g*d:g;let le;return a==="channelsFirst"?le=[c,ae,B,J,Y]:a==="channelsLast"&&(le=[c,B,J,Y,ae]),{batchSize:c,dataFormat:a,inDepth:l,inHeight:u,inWidth:h,inChannels:d,outDepth:B,outHeight:J,outWidth:Y,outChannels:ae,padInfo:A,strideDepth:m,strideHeight:_,strideWidth:b,filterDepth:f,filterHeight:p,filterWidth:x,effectiveFilterDepth:D,effectiveFilterHeight:F,effectiveFilterWidth:N,dilationDepth:w,dilationHeight:I,dilationWidth:M,inShape:n,outShape:le,filterShape:e}}function bA(n,e,t,r,i){r==null&&(r=Kd(n,e,t));const s=n[0],a=n[1],o=dc((s-e+2*r)/t+1,i),c=dc((a-e+2*r)/t+1,i);return[o,c]}function SA(n,e,t,r,i,s){i==null&&(i=Kd(n,e[0],r[0]));const a=[0,0,0,t];for(let o=0;o<3;o++)n[o]+2*i>=e[o]&&(a[o]=dc((n[o]-e[o]+2*i)/r[o]+1,s));return a}function Kd(n,e,t,r=1){const i=so(e,r);return Math.floor((n[0]*(t-1)-t+i)/2)}function hc(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function ad(n){return typeof n=="number"?[n,n,n]:n}function so(n,e){return e<=1?n:n+(n-1)*(e-1)}function wA(n,e,t,r,i,s,a,o,c){let l,u,h;if(typeof n=="number"){l={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const f=bA([e,t],s,r,n,o);u=f[0],h=f[1]}else if(n==="same"){u=Math.ceil(e/r),h=Math.ceil(t/i);const d=Math.max(0,(u-1)*r+s-e),f=Math.max(0,(h-1)*i+a-t),p=Math.floor(d/2),x=d-p,g=Math.floor(f/2),m=f-g;l={top:p,bottom:x,left:g,right:m,type:"SAME"}}else if(n==="valid")l={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((e-s+1)/r),h=Math.ceil((t-a+1)/i);else if(typeof n=="object"){const d=c==="channelsLast"?n[1][0]:n[2][0],f=c==="channelsLast"?n[1][1]:n[2][1],p=c==="channelsLast"?n[2][0]:n[3][0],x=c==="channelsLast"?n[2][1]:n[3][1];l={top:d,bottom:f,left:p,right:x,type:d===0&&f===0&&p===0&&x===0?"VALID":"EXPLICIT"},u=dc((e-s+d+f)/r+1,o),h=dc((t-a+p+x)/i+1,o)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:l,outHeight:u,outWidth:h}}function EA(n,e,t,r,i,s,a,o,c,l,u){let h,d,f,p;if(n==="valid"&&(n=0),typeof n=="number"){h={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const g=SA([e,t,r,1],[o,c,l],1,[i,s,a],n,u);d=g[0],f=g[1],p=g[2]}else if(n==="same"){d=Math.ceil(e/i),f=Math.ceil(t/s),p=Math.ceil(r/a);const x=(d-1)*i+o-e,g=(f-1)*s+c-t,m=(p-1)*a+l-r,_=Math.floor(x/2),b=x-_,w=Math.floor(g/2),I=g-w,M=Math.floor(m/2),D=m-M;h={top:w,bottom:I,left:M,right:D,front:_,back:b,type:"SAME"}}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:h,outDepth:d,outHeight:f,outWidth:p}}function dc(n,e){if(!e)return Math.trunc(n);switch(e){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${e}`)}}function fc(n){const[e,t,r]=hc(n);return e===1&&t===1&&r===1}function xr(n,e){return fc(n)||fc(e)}function ha(n){return hc(n).every(e=>e>0)}function Ao(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function Hr(n,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")k(po(e),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(r=>{r.forEach(i=>{k(po(i),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${i}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TA(n,e){const r={x:$(n,"x","reshape","string_or_numeric")},i={shape:e};return q.runKernel(r2,r,i)}const ge=H({reshape_:TA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CA(n,e,t,r,i){const s=$(n,"x","avgPool","float32"),a=1;k(xr(t,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`);let o=s,c=!1;s.rank===3&&(c=!0,o=ge(s,[1,s.shape[0],s.shape[1],s.shape[2]])),k(o.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`),Hr("avgPool",r,i);const l={x:o},u={filterSize:e,strides:t,pad:r,dimRoundingMode:i};let h=q.runKernel(y1,l,u);return h=cn(h,s.dtype),c?ge(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Mx=H({avgPool_:CA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AA(n,e,t,r,i,s="NDHWC"){const a=$(n,"x","avgPool3d","float32");let o=a,c=!1;a.rank===4&&(c=!0,o=ge(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),k(o.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),k(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),k(typeof t=="number"&&t>0||Array.isArray(t)&&t[0]>0&&t[1]>0&&t[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${t}'`),Hr("avgPool3d",r,i);const l={x:o},u={filterSize:e,strides:t,pad:r,dimRoundingMode:i,dataFormat:s};let h=q.runKernel(v1,l,u);return h=cn(h,o.dtype),c?ge(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const RA=H({avgPool3d_:AA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NA(n,e=0){k(n.length>=1,()=>"Pass at least one tensor to concat");const t=Vl(n,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),t.length===1)return fs(t[0]);const r=t,i={axis:e};return q.runKernel(N1,r,i)}const On=H({concat_:NA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MA(n,e,t=!1,r=!1){let i=$(n,"a","matMul"),s=$(e,"b","matMul");[i,s]=gn(i,s);const a={a:i,b:s},o={transposeA:t,transposeB:r};return q.runKernel(_1,a,o)}const Zt=H({matMul_:MA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IA(n){const t={x:$(n,"x","sigmoid","float32")};return q.runKernel(v2,t)}const ra=H({sigmoid_:IA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DA(n,e,t){const r=$(n,"x","slice","string_or_numeric");if(r.rank===0)throw new Error("Slicing scalar is not possible");const i={x:r},s={begin:e,size:t};return q.runKernel(m2,i,s)}const Nt=H({slice_:DA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PA(n){const t={x:$(n,"x","tanh","float32")};return q.runKernel(U2,t)}const od=H({tanh_:PA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OA(n,e,t,r,i,s){const a=$(n,"forgetBias","basicLSTMCell"),o=$(e,"lstmKernel","basicLSTMCell"),c=$(t,"lstmBias","basicLSTMCell"),l=$(r,"data","basicLSTMCell"),u=$(i,"c","basicLSTMCell"),h=$(s,"h","basicLSTMCell"),d=On([l,h],1),f=Zt(d,o),p=ct(f,c),x=p.shape[0],g=p.shape[1]/4,m=[x,g],_=Nt(p,[0,0],m),b=Nt(p,[0,g],m),w=Nt(p,[0,g*2],m),I=Nt(p,[0,g*3],m),M=ct(Oe(ra(_),od(b)),Oe(u,ra(ct(a,w)))),D=Oe(od(M),ra(I));return[M,D]}const $A=H({basicLSTMCell_:OA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LA(n,e,t){const r=$(n,"x","batchToSpaceND"),i=e.reduce((o,c)=>o*c);k(r.rank>=1+e.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${e.length}`),k(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),k(r.shape[0]%i===0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${i}`);const s={x:r},a={blockShape:e,crops:t};return q.runKernel(b1,s,a)}const Ix=H({batchToSpaceND_:LA});function kA(n){let e;return n.rank===0||n.rank===1?e=ge(n,[1,1,1,n.size]):n.rank===2?e=ge(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?e=ge(n,[1,n.shape[0],n.shape[1],n.shape[2]]):e=n,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FA(n,e,t,r,i,s){s==null&&(s=.001);const a=$(n,"x","batchNorm"),o=$(e,"mean","batchNorm"),c=$(t,"variance","batchNorm");let l;i!=null&&(l=$(i,"scale","batchNorm"));let u;r!=null&&(u=$(r,"offset","batchNorm")),k(o.rank===c.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),k(u==null||o.rank===u.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),k(l==null||o.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:kA(a),scale:l,offset:u,mean:o,variance:c},f={varianceEpsilon:s},p=q.runKernel(a0,d,f);return ge(p,a.shape)}const du=H({batchNorm_:FA});function UA(n,e,t,r,i,s){const a=$(n,"x","batchNorm"),o=$(e,"mean","batchNorm"),c=$(t,"variance","batchNorm");let l;i!=null&&(l=$(i,"scale","batchNorm"));let u;return r!=null&&(u=$(r,"offset","batchNorm")),k(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),k(o.rank===2||o.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),k(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${c.rank}.`),l!=null&&k(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&k(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${u.rank}.`),du(a,o,c,u,l,s)}const BA=H({batchNorm2d_:UA});function VA(n,e,t,r,i,s){const a=$(n,"x","batchNorm"),o=$(e,"mean","batchNorm"),c=$(t,"variance","batchNorm");let l;i!=null&&(l=$(i,"scale","batchNorm"));let u;return r!=null&&(u=$(r,"offset","batchNorm")),k(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),k(o.rank===3||o.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),k(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${c.rank}.`),l!=null&&k(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&k(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${u.rank}.`),du(a,o,c,u,l,s)}const zA=H({batchNorm3d_:VA});function GA(n,e,t,r,i,s){const a=$(n,"x","batchNorm"),o=$(e,"mean","batchNorm"),c=$(t,"variance","batchNorm");let l;i!=null&&(l=$(i,"scale","batchNorm"));let u;return r!=null&&(u=$(r,"offset","batchNorm")),k(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),k(o.rank===4||o.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),k(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${c.rank}.`),l!=null&&k(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&k(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${u.rank}.`),du(a,o,c,u,l,s)}const WA=H({batchNorm4d_:GA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HA(n,e,t){const r=$(n,"x","bincount"),i=$(e,"weights","bincount");k(r.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),k(t>=0,()=>`size must be non-negative, but got ${t}.`),k(i.size===r.size||i.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${i.shape}.`);const s={x:r,weights:i},a={size:t};return q.runKernel(S1,s,a)}const Dx=H({bincount_:HA});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XA(n,e){const t=$(n,"x","bitwiseAnd"),r=$(e,"y","bitwiseAnd");if(!fn(t.shape,r.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${t.shape}, y: ${r.shape}`);if(t.dtype!=="int32"||r.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${t.dtype} and type of y: ${r.dtype}`);const i={a:t,b:r};return q.runKernel(w1,i)}const jA=H({bitwiseAnd_:XA});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qA(n,e){const t=$(n,"s0","broadcastArgs","int32"),r=$(e,"s1","broadcastArgs","int32");if(t.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${t.rank}`);if(r.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const i={s0:t,s1:r};return q.runKernel(E1,i)}const KA=H({broadcastArgs_:qA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YA(n,e){let t=$(n,"broadcastTo","x");const r=t.shape;if(Cr(e),e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){const l=t.shape.slice();for(;l.length<e.length;)l.unshift(1);t=ge(t,l)}const i=t.shape,s=Array.from(e);for(let l=e.length-1;l>=0;l--)if(i[l]===e[l])s[l]=1;else if(t.shape[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${e}].`);if(s.map((l,u)=>l>1?u:-1).filter(l=>l>=0).length===0)return fs(t);const o={x:t},c={reps:s};return q.runKernel(Wd,o,c)}const oc=H({broadcastTo_:YA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZA(n){const t={x:$(n,"x","ceil","float32")};return q.runKernel(T1,t)}const JA=H({ceil_:ZA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ic(n,e,t){Cr(n),t=t||Ac(e);const r={shape:n,value:e,dtype:t};return q.runKernel(n0,{},r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QA(n,e,t){const r=$(n,"x","clipByValue");if(k(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`),e===t)return Ic(r.shape,e,r.dtype);const i={x:r},s={clipValueMin:e,clipValueMax:t};return q.runKernel(C1,i,s)}const Px=H({clipByValue_:QA});function eR(n){return On(n,0)}const tR=H({concat1d_:eR});function nR(n,e){return On(n,e)}const rR=H({concat2d_:nR});function iR(n,e){return On(n,e)}const sR=H({concat3d_:iR});function aR(n,e){return On(n,e)}const oR=H({concat4d_:aR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cR(n,e,t,r,i="NHWC",s=[1,1],a){const o=$(n,"x","conv2d","float32"),c=$(e,"filter","conv2d","float32");let l=o,u=!1;o.rank===3&&(u=!0,l=ge(o,[1,o.shape[0],o.shape[1],o.shape[2]])),k(l.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),k(c.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${c.rank}.`),Hr("conv2d",r,a);const h=i==="NHWC"?l.shape[3]:l.shape[1];k(h===c.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${c.shape[2]}.`),k(xr(t,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),k(ha(s),()=>"Error in conv2D: Dilated rates should be larger than 0."),k(ha(t),()=>"Error in conv2D: Strides should be larger than 0.");const d={x:l,filter:c},f={strides:t,pad:r,dataFormat:i,dilations:s,dimRoundingMode:a},p=q.runKernel(M1,d,f);return u?ge(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const fu=H({conv2d_:cR});function lR(n,e,t,r,i="NWC",s=1,a){const o=$(n,"x","conv1d"),c=$(e,"filter","conv1d");let l=o,u=!1;o.rank===2&&(u=!0,l=ge(o,[1,o.shape[0],o.shape[1]])),k(l.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),k(c.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${c.rank}.`),Hr("conv1d",r,a),k(l.shape[2]===c.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${c.shape[1]}.`),k(xr(t,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${s}'`),k(ha(s),()=>"Error in conv1D: Dilated rates should be larger than 0."),k(ha(t),()=>"Error in conv1D: Stride should be larger than 0."),k(i==="NWC",()=>`Error in conv1d: got dataFormat of ${i} but only NWC is currently supported.`);const h=ge(c,[1,c.shape[0],c.shape[1],c.shape[2]]),d=ge(l,[l.shape[0],1,l.shape[1],l.shape[2]]),g=fu(d,h,[1,t],r,"NHWC",[1,s],a);return u?ge(g,[g.shape[2],g.shape[3]]):ge(g,[g.shape[0],g.shape[2],g.shape[3]])}const uR=H({conv1d_:lR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hR(n,e,t,r,i,s="NHWC",a){k(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let o=n,c=e,l=!1;e.rank===3&&(l=!0,c=ge(e,[1,e.shape[0],e.shape[1],e.shape[2]]),o=[1,n[0],n[1],n[2]]),k(o.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),k(c.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${c.rank}`),k(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);const u=s==="NHWC"?o[3]:o[1],h=s==="NHWC"?c.shape[3]:c.shape[1];k(u===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${u}) must match input depth for filter ${t.shape[2]}.`),k(h===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${t.shape[3]}.`),Hr("conv2dDerInput",i,a);const d={dy:c,filter:t},f={strides:r,pad:i,dataFormat:s,dimRoundingMode:a,inputShape:o},p=q.runKernel(D1,d,f);return l?ge(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const Ox=H({conv2DBackpropInput_:hR});function dR(n,e,t,r,i,s){const a=$(n,"x","conv2dTranspose"),o=$(e,"filter","conv2dTranspose");return Ox(t,a,o,r,i,"NHWC",s)}const fR=H({conv2dTranspose_:dR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pR(n,e,t,r,i="NDHWC",s=[1,1,1]){const a=$(n,"x","conv3d"),o=$(e,"filter","conv3d");let c=a,l=!1;a.rank===4&&(l=!0,c=ge(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),k(c.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${c.rank}.`),k(o.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),k(c.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${c.shape[4]}) must match input depth for filter ${o.shape[3]}.`),k(xr(t,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),k(i==="NDHWC",()=>`Error in conv3d: got dataFormat of ${i} but only NDHWC is currently supported.`),k(ha(s),()=>"Error in conv3D: Dilated rates should be larger than 0."),k(ha(t),()=>"Error in conv3D: Strides should be larger than 0.");const u={x:c,filter:o},h={strides:t,pad:r,dataFormat:i,dilations:s},d=q.runKernel(P1,u,h);return l?ge(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const mR=H({conv3d_:pR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gR(n,e,t,r,i){k(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let s=n,a=e,o=!1;e.rank===4&&(o=!0,a=ge(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),s=[1,n[0],n[1],n[2],n[3]]);const c=s[4],l=a.shape[4];k(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),k(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),k(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),k(c===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${c}) must match input depth for filter ${t.shape[3]}.`),k(l===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${t.shape[4]}.`);const u={dy:a,filter:t},h={pad:i,strides:r,inputShape:s},d=q.runKernel(O1,u,h);return o?ge(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const xR=H({conv3DBackpropInput_:gR});function yR(n,e,t,r,i){const s=$(n,"x","conv3dTranspose"),a=$(e,"filter","conv3dTranspose");return xR(t,s,a,r,i)}const vR=H({conv3dTranspose_:yR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _R(n){const t={x:$(n,"x","cos","float32")};return q.runKernel($1,t)}const bR=H({cos_:_R});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SR(n){const t={x:$(n,"x","cosh","float32")};return q.runKernel(L1,t)}const wR=H({cosh_:SR});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ER(n,e=0,t=!1,r=!1){const s={x:$(n,"x","cumprod")},a={axis:e,exclusive:t,reverse:r};return q.runKernel(k1,s,a)}const TR=H({cumprod_:ER});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CR(n,e=0,t=!1,r=!1){const s={x:$(n,"x","cumsum")},a={axis:e,exclusive:t,reverse:r};return q.runKernel(F1,s,a)}const AR=H({cumsum_:CR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RR(n,e,t,r=!1){const i=$(n,"x","denseBincount"),s=$(e,"weights","denseBincount");k(i.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${i.dtype}`),k(i.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${i.rank}.`),k(t>=0,()=>`size must be non-negative, but got ${t}.`),k(s.size===i.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${i.shape}, weights shape: ${s.shape}.`);const a={x:i,weights:s},o={size:t,binaryOutput:r};return q.runKernel(B1,a,o)}const NR=H({denseBincount_:RR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MR(n,e,t="NHWC"){const r=$(n,"x","depthToSpace","float32"),i=t==="NHWC"?r.shape[1]:r.shape[2],s=t==="NHWC"?r.shape[2]:r.shape[3],a=t==="NHWC"?r.shape[3]:r.shape[1];k(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),k(i*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${i} and ${e}  for depthToSpace with input shape
    ${r.shape}`),k(s*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${e} for depthToSpace with input shape
        ${r.shape}`),k(a%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${r.shape}`);const o={x:r},c={blockSize:e,dataFormat:t};return q.runKernel(V1,o,c)}const IR=H({depthToSpace_:MR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DR(n,e,t,r,i="NHWC",s=[1,1],a){const o=$(n,"x","depthwiseConv2d","float32"),c=$(e,"filter","depthwiseConv2d","float32");let l=o,u=!1;o.rank===3&&(u=!0,l=ge(o,[1,o.shape[0],o.shape[1],o.shape[2]])),k(l.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),k(c.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${c.rank}.`);const h=i==="NHWC"?l.shape[3]:l.shape[1];k(h===c.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${c.shape[2]}.`),Hr("depthwiseConv2d",r,a);const d={x:l,filter:c},f={strides:t,pad:r,dataFormat:i,dilations:s,dimRoundingMode:a},p=q.runKernel(z1,d,f);return u?ge(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const Yd=H({depthwiseConv2d_:DR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PR(n){const t={x:$(n,"x","diag")};return q.runKernel(H1,t)}const OR=H({diag_:PR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $R(n,e,t,r,i=[1,1],s="NHWC"){const a=$(n,"x","dilation2d"),o=$(e,"filter","dilation2d");k(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),k(o.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),k(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let c=a,l=!1;a.rank===3&&(c=ge(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=!0),k(c.shape[3]===o.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${c.shape[3]} vs ${o.shape[2]}`);const u={x:c,filter:o},h={strides:t,pad:r,dilations:i},d=q.runKernel(X1,u,h);return l?ge(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const LR=H({dilation2d_:$R});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zl(n,e){const t=n.length,r=[];for(let i=0;i<t;i++){const s=t-1-i,a=n[s]||1;(e[e.length-1-i]||1)>1&&a===1&&r.unshift(s)}return r}function $x(n,e){const t=[];for(let r=0;r<e.length;r++){const i=n[n.length-r-1],s=e.length-r-1,a=e[s];(i==null||i===1&&a>1)&&t.unshift(s)}return t}function Gt(n,e){const t=Math.max(n.length,e.length),r=new Array(t);for(let i=0;i<t;i++){let s=n[n.length-i-1];s==null&&(s=1);let a=e[e.length-i-1];if(a==null&&(a=1),s===1)r[t-i-1]=a;else if(a===1)r[t-i-1]=s;else if(s!==a){const o=`Operands could not be broadcast together with shapes ${n} and ${e}.`;throw Error(o)}else r[t-i-1]=s}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kR(n,e){let t=$(n,"a","equal","string_or_numeric"),r=$(e,"b","equal","string_or_numeric");[t,r]=gn(t,r),Gt(t.shape,r.shape);const i={a:t,b:r};return q.runKernel(Z1,i)}const Lx=H({equal_:kR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FR(n,e,t){const r=$(e,"a","where"),i=$(t,"b","where"),s=$(n,"condition","where","bool"),a=Gt(Gt(s.shape,r.shape),i.shape),o=oc(s,a),c=oc(r,a),l=oc(i,a),u={condition:o,t:c,e:l};return q.runKernel(f2,u)}const ps=H({where_:FR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UR(n){const t={x:$(n,"x","zerosLike")};return q.runKernel(H2,t)}const Er=H({zerosLike_:UR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BR(n,e){let t=$(n,"a","div"),r=$(e,"b","div");[t,r]=gn(t,r);const i=Lt(t,r),s=Er(i),a=Lx(r,s);return ps(a,s,i)}const VR=H({divNoNan_:BR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zR(n,e){const t=$(n,"t1","dot"),r=$(e,"t2","dot");k((t.rank===1||t.rank===2)&&(r.rank===1||r.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${r.rank}.`);const i=t.rank===1?t.size:t.shape[1],s=r.rank===1?r.size:r.shape[0];if(k(i===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${i} and ${s}.`),t.rank===1&&r.rank===1){const a=ge(t,[1,-1]),o=ge(r,[-1,1]),c=Zt(a,o);return ge(c,[])}else if(t.rank===1&&r.rank===2){const a=ge(t,[1,-1]),o=ge(r,[r.shape[0],r.shape[1]]),c=Zt(a,o);return ge(c,[c.size])}else if(t.rank===2&&r.rank===1){const a=ge(r,[-1,1]),o=Zt(t,a);return ge(o,[o.size])}else{const a=ge(r,[r.shape[0],r.shape[1]]);return Zt(t,a)}}const GR=H({dot_:zR});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WR(n,...e){const t=e.map((i,s)=>$(i,`tensors${s}`,"einsum")),r={equation:n};return q.runKernel(q1,t,r)}const Za=H({einsum_:WR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HR(n){const t={x:$(n,"x","elu","float32")};return q.runKernel(K1,t)}const kx=H({elu_:HR});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XR(n,e){const t=$(n,"x","ensureShape","string_or_numeric");if(!lT(t.shape,e))throw new Error(`EnsureShape: Shape of tensor ${t.shape} is not compatible with expected shape ${e}`);return n}const jR=H({ensureShape_:XR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qR(n){let e=$(n,"x","erf");k(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=cn(e,"float32"));const t={x:e};return q.runKernel(Y1,t)}const KR=H({erf_:qR});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zd(n,e){for(let t=0;t<n.length;++t)if(n[n.length-t-1]!==e-1-t)return!1;return!0}function Fx(n,e,t){const r=n.length+e.length,i=[];let s=0,a=0;for(let o=0;o<r;o++)t.indexOf(o)===-1?i.push(n[s++]):i.push(e[a++]);return i}function wi(n,e){const t=[],r=n.length;for(let s=0;s<r;s++)e.indexOf(s)===-1&&t.push(n[s]);const i=e.map(s=>n[s]);return[t,i]}function Rr(n,e){const t=e.map(r=>1);return Fx(n,t,e)}function li(n,e,t){k(Zd(e,t),()=>`${n} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function Xr(n,e){if(Zd(n,e))return null;const t=[];for(let r=0;r<e;++r)n.indexOf(r)===-1&&t.push(r);return n.forEach(r=>t.push(r)),t}function Jd(n){return n.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function jr(n,e){const t=[];for(let r=e-n;r<e;++r)t.push(r);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YR(n,e=null,t=!1){const i={x:$(n,"x","max")},s={reductionIndices:e,keepDims:t};return q.runKernel(C0,i,s)}const ao=H({max_:YR});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZR(n,e=null,t=!1){const i={x:$(n,"x","min")},s={axis:e,keepDims:t};return q.runKernel(D0,i,s)}const cd=H({min_:ZR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JR(n,e){let t=$(n,"base","pow"),r=$(e,"exp","pow");[t,r]=gn(t,r);const i={a:t,b:r};return q.runKernel(j0,i)}const pc=H({pow_:JR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bt(n,e){if((Wr(n)&&e!=="string"||Array.isArray(n))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&Wr(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return As(n,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QR(n){const t={x:$(n,"x","sqrt","float32")};return q.runKernel(b2,t)}const Ui=H({sqrt_:QR});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eN(n){const e=$(n,"x","square"),t={};return q.runKernel("Square",{x:e},t)}const ii=H({square_:eN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tN(n,e=null,t=!1){let r=$(n,"x","sum");r.dtype==="bool"&&(r=cn(r,"int32"));const i={x:r},s={axis:e,keepDims:t};return q.runKernel(S2,i,s)}const sn=H({sum_:tN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nN(n,e="euclidean",t=null,r=!1){n=$(n,"x","norm");const i=Ux(n,e,t);let s=i.shape;if(r){const a=Rn(t,n.shape);s=Rr(i.shape,a)}return ge(i,s)}function Ux(n,e,t=null){if(n.rank===0)return br(n);if(n.rank!==1&&t===null)return Ux(ge(n,[-1]),e,t);if(n.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return sn(br(n),t);if(e===1/0)return ao(br(n),t);if(e===-1/0)return cd(br(n),t);if(e==="euclidean"||e===2)return Ui(sn(pc(br(n),Bt(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return ao(sn(br(n),t[0]),t[1]-1);if(e===1/0)return ao(sn(br(n),t[1]),t[0]);if(e===-1/0)return cd(sn(br(n),t[1]),t[0]);if(e==="fro"||e==="euclidean")return Ui(sn(ii(n),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const pu=H({norm_:nN});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rN(n,e=null,t=!1){return pu(n,"euclidean",e,t)}const iN=H({euclideanNorm_:rN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sN(n){const t={x:$(n,"x","exp")};return q.runKernel(J1,t)}const Bi=H({exp_:sN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aN(n,e=0){const t=$(n,"x","expandDims","string_or_numeric");k(e<=t.rank,()=>"Axis must be <= rank of the tensor");const r={input:t},i={dim:e};return q.runKernel(Q1,r,i)}const kr=H({expandDims_:aN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oN(n){const t={x:$(n,"x","expm1")};return q.runKernel(e0,t)}const cN=H({expm1_:oN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lN(n,e){const t=$(n,"x","tile","string_or_numeric");k(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);const r={x:t},i={reps:e};return q.runKernel(Wd,r,i)}const cc=H({tile_:lN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uN(n,e,t,r="float32"){e==null&&(e=n);const i=pn([n,e],r),s=n<=e?n:e;for(let o=0;o<s;++o)i.set(1,o,o);const a=ge(i.toTensor(),[n,e]);if(t==null)return a;if(t.length===1)return cc(kr(a,0),[t[0],1,1]);if(t.length===2)return cc(kr(kr(a,0),0),[t[0],t[1],1,1]);if(t.length===3)return cc(kr(kr(kr(a,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}const Bx=H({eye_:uN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hN(n){const t={x:$(n,"x","floor","float32")};return q.runKernel(i0,t)}const Vx=H({floor_:hN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dN(n,e,t=0,r=0){const i=$(n,"x","gather"),s=$(e,"indices","gather","int32"),a={x:i,indices:s},o={axis:t,batchDims:r};return q.runKernel(o0,a,o)}const zx=H({gather_:dN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fN(n,e){let t=$(n,"a","greater","string_or_numeric"),r=$(e,"b","greater","string_or_numeric");[t,r]=gn(t,r),Gt(t.shape,r.shape);const i={a:t,b:r};return q.runKernel(l0,i)}const mu=H({greater_:fN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pN(n,e){let t=$(n,"a","greaterEqual","string_or_numeric"),r=$(e,"b","greaterEqual","string_or_numeric");[t,r]=gn(t,r),Gt(t.shape,r.shape);const i={a:t,b:r};return q.runKernel(u0,i)}const Gx=H({greaterEqual_:pN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mN(n){const t={input:$(n,"input","imag")};return q.runKernel(d0,t)}const gu=H({imag_:mN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gN(n){const t={x:$(n,"x","isFinite")};return q.runKernel(f0,t)}const xN=H({isFinite_:gN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yN(n){const t={x:$(n,"x","isInf")};return q.runKernel(p0,t)}const vN=H({isInf_:yN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _N(n){const t={x:$(n,"x","isNaN")};return q.runKernel(m0,t)}const bN=H({isNaN_:_N});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SN(n,e=.2){const r={x:$(n,"x","leakyRelu")},i={alpha:e};return q.runKernel(g0,r,i)}const Wx=H({leakyRelu_:SN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wN(n,e){let t=$(n,"a","less","string_or_numeric"),r=$(e,"b","less","string_or_numeric");[t,r]=gn(t,r),Gt(t.shape,r.shape);const i={a:t,b:r};return q.runKernel(x0,i)}const ld=H({less_:wN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EN(n,e){let t=$(n,"a","lessEqual","string_or_numeric"),r=$(e,"b","lessEqual","string_or_numeric");[t,r]=gn(t,r),Gt(t.shape,r.shape);const i={a:t,b:r};return q.runKernel(y0,i)}const Qd=H({lessEqual_:EN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TN(n,e,t){if(t<=0)throw new Error("The number of values should be positive.");const r={start:n,stop:e,num:t};return q.runKernel(v0,{},r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CN(n,e=5,t=1,r=1,i=.5){const s=$(n,"x","localResponseNormalization");k(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),k(po(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let a=s,o=!1;s.rank===3&&(o=!0,a=ge(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const c={x:a},l={depthRadius:e,bias:t,alpha:r,beta:i},u=q.runKernel(T0,c,l);return o?ge(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const AN=H({localResponseNormalization_:CN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RN(n){const t={x:$(n,"x","log","float32")};return q.runKernel(_0,t)}const mc=H({log_:RN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NN(n){const t={x:$(n,"x","log1p")};return q.runKernel(b0,t)}const Hx=H({log1p_:NN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MN(n,e){k(Vh(n),()=>"The f passed in variableGrads(f) must be a function"),k(e==null||Array.isArray(e)&&e.every(l=>l instanceof Bl),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const t=e!=null;if(!t){e=[];for(const l in q.registeredVariables)e.push(q.registeredVariables[l])}const r=t?e.filter(l=>!l.trainable):null,i=e.length;e=e.filter(l=>l.trainable),k(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${i} variables is trainable.`);const s=!0,{value:a,grads:o}=q.gradients(n,e,null,s);k(o.some(l=>l!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),k(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);const c={};return e.forEach((l,u)=>{o[u]!=null&&(c[l.name]=o[u])}),r!=null&&r.forEach(l=>c[l.name]=null),{value:a,grads:c}}function Vi(n){return q.customGrad(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IN(n){const t={x:$(n,"x","neg")};return q.runKernel(F0,t)}const bi=H({neg_:IN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DN(n){const t={x:$(n,"x","softplus")};return q.runKernel(_2,t)}const Xx=H({softplus_:DN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PN(n){const e=$(n,"x","logSigmoid");return Vi(r=>({value:bi(Xx(bi(r))),gradFunc:a=>Oe(a,ra(bi(r)))}))(e)}const ON=H({logSigmoid_:PN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $N(n,e){let t=$(n,"a","sub"),r=$(e,"b","sub");[t,r]=gn(t,r);const i={a:t,b:r};return q.runKernel(k2,i)}const Mt=H({sub_:$N});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LN(n,e=-1){const t=$(n,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return Vi((i,s)=>{const o=ao(i,e,!0),c=Mt(i,o),l=Mt(cn(c,"float32"),mc(sn(Bi(c),e,!0)));return s([l]),{value:l,gradFunc:(h,d)=>{const[f]=d,p=!0,x=Bi(f);return Mt(h,Oe(sn(h,e,p),x))}}})(t)}const kN=H({logSoftmax_:LN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FN(n,e=null,t=!1){const r=$(n,"x","logSumExp"),i=Rn(e,r.shape),s=ao(r,i,!0),a=Mt(r,s),o=Bi(a),c=sn(o,i),l=mc(c),u=ct(ge(s,l.shape),l);if(t){const h=Rr(u.shape,i);return ge(u,h)}return u}const jx=H({logSumExp_:FN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UN(n,e){const t=$(n,"a","logicalAnd","bool"),r=$(e,"b","logicalAnd","bool");Gt(t.shape,r.shape);const i={a:t,b:r};return q.runKernel(S0,i)}const Gl=H({logicalAnd_:UN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BN(n){const t={x:$(n,"x","logicalNot","bool")};return q.runKernel(w0,t)}const qx=H({logicalNot_:BN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VN(n,e){const t=$(n,"a","logicalOr","bool"),r=$(e,"b","logicalOr","bool");Gt(t.shape,r.shape);const i={a:t,b:r};return q.runKernel(E0,i)}const Kx=H({logicalOr_:VN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zN(n,e){const t=$(n,"a","logicalXor","bool"),r=$(e,"b","logicalXor","bool");return Gt(t.shape,r.shape),Gl(Kx(n,e),qx(Gl(n,e)))}const GN=H({logicalXor_:zN});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hl=2147483648;function WN(n,e,t="left"){const r=$(n,"sortedSequence","searchSorted"),i=$(e,"values","searchSorted"),s=r.shape[r.shape.length-1],a=i.shape[i.shape.length-1],o=ge(r,[-1,s]),c=ge(i,[-1,a]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==c.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(Ae(c.shape)>=hl)throw new Error(`values tensor size must less than ${hl}`);if(o.shape[1]>=hl)throw new Error(`trailing dim_size must less than ${hl} for int32 output type, was ${o.shape[1]}`);const l={sortedSequence:o,values:c},u={side:t};return q.runKernel(d2,l,u)}const ef=H({searchSorted_:WN});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HN(n,e){return ef(n,e,"left")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XN(n,e,t,r,i){const s=$(n,"x","maxPool"),a=1;let o=s,c=!1;s.rank===3&&(c=!0,o=ge(s,[1,s.shape[0],s.shape[1],s.shape[2]])),k(o.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`),k(xr(t,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),Hr("maxPool",r,i);const l={x:o},u={filterSize:e,strides:t,pad:r,dimRoundingMode:i},h=q.runKernel(R0,l,u);return c?ge(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Yx=H({maxPool_:XN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jN(n,e=[1,1,1],t,r,i,s="NDHWC"){const a=$(n,"x","maxPool3d");let o=a,c=!1;a.rank===4&&(c=!0,o=ge(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),k(o.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),k(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),Hr("maxPool3d",r,i);const l={x:o},u={filterSize:e,strides:t,pad:r,dimRoundingMode:i,dataFormat:s},h=q.runKernel(N0,l,u);return c?ge(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const qN=H({maxPool3d_:jN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KN(n,e,t,r,i=!1){const a={x:$(n,"x","maxPoolWithArgmax")},o={filterSize:e,strides:t,pad:r,includeBatchInIndex:i},c=q.runKernel(M0,a,o);return{result:c[0],indexes:c[1]}}const YN=H({maxPoolWithArgmax_:KN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZN(n,e){let t=$(n,"a","maximum"),r=$(e,"b","maximum");[t,r]=gn(t,r),t.dtype==="bool"&&(t=cn(t,"int32"),r=cn(r,"int32")),Gt(t.shape,r.shape);const i={a:t,b:r};return q.runKernel(A0,i)}const Zx=H({maximum_:ZN});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JN(n,e=null,t=!1){const i={x:$(n,"x","mean")},s={axis:e,keepDims:t};return q.runKernel(I0,i,s)}const Wl=H({mean_:JN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function da(n,e="float32"){if(Cr(n),e==="complex64"){const r=da(n,"float32"),i=da(n,"float32");return bs(r,i)}const t=_s(Ae(n),e);return q.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ea(n,e="float32"){if(Cr(n),e==="complex64"){const r=ea(n,"float32"),i=da(n,"float32");return bs(r,i)}const t=n1(Ae(n),e);return q.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QN(n,e,{indexing:t="xy"}={}){if(t!=="xy"&&t!=="ij")throw new TypeError(`${t} is not a valid third argument to meshgrid`);if(n===void 0)return[];let r=$(n,"x","meshgrid",n instanceof mn?n.dtype:"float32");if(e===void 0)return[r];let i=$(e,"y","meshgrid",e instanceof mn?e.dtype:"float32");const s=Ae(r.shape),a=Ae(i.shape);return t==="xy"?(r=ge(r,[1,-1]),i=ge(i,[-1,1]),[Zt(ea([a,1],r.dtype),r),Zt(i,ea([1,s],i.dtype))]):(r=ge(r,[-1,1]),i=ge(i,[1,-1]),[Zt(r,ea([1,a],r.dtype)),Zt(ea([s,1],i.dtype),i)])}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eM(n,e){let t=$(n,"a","minimum"),r=$(e,"b","minimum");[t,r]=gn(t,r),t.dtype==="bool"&&(t=cn(t,"int32"),r=cn(r,"int32")),Gt(t.shape,r.shape);const i={a:t,b:r};return q.runKernel(P0,i)}const Hl=H({minimum_:eM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tM(n,e,t){k(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);const r=$(n,"x","mirrorPad");if(r.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");k(e.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${e.length}.`);const i=t==="reflect"?1:0;for(let o=0;o<r.rank;o++)k(e[o].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),k(e[o][0]>=0&&e[o][0]<=r.shape[o]-i&&e[o][1]>=0&&e[o][1]<=r.shape[o]-i,()=>`Padding in dimension ${o} cannot be greater than or equal to ${r.shape[o]-i} or less than 0 for input of shape ${r.shape}`);const s={paddings:e,mode:t},a={x:r};return q.runKernel(O0,a,s)}const nM=H({mirrorPad_:tM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rM(n,e){let t=$(n,"a","mod"),r=$(e,"b","mod");[t,r]=gn(t,r);const i={a:t,b:r};return q.runKernel($0,i)}const iM=H({mod_:rM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sM(n,e=null,t=!1){n=$(n,"x","moments");const r=Rn(e,n.shape),i=Wl(n,r,t);let s=i.shape;t||(s=Rr(i.shape,r));const a=ii(Mt(cn(n,"float32"),ge(i,s))),o=Wl(a,r,t);return{mean:i,variance:o}}const aM=H({moments_:sM});function oM(n,e,t,r){const i=$(e,"data","multiRNNCell"),s=Vl(t,"c","multiRNNCell"),a=Vl(r,"h","multiRNNCell");let o=i;const c=[];for(let h=0;h<n.length;h++){const d=n[h](o,s[h],a[h]);c.push(d[0]),c.push(d[1]),o=d[1]}const l=[],u=[];for(let h=0;h<c.length;h+=2)l.push(c[h]),u.push(c[h+1]);return[l,u]}const cM=H({multiRNNCell_:oM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lM(n,e,t,r=!1){const i=$(n,"logits","multinomial"),s=i.size,a=i.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);t=t||Math.random();const c={logits:a===1?ge(i,[1,-1]):i},l={numSamples:e,seed:t,normalized:r},u=q.runKernel(L0,c,l);return a===1?ge(u,[u.size]):u}const uM=H({multinomial_:lM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hM(n,e){let t=$(n,"a","notEqual","string_or_numeric"),r=$(e,"b","notEqual","string_or_numeric");[t,r]=gn(t,r),Gt(t.shape,r.shape);const i={a:t,b:r};return q.runKernel(U0,i)}const Jx=H({notEqual_:hM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dM(n,e,t=1,r=0,i="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const a={indices:$(n,"indices","oneHot","int32")},o={dtype:i,depth:e,onValue:t,offValue:r};return q.runKernel(W0,a,o)}const fM=H({oneHot_:dM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pM(n){const t={x:$(n,"x","onesLike")};return q.runKernel(G0,t)}const mM=H({onesLike_:pM});function gM(n,e){const t=$(n,"v1","outerProduct"),r=$(e,"v2","outerProduct");k(t.rank===1&&r.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${r.rank}.`);const i=ge(t,[-1,1]),s=ge(r,[1,-1]);return Zt(i,s)}const xM=H({outerProduct_:gM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yM(n,e,t=0){const r=$(n,"x","pad");if(r.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const i={paddings:e,constantValue:t},s={x:r};return q.runKernel(X0,s,i)}const Dc=H({pad_:yM});function vM(n,e,t=0){return k(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),Dc(n,[e],t)}const _M=H({pad1d_:vM});function bM(n,e,t=0){return k(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Dc(n,e,t)}const SM=H({pad2d_:bM});function wM(n,e,t=0){return k(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Dc(n,e,t)}const EM=H({pad3d_:wM});function TM(n,e,t=0){return k(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Dc(n,e,t)}const CM=H({pad4d_:TM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AM(n,e,t){const r=$(n,"x","spaceToBatchND");k(r.rank>=1+e.length,()=>`input rank ${r.rank} should be > than [blockShape] ${e.length}`),k(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),k(r.shape.reduce((a,o,c)=>c>0&&c<=e.length?a&&(o+t[c-1][0]+t[c-1][1])%e[c-1]===0:a,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);const i={x:r},s={blockShape:e,paddings:t};return q.runKernel(w2,i,s)}const Qx=H({spaceToBatchND_:AM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RM(n,e,t,r,i,s,a){i==null&&(i=[1,1]),s==null&&(s=1),r===0&&(r="valid");const o=$(n,"x","maxPool");let c=o,l=!1;o.rank===3&&(l=!0,c=ge(o,[1,o.shape[0],o.shape[1],o.shape[2]])),k(xr(s,i),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${i}'`);const u=_a(c.shape,e,s,i,r),h=[u.dilationHeight,u.dilationWidth];let d;r==="same"?d=MM([u.filterHeight,u.filterWidth],h):d=[[0,0],[0,0]];const f=h[0]===1&&h[1]===1,[p,x]=NM([u.inHeight,u.inWidth],h,d),g=f?r:"valid",m=f?c:Qx(c,h,p),b=(t==="avg"?()=>Mx(m,e,s,g,a):()=>Yx(m,e,s,g,a))(),w=f?b:Ix(b,h,x);return l?ge(w,[w.shape[1],w.shape[2],w.shape[3]]):w}function NM(n,e,t){const r=t.map(u=>u[0]),i=t.map(u=>u[1]),s=n.concat(r,i),a=e.map((u,h)=>(u-s[h]%u)%u),o=i.map((u,h)=>u+a[h]),c=e.map((u,h)=>[r[h],o[h]]),l=e.map((u,h)=>[0,a[h]]);return[c,l]}function MM(n,e){const r=n.map((a,o)=>a+(a-1)*(e[o]-1)).map(a=>a-1),i=r.map(a=>Math.floor(a/2)),s=r.map((a,o)=>a-i[o]);return r.map((a,o)=>[i[o],s[o]])}const IM=H({pool_:RM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DM(n,e){const t=$(n,"x","prelu"),r=$(e,"alpha","prelu"),i={x:t,alpha:r};return q.runKernel(q0,i)}const ey=H({prelu_:DM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PM(n,e=null,t=!1){let r=$(n,"x","prod");r.dtype==="bool"&&(r=cn(r,"int32"));const i={x:r},s={axis:e,keepDims:t};return q.runKernel(K0,i,s)}const OM=H({prod_:PM});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $M(n,e,t,r){const i=n.map((u,h)=>$(u,`tensors${h}`,"raggedGather","int32")),s=$(e,"paramsDenseValues","raggedGather"),a=$(t,"indices","raggedGather","int32"),o={paramsNestedSplits:i,paramsDenseValues:s,indices:a},c={outputRaggedRank:r},l=q.runKernel(Y0,o,c);return{outputNestedSplits:l.slice(0,l.length-1),outputDenseValues:l[l.length-1]}}const LM=H({raggedGather_:$M});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kM(n,e,t){const r=$(n,"starts","raggedRange"),i=$(e,"limits","raggedRange",r.dtype),s=$(t,"deltas","raggedRange",r.dtype),a={starts:r,limits:i,deltas:s},o=q.runKernel(Z0,a);return{rtNestedSplits:o[0],rtDenseValues:o[1]}}const FM=H({raggedRange_:kM});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UM(n,e,t,r,i){const s=$(n,"shape","raggedTensorToTensor","int32"),a=$(e,"values","raggedTensorToTensor"),o=$(t,"defaultValue","raggedTensorToTensor",a.dtype),c=r.map((h,d)=>$(h,`tensors${d}`,"raggedTensorToTensor","int32")),l={shape:s,values:a,defaultValue:o,rowPartitionTensors:c},u={rowPartitionTypes:i};return q.runKernel(J0,l,u)}const BM=H({raggedTensorToTensor_:UM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VM(n,e,t){Cr(n);const r=Ae(n);let i=null;if(t==null||t==="float32")i=new Float32Array(r);else if(t==="int32")i=new Int32Array(r);else if(t==="bool")i=new Uint8Array(r);else throw new Error(`Unknown data type ${t}`);for(let s=0;s<r;s++)i[s]=e();return q.makeTensor(i,n,t)}const zM=H({rand_:VM});var tf={exports:{}};tf.exports;(function(n){(function(e,t,r){function i(c){var l=this,u=o();l.next=function(){var h=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=h-(l.c=h|0)},l.c=1,l.s0=u(" "),l.s1=u(" "),l.s2=u(" "),l.s0-=u(c),l.s0<0&&(l.s0+=1),l.s1-=u(c),l.s1<0&&(l.s1+=1),l.s2-=u(c),l.s2<0&&(l.s2+=1),u=null}function s(c,l){return l.c=c.c,l.s0=c.s0,l.s1=c.s1,l.s2=c.s2,l}function a(c,l){var u=new i(c),h=l&&l.state,d=u.next;return d.int32=function(){return u.next()*4294967296|0},d.double=function(){return d()+(d()*2097152|0)*11102230246251565e-32},d.quick=d,h&&(typeof h=="object"&&s(h,u),d.state=function(){return s(u,{})}),d}function o(){var c=4022871197,l=function(u){u=String(u);for(var h=0;h<u.length;h++){c+=u.charCodeAt(h);var d=.02519603282416938*c;c=d>>>0,d-=c,d*=c,c=d>>>0,d-=c,c+=d*4294967296}return(c>>>0)*23283064365386963e-26};return l}t&&t.exports?t.exports=a:this.alea=a})(vi,n)})(tf);var GM=tf.exports,nf={exports:{}};nf.exports;(function(n){(function(e,t,r){function i(o){var c=this,l="";c.x=0,c.y=0,c.z=0,c.w=0,c.next=function(){var h=c.x^c.x<<11;return c.x=c.y,c.y=c.z,c.z=c.w,c.w^=c.w>>>19^h^h>>>8},o===(o|0)?c.x=o:l+=o;for(var u=0;u<l.length+64;u++)c.x^=l.charCodeAt(u)|0,c.next()}function s(o,c){return c.x=o.x,c.y=o.y,c.z=o.z,c.w=o.w,c}function a(o,c){var l=new i(o),u=c&&c.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var d=l.next()>>>11,f=(l.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=l.next,h.quick=h,u&&(typeof u=="object"&&s(u,l),h.state=function(){return s(l,{})}),h}t&&t.exports?t.exports=a:this.xor128=a})(vi,n)})(nf);var WM=nf.exports,rf={exports:{}};rf.exports;(function(n){(function(e,t,r){function i(o){var c=this,l="";c.next=function(){var h=c.x^c.x>>>2;return c.x=c.y,c.y=c.z,c.z=c.w,c.w=c.v,(c.d=c.d+362437|0)+(c.v=c.v^c.v<<4^(h^h<<1))|0},c.x=0,c.y=0,c.z=0,c.w=0,c.v=0,o===(o|0)?c.x=o:l+=o;for(var u=0;u<l.length+64;u++)c.x^=l.charCodeAt(u)|0,u==l.length&&(c.d=c.x<<10^c.x>>>4),c.next()}function s(o,c){return c.x=o.x,c.y=o.y,c.z=o.z,c.w=o.w,c.v=o.v,c.d=o.d,c}function a(o,c){var l=new i(o),u=c&&c.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var d=l.next()>>>11,f=(l.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=l.next,h.quick=h,u&&(typeof u=="object"&&s(u,l),h.state=function(){return s(l,{})}),h}t&&t.exports?t.exports=a:this.xorwow=a})(vi,n)})(rf);var HM=rf.exports,sf={exports:{}};sf.exports;(function(n){(function(e,t,r){function i(o){var c=this;c.next=function(){var u=c.x,h=c.i,d,f;return d=u[h],d^=d>>>7,f=d^d<<24,d=u[h+1&7],f^=d^d>>>10,d=u[h+3&7],f^=d^d>>>3,d=u[h+4&7],f^=d^d<<7,d=u[h+7&7],d=d^d<<13,f^=d^d<<9,u[h]=f,c.i=h+1&7,f};function l(u,h){var d,f=[];if(h===(h|0))f[0]=h;else for(h=""+h,d=0;d<h.length;++d)f[d&7]=f[d&7]<<15^h.charCodeAt(d)+f[d+1&7]<<13;for(;f.length<8;)f.push(0);for(d=0;d<8&&f[d]===0;++d);for(d==8?f[7]=-1:f[d],u.x=f,u.i=0,d=256;d>0;--d)u.next()}l(c,o)}function s(o,c){return c.x=o.x.slice(),c.i=o.i,c}function a(o,c){o==null&&(o=+new Date);var l=new i(o),u=c&&c.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var d=l.next()>>>11,f=(l.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=l.next,h.quick=h,u&&(u.x&&s(u,l),h.state=function(){return s(l,{})}),h}t&&t.exports?t.exports=a:this.xorshift7=a})(vi,n)})(sf);var XM=sf.exports,af={exports:{}};af.exports;(function(n){(function(e,t,r){function i(o){var c=this;c.next=function(){var u=c.w,h=c.X,d=c.i,f,p;return c.w=u=u+1640531527|0,p=h[d+34&127],f=h[d=d+1&127],p^=p<<13,f^=f<<17,p^=p>>>15,f^=f>>>12,p=h[d]=p^f,c.i=d,p+(u^u>>>16)|0};function l(u,h){var d,f,p,x,g,m=[],_=128;for(h===(h|0)?(f=h,h=null):(h=h+"\0",f=0,_=Math.max(_,h.length)),p=0,x=-32;x<_;++x)h&&(f^=h.charCodeAt((x+32)%h.length)),x===0&&(g=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,x>=0&&(g=g+1640531527|0,d=m[x&127]^=f+g,p=d==0?p+1:0);for(p>=128&&(m[(h&&h.length||0)&127]=-1),p=127,x=4*128;x>0;--x)f=m[p+34&127],d=m[p=p+1&127],f^=f<<13,d^=d<<17,f^=f>>>15,d^=d>>>12,m[p]=f^d;u.w=g,u.X=m,u.i=p}l(c,o)}function s(o,c){return c.i=o.i,c.w=o.w,c.X=o.X.slice(),c}function a(o,c){o==null&&(o=+new Date);var l=new i(o),u=c&&c.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var d=l.next()>>>11,f=(l.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=l.next,h.quick=h,u&&(u.X&&s(u,l),h.state=function(){return s(l,{})}),h}t&&t.exports?t.exports=a:this.xor4096=a})(vi,n)})(af);var jM=af.exports,of={exports:{}};of.exports;(function(n){(function(e,t,r){function i(o){var c=this,l="";c.next=function(){var h=c.b,d=c.c,f=c.d,p=c.a;return h=h<<25^h>>>7^d,d=d-f|0,f=f<<24^f>>>8^p,p=p-h|0,c.b=h=h<<20^h>>>12^d,c.c=d=d-f|0,c.d=f<<16^d>>>16^p,c.a=p-h|0},c.a=0,c.b=0,c.c=-1640531527,c.d=1367130551,o===Math.floor(o)?(c.a=o/4294967296|0,c.b=o|0):l+=o;for(var u=0;u<l.length+20;u++)c.b^=l.charCodeAt(u)|0,c.next()}function s(o,c){return c.a=o.a,c.b=o.b,c.c=o.c,c.d=o.d,c}function a(o,c){var l=new i(o),u=c&&c.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var d=l.next()>>>11,f=(l.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=l.next,h.quick=h,u&&(typeof u=="object"&&s(u,l),h.state=function(){return s(l,{})}),h}t&&t.exports?t.exports=a:this.tychei=a})(vi,n)})(of);var qM=of.exports,ty={exports:{}};const KM={},YM=Object.freeze(Object.defineProperty({__proto__:null,default:KM},Symbol.toStringTag,{value:"Module"})),ZM=rT(YM);(function(n){(function(e,t,r){var i=256,s=6,a=52,o="random",c=r.pow(i,s),l=r.pow(2,a),u=l*2,h=i-1,d;function f(w,I,M){var D=[];I=I==!0?{entropy:!0}:I||{};var F=m(g(I.entropy?[w,b(t)]:w??_(),3),D),N=new p(D),A=function(){for(var B=N.g(s),J=c,Y=0;B<l;)B=(B+Y)*i,J*=i,Y=N.g(1);for(;B>=u;)B/=2,J/=2,Y>>>=1;return(B+Y)/J};return A.int32=function(){return N.g(4)|0},A.quick=function(){return N.g(4)/4294967296},A.double=A,m(b(N.S),t),(I.pass||M||function(B,J,Y,ae){return ae&&(ae.S&&x(ae,N),B.state=function(){return x(N,{})}),Y?(r[o]=B,J):B})(A,F,"global"in I?I.global:this==r,I.state)}function p(w){var I,M=w.length,D=this,F=0,N=D.i=D.j=0,A=D.S=[];for(M||(w=[M++]);F<i;)A[F]=F++;for(F=0;F<i;F++)A[F]=A[N=h&N+w[F%M]+(I=A[F])],A[N]=I;(D.g=function(B){for(var J,Y=0,ae=D.i,le=D.j,he=D.S;B--;)J=he[ae=h&ae+1],Y=Y*i+he[h&(he[ae]=he[le=h&le+J])+(he[le]=J)];return D.i=ae,D.j=le,Y})(i)}function x(w,I){return I.i=w.i,I.j=w.j,I.S=w.S.slice(),I}function g(w,I){var M=[],D=typeof w,F;if(I&&D=="object")for(F in w)try{M.push(g(w[F],I-1))}catch{}return M.length?M:D=="string"?w:w+"\0"}function m(w,I){for(var M=w+"",D,F=0;F<M.length;)I[h&F]=h&(D^=I[h&F]*19)+M.charCodeAt(F++);return b(I)}function _(){try{var w;return d&&(w=d.randomBytes)?w=w(i):(w=new Uint8Array(i),(e.crypto||e.msCrypto).getRandomValues(w)),b(w)}catch{var I=e.navigator,M=I&&I.plugins;return[+new Date,e,M,e.screen,b(t)]}}function b(w){return String.fromCharCode.apply(0,w)}if(m(r.random(),t),n.exports){n.exports=f;try{d=ZM}catch{}}else r["seed"+o]=f})(typeof self<"u"?self:vi,[],Math)})(ty);var JM=ty.exports,QM=GM,eI=WM,tI=HM,nI=XM,rI=jM,iI=qM,ba=JM;ba.alea=QM;ba.xor128=eI;ba.xorwow=tI;ba.xorshift7=nI;ba.xor4096=rI;ba.tychei=iI;var cf=ba;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lf{constructor(e,t,r,i,s){this.mean=e,this.stdDev=t,this.dtype=r,this.nextVal=NaN,this.truncated=i,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const a=s||Math.random();this.random=cf.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const i=this.nextVal;return this.nextVal=NaN,i}let e,t,r=!1;for(;!r;){let i,s,a;do i=2*this.random()-1,s=2*this.random()-1,a=i*i+s*s;while(a>=1||a===0);const o=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*i*o,t=this.mean+this.stdDev*s*o,(!this.truncated||this.isValidTruncated(e))&&(r=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class sI{constructor(e,t,r,i){this.alpha=e,this.beta=1/t,this.dtype=r;const s=i||Math.random();this.randu=cf.alea(s.toString()),this.randn=new lf(0,1,r,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,r,i,s,a;for(;;){do i=this.randn.nextValue(),a=1+this.c*i;while(a<=0);if(a*=a*a,e=i*i,t=1-.331*e*e,r=.5*e+this.d*(1-a+Math.log(a)),s=this.randu(),s<t||Math.log(s)<r)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}}class aI{constructor(e=0,t=1,r,i){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=r,i==null&&(i=Math.random()),typeof i=="number"&&(i=i.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=cf.alea(i)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oI(n,e,t=1,r="float32",i){if(Cr(n),t==null&&(t=1),r==null&&(r="float32"),r!=="float32"&&r!=="int32")throw new Error(`Unsupported data type ${r}`);const s=new sI(e,t,r,i),a=pn(n,r);for(let o=0;o<a.values.length;o++)a.values[o]=s.nextValue();return a.toTensor()}const cI=H({randomGamma_:oI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lI(n,e=0,t=1,r,i){if(Cr(n),r!=null&&r==="bool")throw new Error(`Unsupported data type ${r}`);const s=new lf(e,t,r,!1,i),a=pn(n,r);for(let o=0;o<a.values.length;o++)a.values[o]=s.nextValue();return a.toTensor()}const ny=H({randomNormal_:lI});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uI(n,e,t){if(e!=null&&e==="bool")throw new Error(`Unsupported data type ${e}`);return ny(n,0,1,e,t)}const hI=H({randomStandardNormal_:uI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dI(n,e=0,t=1,r="float32",i){Cr(n);const s=pn(n,r),a=new aI(e,t,null,i);for(let o=0;o<s.values.length;o++)s.values[o]=a.nextValue();return s.toTensor()}const uf=H({randomUniform_:dI});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fI(n,e,t,r){return uf(n,e,t,"int32",r)}const pI=H({randomUniformInt_:fI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gc(n,e,t=1,r="float32"){if(t===0)throw new Error("Cannot have a step of zero");const i={start:n,stop:e,step:t,dtype:r};return q.runKernel(Q0,{},i)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mI(n){const t={input:$(n,"input","real")};return q.runKernel(e2,t)}const xc=H({real_:mI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gI(n){const t={x:$(n,"x","reciprocal")};return q.runKernel(t2,t)}const xI=H({reciprocal_:gI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yI(n){const t={x:$(n,"x","relu")};return q.runKernel(n2,t)}const xu=H({relu_:yI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vI(n){const t={x:$(n,"x","relu6")};return q.runKernel(a2,t)}const ry=H({relu6_:vI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _I(n,e){const r={x:$(n,"x","reverse")},i={dims:e};return q.runKernel(o2,r,i)}const fa=H({reverse_:_I});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bI(n){const e=$(n,"x","reverse");return k(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),fa(e,0)}const SI=H({reverse1d_:bI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wI(n,e){const t=$(n,"x","reverse");return k(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),fa(t,e)}const EI=H({reverse2d_:wI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TI(n,e){const t=$(n,"x","reverse");return k(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),fa(t,e)}const CI=H({reverse3d_:TI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AI(n,e){const t=$(n,"x","reverse");return k(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),fa(t,e)}const RI=H({reverse4d_:AI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NI(n){const t={x:$(n,"x","round")};return q.runKernel(c2,t)}const iy=H({round_:NI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MI(n){const t={x:$(n,"x","rsqrt","float32")};return q.runKernel(l2,t)}const II=H({rsqrt_:MI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DI(n){const t={x:$(n,"x","selu")};return q.runKernel(p2,t)}const PI=H({selu_:DI});function OI(n,e,t,r,i,s=[1,1],a="NHWC"){const o=$(n,"x","separableConv2d"),c=$(e,"depthwiseFilter","separableConv2d"),l=$(t,"pointwiseFilter","separableConv2d");let u=o,h=!1;if(o.rank===3&&(h=!0,u=ge(o,[1,o.shape[0],o.shape[1],o.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");k(u.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${u.rank}.`),k(c.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${c.rank}.`),k(l.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${c.rank}.`),k(l.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),k(l.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);const d=c.shape[2],f=c.shape[3];k(l.shape[2]===d*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*f}, but got ${l.shape[2]}.`);const p=Yd(u,c,r,i,a,s),g=fu(p,l,1,"valid",a);return h?ge(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const $I=H({separableConv2d_:OI});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function LI(n,e){const t=$(n,"x","setdiff1d"),r=$(e,"y","setdiff1d");k(t.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${r.dtype}).`),k(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),k(r.rank===1,()=>`y should be 1D tensor, but got y (${r.shape}).`);const i=await t.data(),s=await r.data(),a=new Set(s);let o=0;for(let u=0;u<i.length;u++)a.has(i[u])||o++;const c=new xo([o],t.dtype),l=new xo([o],"int32");for(let u=0,h=0;u<i.length;u++)a.has(i[u])||(c.values[h]=i[u],l.values[h]=u,h++);return[c.toTensor(),l.toTensor()]}const kI=LI;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FI(n){const t={x:$(n,"x","sign")};return q.runKernel(y2,t)}const UI=H({sign_:FI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BI(n){const t={x:$(n,"x","sin","float32")};return q.runKernel(g2,t)}const VI=H({sin_:BI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zI(n){const t={x:$(n,"x","sinh")};return q.runKernel(x2,t)}const GI=H({sinh_:zI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WI(n,e,t){const r=$(n,"x","slice1d");return k(r.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),Nt(r,[e],[t])}const HI=H({slice1d_:WI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XI(n,e,t){const r=$(n,"x","slice2d");return k(r.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),Nt(r,e,t)}const jI=H({slice2d_:XI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qI(n,e,t){const r=$(n,"x","slice3d");return k(r.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),Nt(r,e,t)}const KI=H({slice3d_:qI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YI(n,e,t){const r=$(n,"x","slice4d");return k(r.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),Nt(r,e,t)}const ZI=H({slice4d_:YI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JI(n,e=-1){const t=$(n,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);const r={logits:t},i={dim:e};return q.runKernel(T2,r,i)}const QI=H({softmax_:JI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eD(n){k(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const e={input:n};return q.runKernel(t0,e)}const hf=H({fft_:eD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tD(n){k(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const e={input:n};return q.runKernel(h0,e)}const Xl=H({ifft_:tD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nD(n){const e=n.shape[n.shape.length-1],t=n.size/e;let r;if(e<=2){const i=ge(n,[t,e]);r=Xl(i)}else{const i=[t,2*(e-1)],s=ge(xc(n),[t,e]),a=ge(gu(n),[t,e]),o=fa(Nt(s,[0,1],[t,e-2]),1),c=Oe(fa(Nt(a,[0,1],[t,e-2]),1),Bt(-1)),l=On([s,o],1),u=On([a,c],1),h=ge(bs(l,u),[i[0],i[1]]);r=Xl(h)}if(r=xc(r),n.rank===3&&n.shape[0]!==0){const i=r,s=n.shape[0];r=ge(r,[s,r.shape[0]/s,r.shape[1]]),i.dispose()}return r}const sy=H({irfft_:nD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rD(n,e,t=0){const i={x:$(n,"x","split")},s={numOrSizeSplits:e,axis:t};return q.runKernel(E2,i,s)}const yc=H({split_:rD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iD(n,e){k(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let t=n.shape[n.shape.length-1];const r=n.size/t;let i;if(e!=null&&e<t){const p=n.shape.map(g=>0),x=n.shape.map(g=>g);x[n.shape.length-1]=e,i=Nt(n,p,x),t=e}else if(e!=null&&e>t){const p=n.shape.map(x=>x);p[n.shape.length-1]=e-t,i=On([n,da(p)],n.shape.length-1),t=e}else i=n;const s=Er(i),a=ge(bs(i,s),[r,t]),o=hf(a),c=Math.floor(t/2)+1,l=xc(o),u=gu(o),h=yc(l,[c,t-c],l.shape.length-1),d=yc(u,[c,t-c],u.shape.length-1),f=i.shape.slice();return f[i.shape.length-1]=c,ge(bs(h[0],d[0]),f)}const df=H({rfft_:iD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sD(n,e){let t=$(n,"a","squaredDifference"),r=$(e,"b","squaredDifference");[t,r]=gn(t,r),Gt(t.shape,r.shape);const i={a:t,b:r},s={};return q.runKernel(I2,i,s)}const ay=H({squaredDifference_:sD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aD(n,e){const t=$(n,"x","squeeze","string_or_numeric");return ge(t,Ts(t.shape,e).newShape)}const Sn=H({squeeze_:aD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oD(n,e=0){const t=Vl(n,"tensors","stack","string_or_numeric");k(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&k(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");const r=t,i={axis:e};return q.runKernel(H0,r,i)}const zi=H({stack_:oD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cD(n,e=0){const r={x:$(n,"x","step")},i={alpha:e};return q.runKernel(X2,r,i)}const oy=H({step_:cD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lD(n,e,t,r,i=0,s=0,a=0,o=0,c=0){const u={x:$(n,"x","stridedSlice","string_or_numeric")},h={begin:e,end:t,strides:r,beginMask:i,endMask:s,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:c};return q.runKernel(P2,u,h)}const uD=H({stridedSlice_:lD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hD(n){const t={x:$(n,"x","tan","float32")};return q.runKernel(F2,t)}const dD=H({tan_:hD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zn(n,e){To(n);const t=Cs(n,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return As(n,null,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ms(n,e,t){if(To(n),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const r=Cs(n,t);if(r.length!==2&&r.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return As(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cy(n,e,t){if(To(n),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const r=Cs(n,t);if(r.length!==3&&r.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return As(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fD(n,e,t){if(To(n),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const r=Cs(n,t);if(r.length!==4&&r.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return As(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pD(n,e,t){if(To(n),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const r=Cs(n,t);if(r.length!==5&&r.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return As(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mD(n,e,t){if(To(n),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const r=Cs(n,t);if(r.length!==6&&r.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||r,As(n,e,r,t)}function ly(n,e,t){const r=e.rank>1?e.shape[e.rank-1]:1,i=e.rank>1?e.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${n}, sliceDim: ${r}, and batchDim: ${i}.`;if(t.rank<i)throw new Error(s+` update.rank < ${i}. `);if(n.length<r+(t.rank-i))throw new Error(s+` Output shape length < ${r+(t.rank-i)}`);if(t.rank!==i+n.length-r)throw new Error(s+` update.rank != ${i+n.length-r}`);for(let a=0;a<i;++a)if(t.shape[a]!==e.shape[a])throw new Error(s+` updates.shape[${a}] (${t.shape[a]}) != indices.shape[${a}] (${e.shape[a]}).`);for(let a=0;a<t.rank-i;++a)if(t.shape[a+i]!==n[a+r])throw new Error(s+` updates.shape[${a+i}] (${t.shape[a+i]}) != shape[${a+i}] (${n[a+i]})`)}function ff(n,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}ly(t,e,n)}function yu(n,e,t){const r=e.shape.length,i=r>1?e.shape[r-1]:1,s=t.length;let a=1;for(let h=i;h<s;++h)a*=t[h];const o=i<1?1:i,c=Ae(e.shape)/o,l=[...Pn(t.slice(0,i)),1],u=Ae(t);return{sliceRank:i,numUpdates:c,sliceSize:a,strides:l,outputSize:u}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gD(n,e,t){const r=$(n,"tensor","tensorScatterupdate"),i=$(e,"indices","tensorScatterupdate","int32"),s=$(t,"updates","tensorScatterupdate");if(ff(s,i,r.shape),r.dtype!==s.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${s.dtype}.`);const a={tensor:r,indices:i,updates:s},o={};return q.runKernel(h2,a,o)}const xD=H({tensorScatterUpdate_:gD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yD(n,e=1,t=!0){const r=$(n,"x","topk");if(r.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const i=r.shape[r.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>i)throw new Error(`'k' passed to topk() must be <= the last dimension (${i}) but got ${e}`);const s={x:r},a={k:e,sorted:t},[o,c]=q.runKernel(B2,s,a);return{values:o,indices:c}}const vD=H({topk_:yD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _D(n,e=0,t=1,r,i){if(Cr(n),r!=null&&r==="bool")throw new Error("Unsupported data type $ { dtype }");const s=new lf(e,t,r,!0,i),a=pn(n,r);for(let o=0;o<a.values.length;o++)a.values[o]=s.nextValue();return a.toTensor()}const bD=H({truncatedNormal_:_D});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SD(n,e=0){const t=$(n,"x","unique","string_or_numeric");k(t.rank>0,()=>"The input tensor must be at least 1D");const r={x:t},i={axis:e},[s,a]=q.runKernel(z2,r,i);return{values:s,indices:a}}const wD=H({unique_:SD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ED(n,e,t){const r=$(n,"x","unsortedSegmentSum"),i=$(e,"segmentIds","unsortedSegmentSum","int32");k(po(t),()=>"numSegments must be of dtype int");const s={x:r,segmentIds:i},a={numSegments:t};return q.runKernel(W2,s,a)}const TD=H({unsortedSegmentSum_:ED});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CD(n,e=0){const t=$(n,"x","unstack","string_or_numeric");k(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);const r={value:t},i={axis:e};return q.runKernel(G2,r,i)}const Sa=H({unstack_:CD});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AD(n,e){return ef(n,e,"right")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RD(n,e=!0,t,r){return q.makeVariable(n,e,t,r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uy(n,e){const t=[];for(let s=0;s<e.length;s++)e[s]&&t.push(s);const r=pn(n,"int32"),i=pn([t.length,n.length],"int32");for(let s=0;s<t.length;s++){const a=r.indexToLoc(t[s]),o=s*n.length;i.values.set(a,o)}return i.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function ND(n){const e=$(n,"condition","whereAsync","bool"),t=await e.data(),r=uy(e.shape,t);return n!==e&&e.dispose(),r}const hy=ND;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function MD(n,e,t){const r=$(n,"tensor","boolMask"),i=$(e,"mask","boolMask","bool"),s=t??0,a=i.rank,o=r.shape;k(a>0,()=>"mask cannot be scalar"),Tr(o.slice(s,s+a),i.shape,"mask's shape must match the first K dimensions of tensor's shape,");let c=1;for(let x=s;x<s+a;x++)c*=o[x];const l=o.slice(0,s).concat([c],o.slice(s+a)),u=ge(r,l),h=ge(i,[-1]),d=await hy(h),f=Sn(d,[1]),p=zx(u,f,s);return n!==r&&r.dispose(),e!==i&&i.dispose(),f.dispose(),u.dispose(),h.dispose(),d.dispose(),p}const ID=MD;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DD(n,e,t){const r=$(n,"x","transpose");if(e==null&&(e=r.shape.map((a,o)=>o).reverse()),k(r.rank===e.length,()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${e}.`),e.forEach(a=>{k(a>=0&&a<r.rank,()=>`All entries in 'perm' must be between 0 and ${r.rank-1} but got ${e}`)}),r.rank<=1)return r.clone();const i={x:r},s={perm:e};return r.dtype==="complex64"?Ct(()=>{let a=xc(r),o=gu(r);return a=q.runKernel(Sl,{x:a},s),o=q.runKernel(Sl,{x:o},s),t&&(o=bi(o)),bs(a,o)}):q.runKernel(Sl,i,s)}const ud=H({transpose_:DD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PD(n,e,t,r,i=!0){const s=$(n,"v","movingAverage"),a=$(e,"x","movingAverage"),o=$(t,"decay","movingAverage");eC(s,a),k(fn(s.shape,a.shape),()=>"Shape mismatch in v and x");const c=Bt(1),l=Mt(c,o);let u=Oe(Mt(a,s),l);if(i){k(r!=null,()=>"When using zeroDebias: true, step is required.");const h=$(r,"step","movingAverage");u=Lt(u,Mt(c,pc(o,h)))}return ct(s,u)}const OD=H({movingAverage_:PD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $D(n,e,t){Cr(t);const r=$(n,"indices","scatterND","int32"),i=$(e,"updates","scatterND");ff(i,r,t);const s={indices:r,updates:i},a={shape:t};return q.runKernel(u2,s,a)}const LD=H({scatterND_:$D});function kD(n,e,t,r){if(n.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${n.dtype}.`);if(n.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${n.shape}.`);const i=n.rank>0?n.shape[0]:1,s=n.rank>1?n.shape[1]:1;if(t.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${s}.`);const a=e.size;if(!(e.rank===0||e.rank===1&&a===i))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${i}]`);if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FD(n,e,t,r=0){Cr(t);const i=$(n,"sparseIndices","sparseToDense","int32"),s=$(e,"sparseValues","sparseToDense","string_or_numeric"),a=$(r,"defaultValue","sparseToDense",s.dtype);kD(i,s,t,a);const o={sparseIndices:i,sparseValues:s,defaultValue:a},c={outputShape:t};return q.runKernel(M2,o,c)}const UD=H({sparseToDense_:FD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BD(n,e){const t=$(e,"indices","gatherND","int32"),i={params:$(n,"x","gatherND","string_or_numeric"),indices:t};return q.runKernel(c0,i)}const VD=H({gatherND_:BD});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zD(n,e){if(e==null)return n.shape.slice();if(fn(n.shape,e))return e;if(n.shape.length===e.length){const t=[];for(let r=0;r<n.shape.length;r++)e[r]==null&&n.shape[r]!=null?t.push(n.shape[r]):t.push(e[r]);return t}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GD(n,e,t,r){const i=$(n,"x","dropout");if(k(i.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${i.dtype} tensor instead.`),k(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return n instanceof mn?i.clone():i;const s=zD(i,t),a=1-e,o=Lt(Vx(ct(uf(s,0,1,"float32",r),a)),a);return Oe(i,o)}const WD=H({dropout_:GD});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dy(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}function pf(n,e,t){const r=1-n%2,i=new Float32Array(n);for(let s=0;s<n;++s){const a=2*Math.PI*s/(n+r-1);i[s]=e-t*Math.cos(a)}return zn(i,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function HD(n,e,t=1){const r=$(n,"predictions","inTopK"),i=$(e,"targets","inTopK");k(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),k(r.rank-1===i.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${i.rank}`),Tr(r.shape.slice(0,r.shape.length-1),i.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=r.shape[r.shape.length-1];k(t>0&&t<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${t}`);const a=await r.data(),o=await i.data(),[c,l]=[a.length/s,s],u=vs("bool",c);for(let h=0;h<c;h++){const d=h*l,f=a.subarray(d,d+l),p=[];for(let x=0;x<f.length;x++)p.push({value:f[x],index:x});p.sort((x,g)=>g.value-x.value),u[h]=0;for(let x=0;x<t;x++)if(p[x].index===o[h]){u[h]=1;break}}return n!==r&&r.dispose(),e!==i&&i.dispose(),_i(u,i.shape,"bool")}const XD=HD;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jD(n,e,t,r,i,s="NHWC",a){let o=n;n.rank===3&&(o=ge(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let c=e;c.rank===3&&(c=ge(e,[1,e.shape[0],e.shape[1],e.shape[2]])),k(o.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),k(c.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${c.shape}.`),k(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);const l=s==="NHWC"?o.shape[3]:o.shape[1],u=s==="NHWC"?c.shape[3]:c.shape[1];k(l===t[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${t[2]}.`),k(u===t[3],()=>`Error in conv2dDerFilter: depth of dy (${u}) must match output depth for filter (${t[3]}).`),Hr("conv2dDerFilter",i,a);const h={x:o,dy:c},d={strides:r,pad:i,dataFormat:s,dimRoundingMode:a,filterShape:t};return q.runKernel(I1,h,d)}const qD=H({conv2DBackpropFilter_:jD});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vu(n,e,t){if(t==null||t==="linear")return n;if(t==="relu")return Oe(n,oy(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function _u(n,e){let t=e;const r=$x(n.shape,e.shape);return r.length>0&&(t=sn(t,r)),ge(t,n.shape)}function bu(n,e,t,r){if(e==="linear")return n;if(e==="relu")return xu(n);if(e==="elu")return kx(n);if(e==="relu6")return ry(n);if(e==="prelu")return ey(n,t);if(e==="leakyrelu")return Wx(n,r);if(e==="sigmoid")return ra(n);throw new Error(`Unknown fused activation ${e}.`)}const Su=(n,e)=>!(n>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KD({x:n,filter:e,strides:t,pad:r,dataFormat:i="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:o,activation:c="linear",preluActivationWeights:l,leakyreluAlpha:u}){if(c=c||"linear",Su(q.state.gradientDepth,c)===!1){k(i==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${i} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let M=fu(n,e,t,r,i,s,a);return o!=null&&(M=ct(M,o)),bu(M,c,l,u)}const h=$(n,"x","conv2d","float32"),d=$(e,"filter","conv2d","float32");let f=h,p=!1;h.rank===3&&(p=!0,f=ge(h,[1,h.shape[0],h.shape[1],h.shape[2]])),k(f.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`),k(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),Hr("fused conv2d",r,a);const x=i==="NHWC"?f.shape[3]:f.shape[1];k(d.shape[2]===x,()=>`Error in conv2d: depth of input (${x}) must match input depth for filter ${d.shape[2]}.`),k(xr(t,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`);const g=Ar(f.shape,d.shape,t,s,r,a);let m;o!=null&&(m=$(o,"bias","fused conv2d"),[m]=gn(m,h),i==="NHWC"?Gt(g.outShape,m.shape):(k(m.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${m.shape.length}.`),k(m.shape.length===0||m.shape[0]===g.outChannels||m.shape[0]===1,()=>`Error in fused conv2d: bias shape (${m.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let _;if(l!=null){const M=l.shape;if(k(M.length<=1||M.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${M.length}.`),M.length===1)k(M[0]===1||M[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${M}) is not compatible with the number of output channels (${g.outChannels}).`);else if(M.length===3)try{Gt(M,g.outShape)}catch{const F=`Error in fused conv2d: PReLU activation weights (${M}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(F)}_=$(l,"prelu weights","fused conv2d")}const b=(M,D)=>{k(i==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${i} but only NHWC is currently supported.`);const[F,N,A,B]=D,J=vu(M,A,c);k(fc(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const Y=Ox(N.shape,J,F,t,r),ae=qD(N,J,F.shape,t,r),le=[Y,ae];if(B!=null){const he=_u(B,J);le.push(he)}return le},w={x:f,filter:d,bias:m,preluActivationWeights:_},I={strides:t,pad:r,dataFormat:i,dilations:s,dimRoundingMode:a,activation:c,leakyreluAlpha:u};return o==null?Vi((D,F,N)=>{let A=q.runKernel(jh,w,I);return N([F,D,A]),p&&(A=ge(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:b}})(f,d):Vi((D,F,N,A)=>{let B=q.runKernel(jh,w,I);return A([F,D,B,N]),p&&(B=ge(B,[B.shape[1],B.shape[2],B.shape[3]])),{value:B,gradFunc:b}})(f,d,m)}const YD=H({fusedConv2d_:KD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZD(n,e,t,r,i,s=[1,1],a){let o=n;n.rank===3&&(o=ge(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let c=e;c.rank===3&&(c=ge(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={x:o,dy:c},u={strides:r,pad:i,dimRoundingMode:a,dilations:s,filterShape:t};return q.runKernel(G1,l,u)}const JD=H({depthwiseConv2dNativeBackpropFilter_:ZD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QD(n,e,t,r,i,s=[1,1],a){let o=e,c=!1;e.rank===3&&(c=!0,o=ge(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={dy:o,filter:t},u={strides:r,pad:i,dimRoundingMode:a,dilations:s,inputShape:n},h=q.runKernel(W1,l,u);return c?ge(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const eP=H({depthwiseConv2dNativeBackpropInput_:QD});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tP({x:n,filter:e,strides:t,pad:r,dataFormat:i="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:o,activation:c="linear",preluActivationWeights:l,leakyreluAlpha:u}){if(Su(q.state.gradientDepth,c)===!1){let I=Yd(n,e,t,r,i,s,a);return o!=null&&(I=ct(I,o)),bu(I,c,l,u)}const h=$(n,"x","depthwiseConv2d","float32"),d=$(e,"filter","depthwiseConv2d","float32");let f=h,p=!1;h.rank===3&&(p=!0,f=ge(h,[1,h.shape[0],h.shape[1],h.shape[2]])),k(f.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),k(d.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),k(f.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),s==null&&(s=[1,1]),k(xr(t,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),Hr("fused depthwiseConv2d",r,a);const x=Ar(f.shape,d.shape,t,s,r,a,!0);let g;o!=null&&(g=$(o,"bias","fused conv2d"),[g]=gn(g,h),Gt(x.outShape,g.shape));let m;l!=null&&(m=$(l,"prelu weights","fused depthwiseConv2d"));const _=(I,M)=>{k(fc(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);const[D,F,N,A]=M,B=vu(I,N,c),J=eP(F.shape,B,D,t,r,s,a),Y=JD(F,B,D.shape,t,r,s,a);if(A!=null){const ae=_u(g,B);return[J,Y,ae]}return[J,Y]},b={x:f,filter:d,bias:g,preluActivationWeights:m},w={strides:t,pad:r,dataFormat:i,dilations:s,dimRoundingMode:a,activation:c,leakyreluAlpha:u};return o==null?Vi((M,D,F)=>{let N=q.runKernel(qh,b,w);return F([D,M,N]),p&&(N=ge(N,[N.shape[1],N.shape[2],N.shape[3]])),{value:N,gradFunc:_}})(f,d):Vi((M,D,F,N)=>{let A=q.runKernel(qh,b,w);return N([D,M,A,F]),p&&(A=ge(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:_}})(f,d,g)}const nP=H({fusedDepthwiseConv2d_:tP});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rP({a:n,b:e,transposeA:t=!1,transposeB:r=!1,bias:i,activation:s="linear",preluActivationWeights:a,leakyreluAlpha:o=.2}){if(Su(q.state.gradientDepth,s)===!1){let B=Zt(n,e,t,r);return i!=null&&(B=ct(B,i)),bu(B,s,a,o)}let c=$(n,"a","fused matMul"),l=$(e,"b","fused matMul");[c,l]=gn(c,l);const u=t?c.shape[c.rank-2]:c.shape[c.rank-1],h=r?l.shape[l.rank-1]:l.shape[l.rank-2],d=t?c.shape[c.rank-1]:c.shape[c.rank-2],f=r?l.shape[l.rank-2]:l.shape[l.rank-1],p=c.shape.slice(0,-2),x=l.shape.slice(0,-2),g=Ae(p),m=Ae(x);k(u===h,()=>`Error in fused matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${c.shape} and ${l.shape} and transposeA=${t} and transposeB=${r} must match.`);const b=Gt(c.shape.slice(0,-2),l.shape.slice(0,-2)).concat([d,f]),w=t?ge(c,[g,u,d]):ge(c,[g,d,u]),I=r?ge(l,[m,f,h]):ge(l,[m,h,f]);let M;i!=null&&(M=$(i,"bias","fused matMul"),[M]=gn(M,c),Gt(b,M.shape));let D;a!=null&&(D=$(a,"prelu weights","fused matMul"));const F=(B,J)=>{const[Y,ae,le,he]=J,de=vu(ge(B,le.shape),le,s);let oe,$e;if(!t&&!r?(oe=Zt(de,ae,!1,!0),$e=Zt(Y,de,!0,!1)):!t&&r?(oe=Zt(de,ae,!1,!1),$e=Zt(de,Y,!0,!1)):t&&!r?(oe=Zt(ae,de,!1,!0),$e=Zt(Y,de,!1,!1)):(oe=Zt(ae,de,!0,!0),$e=Zt(de,Y,!0,!0)),i!=null){const He=_u(he,de);return[oe,$e,He]}else return[oe,$e]},N={a:w,b:I,bias:M,preluActivationWeights:D},A={transposeA:t,transposeB:r,activation:s,leakyreluAlpha:o};return i==null?Vi((J,Y,ae)=>{const le=q.runKernel(Xh,N,A);return ae([J,Y,le]),{value:ge(le,b),gradFunc:F}})(w,I):Vi((J,Y,ae,le)=>{const he=q.runKernel(Xh,N,A);return le([J,Y,he,ae]),{value:ge(he,b),gradFunc:F}})(w,I,M)}const iP=H({fusedMatMul_:rP});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sP=Object.freeze(Object.defineProperty({__proto__:null,conv2d:YD,depthwiseConv2d:nP,matMul:iP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aP(n){return pf(n,.54,.46)}const oP=H({hammingWindow_:aP});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cP(n){return pf(n,.5,.5)}const fy=H({hannWindow_:cP});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lP(n,e,t,r=!1,i=0){let s=0;const a=[];for(;s+e<=n.size;)a.push(Nt(n,s,e)),s+=t;if(r)for(;s<n.size;){const o=s+e-n.size,c=On([Nt(n,s,e-o),Ic([o],i)]);a.push(c),s+=t}return a.length===0?ms([],[0,e]):ge(On(a),[a.length,e])}const py=H({frame_:lP});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uP(n,e,t,r,i=fy){r==null&&(r=dy(e));const s=py(n,e,t),a=Oe(s,i(e));return df(a,r)}const hP=H({stft_:uP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dP(n,e,t,r,i="bilinear",s=0){const a=$(n,"image","cropAndResize"),o=$(e,"boxes","cropAndResize","float32"),c=$(t,"boxInd","cropAndResize","int32"),l=o.shape[0];k(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),k(o.rank===2&&o.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`),k(c.rank===1&&c.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`),k(r.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),k(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),k(i==="bilinear"||i==="nearest",()=>`method must be bilinear or nearest, but was ${i}`);const u={image:a,boxes:o,boxInd:c},h={method:i,extrapolationValue:s,cropSize:r};return q.runKernel(U1,u,h)}const fP=H({cropAndResize_:dP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pP(n){const e=$(n,"image","flipLeftRight","float32");k(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const t={image:e};return q.runKernel(r0,t,{})}const mP=H({flipLeftRight_:pP});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gP(n){const e=$(n,"image","grayscaleToRGB"),t=e.rank-1,r=e.shape[t];k(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),k(r===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);const i=new Array(e.rank);return i.fill(1,0,t),i[t]=3,cc(e,i)}const xP=H({grayscaleToRGB_:gP});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yP(n){const e=$(n,"image","RGBToGrayscale"),t=e.rank-1,r=e.shape[t];k(e.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${e.rank}.`),k(r===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`);const i=e.dtype,s=cn(e,"float32"),a=zn([.2989,.587,.114]);let o;switch(e.rank){case 2:o=Za("ij,j->i",s,a);break;case 3:o=Za("ijk,k->ij",s,a);break;case 4:o=Za("ijkl,l->ijk",s,a);break;case 5:o=Za("ijklm,m->ijkl",s,a);break;case 6:o=Za("ijklmn,n->ijklm",s,a);break;default:throw new Error("Not a valid tensor rank.")}return o=kr(o,-1),cn(o,i)}const vP=H({rgbToGrayscale_:yP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _P(n,e,t=0,r=.5){const i=$(n,"image","rotateWithOffset","float32");k(i.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${i.rank}.`);const s={image:i},a={radians:e,fillValue:t,center:r};return q.runKernel(j2,s,a)}const bP=H({rotateWithOffset_:_P});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ro(n,e,t,r,i,s){r==null&&(r=.5),i==null&&(i=Number.NEGATIVE_INFINITY),s==null&&(s=0);const a=n.shape[0];return t=Math.min(t,a),k(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),k(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),k(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),k(e.rank===1,()=>"scores must be a 1D tensor"),k(e.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`),k(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:t,iouThreshold:r,scoreThreshold:i,softNmsSigma:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SP(n,e,t,r=.5,i=Number.NEGATIVE_INFINITY){const s=$(n,"boxes","nonMaxSuppression","float32"),a=$(e,"scores","nonMaxSuppression","float32"),o=Ro(s,a,t,r,i);t=o.maxOutputSize,r=o.iouThreshold,i=o.scoreThreshold;const c={maxOutputSize:t,iouThreshold:r,scoreThreshold:i};return q.runKernel(B0,{boxes:s,scores:a},c)}const wP=H({nonMaxSuppression_:SP});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EP(n,e,t){const r=TP(n,e,t),i=r<0?-(r+1):r;n.splice(i,0,e)}function TP(n,e,t){return AP(n,e,t||CP)}function CP(n,e){return n>e?1:n<e?-1:0}function AP(n,e,t){let r=0,i=n.length,s=0,a=!1;for(;r<i;){s=r+(i-r>>>1);const o=t(e,n[s]);o>0?r=s+1:(i=s,a=!o)}return a?r:-r-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function my(n,e,t,r,i){return mf(n,e,t,r,i,0)}function gy(n,e,t,r,i,s){return mf(n,e,t,r,i,0,!1,s,!0)}function xy(n,e,t,r,i,s){return mf(n,e,t,r,i,s,!0)}function mf(n,e,t,r,i,s,a=!1,o=!1,c=!1){const l=[];for(let g=0;g<e.length;g++)e[g]>i&&l.push({score:e[g],boxIndex:g,suppressBeginIndex:0});l.sort(vm);const u=s>0?-.5/s:0,h=[],d=[];for(;h.length<t&&l.length>0;){const g=l.pop(),{score:m,boxIndex:_,suppressBeginIndex:b}=g;if(m<i)break;let w=!1;for(let I=h.length-1;I>=b;--I){const M=RP(n,_,h[I]);if(M>=r){w=!0;break}if(g.score=g.score*NP(r,u,M),g.score<=i)break}g.suppressBeginIndex=h.length,w||(g.score===m?(h.push(_),d.push(g.score)):g.score>i&&EP(l,g,vm))}const f=h.length,p=t-f;o&&p>0&&(h.push(...new Array(p).fill(0)),d.push(...new Array(p).fill(0)));const x={selectedIndices:h};return a&&(x.selectedScores=d),c&&(x.validOutputs=f),x}function RP(n,e,t){const r=n.subarray(e*4,e*4+4),i=n.subarray(t*4,t*4+4),s=Math.min(r[0],r[2]),a=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),c=Math.max(r[1],r[3]),l=Math.min(i[0],i[2]),u=Math.min(i[1],i[3]),h=Math.max(i[0],i[2]),d=Math.max(i[1],i[3]),f=(o-s)*(c-a),p=(h-l)*(d-u);if(f<=0||p<=0)return 0;const x=Math.max(s,l),g=Math.max(a,u),m=Math.min(o,h),_=Math.min(c,d),b=Math.max(m-x,0)*Math.max(_-g,0);return b/(f+p-b)}function NP(n,e,t){const r=Math.exp(e*t*t);return t<=n?r:0}function vm(n,e){return n.score-e.score||n.score===e.score&&e.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function MP(n,e,t,r=.5,i=Number.NEGATIVE_INFINITY){const s=$(n,"boxes","nonMaxSuppressionAsync"),a=$(e,"scores","nonMaxSuppressionAsync"),o=Ro(s,a,t,r,i);t=o.maxOutputSize,r=o.iouThreshold,i=o.scoreThreshold;const c=await Promise.all([s.data(),a.data()]),l=c[0],u=c[1],{selectedIndices:h}=my(l,u,t,r,i);return s!==n&&s.dispose(),a!==e&&a.dispose(),zn(h,"int32")}const IP=MP;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DP(n,e,t,r=.5,i=Number.NEGATIVE_INFINITY,s=0){const a=$(n,"boxes","nonMaxSuppression"),o=$(e,"scores","nonMaxSuppression"),c=Ro(a,o,t,r,i,s);t=c.maxOutputSize,r=c.iouThreshold,i=c.scoreThreshold,s=c.softNmsSigma;const l={boxes:a,scores:o},u={maxOutputSize:t,iouThreshold:r,scoreThreshold:i,softNmsSigma:s},h=q.runKernel(z0,l,u);return{selectedIndices:h[0],selectedScores:h[1]}}const PP=H({nonMaxSuppressionWithScore_:DP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function OP(n,e,t,r=.5,i=Number.NEGATIVE_INFINITY,s=0){const a=$(n,"boxes","nonMaxSuppressionAsync"),o=$(e,"scores","nonMaxSuppressionAsync"),c=Ro(a,o,t,r,i,s);t=c.maxOutputSize,r=c.iouThreshold,i=c.scoreThreshold,s=c.softNmsSigma;const l=await Promise.all([a.data(),o.data()]),u=l[0],h=l[1],{selectedIndices:d,selectedScores:f}=xy(u,h,t,r,i,s);return a!==n&&a.dispose(),o!==e&&o.dispose(),{selectedIndices:zn(d,"int32"),selectedScores:zn(f)}}const $P=OP;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LP(n,e,t,r=.5,i=Number.NEGATIVE_INFINITY,s=!1){const a=$(n,"boxes","nonMaxSuppression"),o=$(e,"scores","nonMaxSuppression"),c=Ro(a,o,t,r,i,null),l=c.maxOutputSize,u=c.iouThreshold,h=c.scoreThreshold,d={boxes:a,scores:o},f={maxOutputSize:l,iouThreshold:u,scoreThreshold:h,padToMaxOutputSize:s},p=q.runKernel(V0,d,f);return{selectedIndices:p[0],validOutputs:p[1]}}const kP=H({nonMaxSuppressionPadded_:LP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function FP(n,e,t,r=.5,i=Number.NEGATIVE_INFINITY,s=!1){const a=$(n,"boxes","nonMaxSuppressionAsync"),o=$(e,"scores","nonMaxSuppressionAsync"),c=Ro(a,o,t,r,i,null),l=c.maxOutputSize,u=c.iouThreshold,h=c.scoreThreshold,[d,f]=await Promise.all([a.data(),o.data()]),{selectedIndices:p,validOutputs:x}=gy(d,f,l,u,h,s);return a!==n&&a.dispose(),o!==e&&o.dispose(),{selectedIndices:zn(p,"int32"),validOutputs:Bt(x,"int32")}}const UP=FP;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BP(n,e,t=!1,r=!1){const i=$(n,"images","resizeBilinear");k(i.rank===3||i.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${i.rank}.`),k(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),k(r===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=i,a=!1;i.rank===3&&(a=!0,s=ge(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const o={images:s},c={alignCorners:t,halfPixelCenters:r,size:e},l=q.runKernel(s2,o,c);return a?ge(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const VP=H({resizeBilinear_:BP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zP(n,e,t=!1,r=!1){const i=$(n,"images","resizeNearestNeighbor");k(i.rank===3||i.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${i.rank}.`),k(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),k(i.dtype==="float32"||i.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),k(r===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=i,a=!1;i.rank===3&&(a=!0,s=ge(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const o={images:s},c={alignCorners:t,halfPixelCenters:r,size:e},l=q.runKernel(i2,o,c);return a?ge(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const GP=H({resizeNearestNeighbor_:zP});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WP(n,e="binary",t=!1,r=.5){const i=$(n,"image","threshold"),s=.2989,a=.587,o=.114,c=i.shape[0]*i.shape[1];let l=Oe(zn([r]),255),u,h,d,f;if(k(i.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${i.rank}.`),k(i.shape[2]===3||i.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${i.shape[2]}.`),k(i.dtype==="int32"||i.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${i.dtype}.`),k(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),i.shape[2]===3){[u,h,d]=yc(i,[1,1,1],-1);const g=Oe(u,s),m=Oe(h,a),_=Oe(d,o);f=ct(ct(g,m),_)}else f=n;if(e==="otsu"){const g=Dx(cn(iy(f),"int32"),_i([]),256);l=HP(g,c)}const p=t?Qd(f,l):mu(f,l);return cn(Oe(p,255),"int32")}function HP(n,e){let t=zn([-1]),r=zn([0]),i=zn([0]),s,a,o,c,l,u;for(let h=0;h<n.size-1;h++){s=Nt(n,0,h+1),a=Nt(n,h+1),l=Lt(sn(s),e),u=Lt(sn(a),e);const d=sn(Oe(s,gc(0,s.size)));o=Lt(d,sn(s));const f=Ic(a.shape,s.size),p=ct(gc(0,a.size),f),x=Oe(a,p);c=Lt(sn(x),sn(a));const g=Mt(o,c),m=Mt(o,c),_=Oe(l,u);i=Oe(Oe(_,g),m);const b=mu(i,r);r=ps(b,i,r),t=ps(b,zn([h]),t)}return t}const XP=H({threshold_:WP});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jP(n,e,t="nearest",r="constant",i=0,s){const a=$(n,"image","transform","float32"),o=$(e,"transforms","transform","float32");k(a.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),k(o.rank===2&&(o.shape[0]===a.shape[0]||o.shape[0]===1)&&o.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),k(s==null||s.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);const c={image:a,transforms:o},l={interpolation:t,fillMode:r,fillValue:i,outputShape:s};return q.runKernel(V2,c,l)}const qP=H({transform_:jP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KP(n,e,t){const r=$(n,"a","bandPart");k(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const i=r.shape,[s,a]=r.shape.slice(-2);let o,c;typeof e=="number"?(k(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),k(e<=s,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${s}).`),o=$(e<0?s:e,"numLower","bandPart")):(k(e.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),o=ps(ld(e,0),s,Hl(e,s))),typeof t=="number"?(k(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`),k(t<=a,()=>`bandPart(): numUpper (${t}) must not be greater than the number of columns (${a}).`),c=$(t<0?a:t,"numUpper","bandPart")):(k(t.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),c=ps(ld(t,0),a,Hl(t,a)));const l=ge(gc(0,s,1,"int32"),[-1,1]),u=gc(0,a,1,"int32"),h=Mt(l,u),d=Gl(Qd(h,o),Gx(h,bi(c))),f=da([s,a],r.dtype);return ge(zi(Sa(ge(r,[-1,s,a])).map(p=>ps(d,p,f))),i)}const YP=H({bandPart_:KP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZP(n){let e;if(Array.isArray(n)){e=!1,k(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const i=n[0].shape[0];for(let s=1;s<n.length;++s)k(n[s].shape[0]===i,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[s].shape[0]} vs. ${i})`)}else e=!0,n=yc(n,n.shape[0],0).map(i=>Sn(i,[0]));k(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const t=[],r=n;for(let i=0;i<n.length;++i)t.push(q.tidy(()=>{let s=r[i];if(i>0)for(let a=0;a<i;++a){const o=Oe(sn(Oe(t[a],s)),t[a]);s=Mt(s,o)}return Lt(s,pu(s,"euclidean"))}));return e?zi(t,0):t}const JP=H({gramSchmidt_:ZP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QP(n,e=!1){if(k(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return _m(n,e);{const t=n.shape.slice(0,n.shape.length-2).reduce((c,l)=>c*l),r=Sa(ge(n,[t,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),i=[],s=[];r.forEach(c=>{const[l,u]=_m(c,e);i.push(l),s.push(u)});const a=ge(zi(i,0),n.shape),o=ge(zi(s,0),n.shape);return[a,o]}}function _m(n,e=!1){return q.tidy(()=>{k(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const t=n.shape[0],r=n.shape[1];let i=Bx(t),s=fs(n);const a=ms([[1]],[1,1]);let o=fs(a);const c=t>=r?r:t;for(let l=0;l<c;++l){const u=s,h=o,d=i;[o,s,i]=q.tidy(()=>{const f=Nt(s,[l,l],[t-l,1]),p=pu(f),x=Nt(s,[l,l],[1,1]),g=ps(mu(x,0),ms([[-1]]),ms([[1]])),m=Mt(x,Oe(g,p)),_=Lt(f,m);_.shape[0]===1?o=fs(a):o=On([a,Nt(_,[1,0],[_.shape[0]-1,_.shape[1]])],0);const b=bi(Lt(Zt(g,m),p)),w=Nt(s,[l,0],[t-l,r]),I=Oe(b,o),M=ud(o);if(l===0)s=Mt(w,Zt(I,Zt(M,w)));else{const N=Mt(w,Zt(I,Zt(M,w)));s=On([Nt(s,[0,0],[l,r]),N],0)}const D=ud(I),F=Nt(i,[0,l],[t,i.shape[1]-l]);if(l===0)i=Mt(F,Zt(Zt(F,o),D));else{const N=Mt(F,Zt(Zt(F,o),D));i=On([Nt(i,[0,0],[t,l]),N],1)}return[o,s,i]}),dn([u,h,d])}return!e&&t>r&&(i=Nt(i,[0,0],[t,r]),s=Nt(s,[0,0],[r,r])),[i,s]})}const eO=H({qr_:QP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var er;(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(er||(er={}));function tO(n,e,t=er.SUM_BY_NONZERO_WEIGHTS){const r=$(n,"losses","computeWeightedLoss");let i=null;e!=null&&(i=$(e,"weights","computeWeightedLoss"));const s=i==null?r:Oe(r,i);if(t===er.NONE)return s;if(t===er.SUM)return sn(s);if(t===er.MEAN){if(i==null)return Wl(s);{const a=r.size/i.size,o=Lt(sn(s),sn(i));return a>1?Lt(o,Bt(a)):o}}if(t===er.SUM_BY_NONZERO_WEIGHTS){if(i==null)return Lt(sn(s),Bt(r.size));{const a=Oe(i,ea(r.shape)),o=cn(sn(Jx(a,Bt(0))),"float32");return Lt(sn(s),o)}}throw Error(`Unknown reduction: ${t}`)}const Hi=H({computeWeightedLoss_:tO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nO(n,e,t,r=er.SUM_BY_NONZERO_WEIGHTS){const i=$(n,"labels","absoluteDifference"),s=$(e,"predictions","absoluteDifference");let a=null;t!=null&&(a=$(t,"weights","absoluteDifference")),Tr(i.shape,s.shape,"Error in absoluteDifference: ");const o=br(Mt(i,s));return Hi(o,a,r)}const rO=H({absoluteDifference_:nO});function iO(n,e,t,r,i=er.SUM_BY_NONZERO_WEIGHTS){const s=$(n,"labels","cosineDistance"),a=$(e,"predictions","cosineDistance");let o=null;r!=null&&(o=$(r,"weights","cosineDistance")),Tr(s.shape,a.shape,"Error in cosineDistance: ");const c=Bt(1),l=Mt(c,sn(Oe(s,a),t,!0));return Hi(l,o,i)}const sO=H({cosineDistance_:iO});function aO(n,e,t,r=er.SUM_BY_NONZERO_WEIGHTS){let i=$(n,"labels","hingeLoss");const s=$(e,"predictions","hingeLoss");let a=null;t!=null&&(a=$(t,"weights","hingeLoss")),Tr(i.shape,s.shape,"Error in hingeLoss: ");const o=Bt(1);i=Mt(Oe(Bt(2),i),o);const c=xu(Mt(o,Oe(i,s)));return Hi(c,a,r)}const oO=H({hingeLoss_:aO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cO(n,e,t,r=1,i=er.SUM_BY_NONZERO_WEIGHTS){const s=$(n,"labels","huberLoss"),a=$(e,"predictions","huberLoss");let o=null;t!=null&&(o=$(t,"weights","huberLoss")),Tr(s.shape,a.shape,"Error in huberLoss: ");const c=Bt(r),l=br(Mt(a,s)),u=Hl(l,c),h=Mt(l,u),d=ct(Oe(Bt(.5),ii(u)),Oe(c,h));return Hi(d,o,i)}const lO=H({huberLoss_:cO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uO(n,e,t,r=1e-7,i=er.SUM_BY_NONZERO_WEIGHTS){const s=$(n,"labels","logLoss"),a=$(e,"predictions","logLoss");let o=null;t!=null&&(o=$(t,"weights","logLoss")),Tr(s.shape,a.shape,"Error in logLoss: ");const c=Bt(1),l=Bt(r),u=bi(Oe(s,mc(ct(a,l)))),h=Oe(Mt(c,s),mc(ct(Mt(c,a),l))),d=Mt(u,h);return Hi(d,o,i)}const hO=H({logLoss_:uO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dO(n,e,t,r=er.SUM_BY_NONZERO_WEIGHTS){const i=$(n,"labels","meanSquaredError"),s=$(e,"predictions","meanSquaredError");let a=null;t!=null&&(a=$(t,"weights","meanSquaredError")),Tr(i.shape,s.shape,"Error in meanSquaredError: ");const o=ay(i,s);return Hi(o,a,r)}const fO=H({meanSquaredError_:dO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pO(n,e){const t=$(n,"labels","sigmoidCrossEntropyWithLogits"),r=$(e,"logits","sigmoidCrossEntropyWithLogits");Tr(t.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const i=xu(r),s=Oe(r,t),a=Hx(Bi(bi(br(r))));return ct(Mt(i,s),a)}function mO(n,e,t,r=0,i=er.SUM_BY_NONZERO_WEIGHTS){let s=$(n,"multiClassLabels","sigmoidCrossEntropy");const a=$(e,"logits","sigmoidCrossEntropy");let o=null;if(t!=null&&(o=$(t,"weights","sigmoidCrossEntropy")),Tr(s.shape,a.shape,"Error in sigmoidCrossEntropy: "),r>0){const l=Bt(r),u=Bt(1),h=Bt(.5);s=ct(Oe(s,Mt(u,l)),Oe(h,l))}const c=pO(s,a);return Hi(c,o,i)}const gO=H({sigmoidCrossEntropy_:mO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xO(n,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return Vi((i,s,a)=>{const c=jx(s,[t],!0),l=Mt(cn(s,"float32"),c);a([i,l]);const u=bi(Oe(l,i));return{value:sn(u,[t]),gradFunc:(f,p)=>{const[x,g]=p,m=Rr(f.shape,[t]);return[Oe(ge(f,m),Mt(cn(x,"float32"),Bi(g))),Oe(ge(f,m),Mt(Bi(g),cn(x,"float32")))]}}})(n,e)}function yO(n,e,t,r=0,i=er.SUM_BY_NONZERO_WEIGHTS){let s=$(n,"onehotLabels","softmaxCrossEntropy");const a=$(e,"logits","softmaxCrossEntropy");let o=null;if(t!=null&&(o=$(t,"weights","softmaxCrossEntropy")),Tr(s.shape,a.shape,"Error in softmaxCrossEntropy: "),r>0){const l=Bt(r),u=Bt(1),h=Bt(s.shape[1]);s=ct(Oe(s,Mt(u,l)),Lt(l,h))}const c=xO(s,a);return Hi(c,o,i)}const vO=H({softmaxCrossEntropy_:yO});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _O(n,e,t,r){const i=$(n,"indices","sparseFillEmptyRows","int32"),s=$(e,"values","sparseFillEmptyRows"),a=$(t,"denseShape","sparseFillEmptyRows","int32"),o=$(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(i.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${i.shape}`);if(s.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(a.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(o.rank!==0)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const c={indices:i,values:s,denseShape:a,defaultValue:o},l=q.runKernel(C2,c);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}const bO=H({sparseFillEmptyRows_:_O});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SO(n,e,t){const r=$(n,"inputIndices","sparseReshape","int32"),i=$(e,"inputShape","sparseReshape","int32"),s=$(t,"newShape","sparseReshape","int32");if(r.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${r.shape}`);if(i.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${i.shape}`);if(s.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);const a={inputIndices:r,inputShape:i,newShape:s},o=q.runKernel(A2,a);return{outputIndices:o[0],outputShape:o[1]}}const wO=H({sparseReshape_:SO});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EO(n,e,t){const r=$(n,"data","sparseSegmentMean"),i=$(e,"indices","sparseSegmentMean","int32"),s=$(t,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${i.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${s.shape}`);const a={data:r,indices:i,segmentIds:s};return q.runKernel(R2,a)}const TO=H({sparseSegmentMean_:EO});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CO(n,e,t){const r=$(n,"data","sparseSegmentSum"),i=$(e,"indices","sparseSegmentSum","int32"),s=$(t,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${i.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${s.shape}`);const a={data:r,indices:i,segmentIds:s};return q.runKernel(N2,a)}const AO=H({sparseSegmentSum_:CO});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RO(n,e,t,r,i,s,a,o){const c=$(n,"data","stringNGrams","string");if(c.dtype!=="string")throw new Error("Data must be of datatype string");if(c.shape.length!==1)throw new Error(`Data must be a vector, saw: ${c.shape}`);const l=$(e,"dataSplits","stringNGrams");if(l.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const u={separator:t,nGramWidths:r,leftPad:i,rightPad:s,padWidth:a,preserveShortSequences:o},h={data:c,dataSplits:l},d=q.runKernel(O2,h,u);return{nGrams:d[0],nGramsSplits:d[1]}}const NO=H({stringNGrams_:RO});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MO(n,e,t=!0){const r=$(n,"input","stringSplit","string"),i=$(e,"delimiter","stringSplit","string");if(r.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(i.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${i.shape}`);const s={skipEmpty:t},a={input:r,delimiter:i},o=q.runKernel($2,a,s);return{indices:o[0],values:o[1],shape:o[2]}}const IO=H({stringSplit_:MO});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DO(n,e){const t=$(n,"input","stringToHashBucketFast","string"),r={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const i={input:t};return q.runKernel(L2,i,r)}const PO=H({stringToHashBucketFast_:DO});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OO(n,e,t,r=!0){const i=$(n,"input","staticRegexReplace","string"),s={pattern:e,rewrite:t,replaceGlobal:r};return q.runKernel(D2,{x:i},s)}const $O=H({staticRegexReplace_:OO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LO={fft:hf,ifft:Xl,rfft:df,irfft:sy},kO={hammingWindow:oP,hannWindow:fy,frame:py,stft:hP},No={flipLeftRight:mP,grayscaleToRGB:xP,resizeNearestNeighbor:GP,resizeBilinear:VP,rgbToGrayscale:vP,rotateWithOffset:bP,cropAndResize:fP,nonMaxSuppression:wP,nonMaxSuppressionAsync:IP,nonMaxSuppressionWithScore:PP,nonMaxSuppressionWithScoreAsync:$P,nonMaxSuppressionPadded:kP,nonMaxSuppressionPaddedAsync:UP,threshold:XP,transform:qP},FO={bandPart:YP,gramSchmidt:JP,qr:eO},UO={absoluteDifference:rO,computeWeightedLoss:Hi,cosineDistance:sO,hingeLoss:oO,huberLoss:lO,logLoss:hO,meanSquaredError:fO,sigmoidCrossEntropy:gO,softmaxCrossEntropy:vO},BO={sparseFillEmptyRows:bO,sparseReshape:wO,sparseSegmentMean:TO,sparseSegmentSum:AO},VO={stringNGrams:NO,stringSplit:IO,stringToHashBucketFast:PO,staticRegexReplace:$O};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zO=new Map,GO=new Map;class WO{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class js{constructor(){this.classNameMap={}}static getMap(){return js.instance==null&&(js.instance=new js),js.instance}static register(e){js.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function HO(n,e,t){k(n.className!=null,()=>"Class being registered does not have the static className property defined."),k(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),k(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof e>"u"&&(e="Custom"),typeof t>"u"&&(t=n.className);const r=t,i=e+">"+r;return js.register(n),zO.set(i,n),GO.set(n,i),n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wa extends WO{minimize(e,t=!1,r){const{value:i,grads:s}=this.computeGradients(e,r);if(r!=null){const a=r.map(o=>({name:o.name,tensor:s[o.name]}));this.applyGradients(a)}else this.applyGradients(s);return dn(s),t?i:(i.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return MN(e,t)}dispose(){this.iterations_!=null&&dn(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Bt(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(wa,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XO extends wa{static get className(){return"Adadelta"}constructor(e,t,r=null){super(),this.learningRate=e,this.rho=t,this.epsilon=r,this.accumulatedGrads=[],this.accumulatedUpdates=[],r==null&&(this.epsilon=q.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,i)=>{const s=q.registeredVariables[r],a=!1;this.accumulatedGrads[i]==null&&(this.accumulatedGrads[i]={originalName:`${r}/accum_grad`,variable:Ct(()=>Er(s).variable(a))}),this.accumulatedUpdates[i]==null&&(this.accumulatedUpdates[i]={originalName:`${r}/accum_var`,variable:Ct(()=>Er(s).variable(a))});const o=Array.isArray(e)?e[i].tensor:e[r];if(o==null)return;const c=this.accumulatedGrads[i].variable,l=this.accumulatedUpdates[i].variable;Ct(()=>{const u=ct(Oe(c,this.rho),Oe(ii(o),1-this.rho)),h=Oe(Lt(Ui(ct(l,this.epsilon)),Ui(ct(c,this.epsilon))),o),d=ct(Oe(l,this.rho),Oe(ii(h),1-this.rho));c.assign(u),l.assign(d);const f=ct(Oe(h,-this.learningRate),s);s.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(dn(this.accumulatedGrads.map(e=>e.variable)),dn(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,r=!1;this.accumulatedGrads=e.slice(0,t).map(i=>({originalName:i.name,variable:i.tensor.variable(r)})),this.accumulatedUpdates=e.slice(t,t*2).map(i=>({originalName:i.name,variable:i.tensor.variable(r)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jO extends wa{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,i)=>{const s=q.registeredVariables[r];this.accumulatedGrads[i]==null&&(this.accumulatedGrads[i]={originalName:`${r}/accumulator`,variable:Ct(()=>Ic(s.shape,this.initialAccumulatorValue).variable(!1))});const a=Array.isArray(e)?e[i].tensor:e[r];if(a==null)return;const o=this.accumulatedGrads[i].variable;Ct(()=>{const c=ct(o,ii(a));o.assign(c);const l=ct(Oe(Lt(a,Ui(ct(c,q.backend.epsilon()))),-this.learningRate),s);s.assign(l)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&dn(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(r=>({originalName:r.name,variable:r.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qO extends wa{static get className(){return"Adam"}constructor(e,t,r,i=null){super(),this.learningRate=e,this.beta1=t,this.beta2=r,this.epsilon=i,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Ct(()=>{this.accBeta1=Bt(t).variable(),this.accBeta2=Bt(r).variable()}),i==null&&(this.epsilon=q.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(r=>r.name):Object.keys(e);Ct(()=>{const r=Mt(1,this.accBeta1),i=Mt(1,this.accBeta2);t.forEach((s,a)=>{const o=q.registeredVariables[s],c=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${s}/m`,variable:Ct(()=>Er(o).variable(c))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${s}/v`,variable:Ct(()=>Er(o).variable(c))});const l=Array.isArray(e)?e[a].tensor:e[s];if(l==null)return;const u=this.accumulatedFirstMoment[a].variable,h=this.accumulatedSecondMoment[a].variable,d=ct(Oe(u,this.beta1),Oe(l,1-this.beta1)),f=ct(Oe(h,this.beta2),Oe(ii(l),1-this.beta2)),p=Lt(d,r),x=Lt(f,i);u.assign(d),h.assign(f);const g=ct(Oe(Lt(p,ct(Ui(x),this.epsilon)),-this.learningRate),o);o.assign(g)}),this.accBeta1.assign(Oe(this.accBeta1,this.beta1)),this.accBeta2.assign(Oe(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&dn(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&dn(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),Ct(()=>{this.accBeta1.assign(pc(this.beta1,this.iterations_+1)),this.accBeta2.assign(pc(this.beta2,this.iterations_+1))});const t=e.length/2,r=!1;this.accumulatedFirstMoment=e.slice(0,t).map(i=>({originalName:i.name,variable:i.tensor.variable(r)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(i=>({originalName:i.name,variable:i.tensor.variable(r)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KO extends wa{static get className(){return"Adamax"}constructor(e,t,r,i=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=r,this.epsilon=i,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Ct(()=>{this.iteration=Bt(0).variable(),this.accBeta1=Bt(t).variable()}),i==null&&(this.epsilon=q.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(r=>r.name):Object.keys(e);Ct(()=>{const r=Mt(1,this.accBeta1),i=Lt(-this.learningRate,ct(Oe(this.iteration,this.decay),1));t.forEach((s,a)=>{const o=q.registeredVariables[s],c=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${s}/m`,variable:Er(o).variable(c)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${s}/v`,variable:Er(o).variable(c)});const l=Array.isArray(e)?e[a].tensor:e[s];if(l==null)return;const u=this.accumulatedFirstMoment[a].variable,h=this.accumulatedWeightedInfNorm[a].variable,d=ct(Oe(u,this.beta1),Oe(l,1-this.beta1)),f=Oe(h,this.beta2),p=br(l),x=Zx(f,p);u.assign(d),h.assign(x);const g=ct(Oe(Lt(i,r),Lt(d,ct(x,this.epsilon))),o);o.assign(g)}),this.iteration.assign(ct(this.iteration,1)),this.accBeta1.assign(Oe(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&dn(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&dn(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yy extends wa{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,i)=>{const s=Array.isArray(e)?e[i].tensor:e[r];if(s==null)return;const a=q.registeredVariables[r];Ct(()=>{const o=ct(Oe(this.c,s),a);a.assign(o)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=gi(Bt(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YO extends yy{static get className(){return"Momentum"}constructor(e,t,r=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=r,this.accumulations=[],this.m=Bt(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,i)=>{const s=q.registeredVariables[r];this.accumulations[i]==null&&(this.accumulations[i]={originalName:`${r}/momentum`,variable:Ct(()=>Er(s).variable(!1))});const a=this.accumulations[i].variable,o=Array.isArray(e)?e[i].tensor:e[r];o!=null&&Ct(()=>{let c;const l=ct(Oe(this.m,a),o);this.useNesterov?c=ct(Oe(this.c,ct(o,Oe(l,this.m))),s):c=ct(Oe(this.c,l),s),a.assign(l),s.assign(c)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&dn(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map(r=>({originalName:r.name,variable:r.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZO extends wa{static get className(){return"RMSProp"}constructor(e,t=.9,r=0,i=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=r,this.epsilon=i,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,i==null&&(this.epsilon=q.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,i)=>{const s=q.registeredVariables[r],a=!1;this.accumulatedMeanSquares[i]==null&&(this.accumulatedMeanSquares[i]={originalName:`${r}/rms`,variable:Ct(()=>Er(s).variable(a))}),this.accumulatedMoments[i]==null&&(this.accumulatedMoments[i]={originalName:`${r}/momentum`,variable:Ct(()=>Er(s).variable(a))}),this.accumulatedMeanGrads[i]==null&&this.centered&&(this.accumulatedMeanGrads[i]={originalName:`${r}/mg`,variable:Ct(()=>Er(s).variable(a))});const o=Array.isArray(e)?e[i].tensor:e[r];if(o==null)return;const c=this.accumulatedMeanSquares[i].variable,l=this.accumulatedMoments[i].variable;Ct(()=>{const u=ct(Oe(c,this.decay),Oe(ii(o),1-this.decay));if(this.centered){const h=this.accumulatedMeanGrads[i].variable,d=ct(Oe(h,this.decay),Oe(o,1-this.decay)),f=Lt(Oe(o,this.learningRate),Ui(Mt(u,ct(ii(d),this.epsilon)))),p=ct(Oe(l,this.momentum),f);c.assign(u),h.assign(d),l.assign(p);const x=Mt(s,p);s.assign(x)}else{const h=ct(Oe(c,this.decay),Oe(ii(o),1-this.decay)),d=ct(Oe(l,this.momentum),Lt(Oe(o,this.learningRate),Ui(ct(h,this.epsilon))));c.assign(h),l.assign(d);const f=Mt(s,d);s.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&dn(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&dn(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&dn(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,r=!1;this.accumulatedMeanSquares=e.slice(0,t).map(i=>({originalName:i.name,variable:i.tensor.variable(r)})),this.accumulatedMoments=e.slice(t,t*2).map(i=>({originalName:i.name,variable:i.tensor.variable(r)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(i=>({originalName:i.name,variable:i.tensor.variable(r)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JO=[XO,jO,qO,KO,YO,ZO,yy];function QO(){for(const n of JO)HO(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e$="model",t$=".json",n$=".weights.bin";function bm(n){return new Promise(e=>setTimeout(e)).then(n)}class pa{constructor(e){if(!te().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(pa.URL_SCHEME)&&(e=e.slice(pa.URL_SCHEME.length)),(e==null||e.length===0)&&(e=e$),this.modelJsonFileName=e+t$,this.weightDataFileName=e+n$}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=ci.join(e.weightData),r=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const i=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],s=yx(e,i),a=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),o=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(o.download=this.modelJsonFileName,o.href=a,await bm(()=>o.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){const c=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;c.download=this.weightDataFileName,c.href=r,await bm(()=>c.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Rc(e)}}}}pa.URL_SCHEME="downloads://";class r${constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{const r=new FileReader;r.onload=i=>{const s=JSON.parse(i.target.result),a=s.modelTopology;if(a==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(s.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}const c=qd(s,l=>this.loadWeights(l));e(c)},r.onerror=i=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),r.readAsText(this.jsonFile)})}loadWeights(e){const t=[],r=[];for(const a of e)t.push(...a.weights),r.push(...a.paths);const i=this.checkManifestAndWeightFiles(e),s=r.map(a=>this.loadWeightsFile(a,i[a]));return Promise.all(s).then(a=>[t,a])}loadWeightsFile(e,t){return new Promise((r,i)=>{const s=new FileReader;s.onload=a=>{const o=a.target.result;r(o)},s.onerror=a=>i(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){const t=[],r=this.weightsFiles.map(s=>ym(s.name)),i={};for(const s of e)s.paths.forEach(a=>{const o=ym(a);if(t.indexOf(o)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${o}'`);if(t.push(o),r.indexOf(o)===-1)throw new Error(`Weight file with basename '${o}' is not provided.`);i[a]=this.weightsFiles[r.indexOf(o)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return i}}const i$=n=>te().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(pa.URL_SCHEME)?s$(n.slice(pa.URL_SCHEME.length)):null;hn.registerSaveRouter(i$);function s$(n="model"){return new pa(n)}function a$(n){return new r$(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sm(n,e,t,r){a(n),t=t??0,r=r??1,o(t,r);let i=0;const s=c=>(c.then(l=>{const u=t+ ++i/n.length*(r-t);return e(u),l}),c);function a(c){k(c!=null&&Array.isArray(c)&&c.length>0,()=>"promises must be a none empty array")}function o(c,l){k(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${c}`),k(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${l}`),k(l>=c,()=>`startFraction must be no more than endFraction, but got startFraction ${c} and endFraction ${l}`)}return Promise.all(n.map(s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function vy(n,e){e==null&&(e={});const t=e.fetchFunc==null?te().platform.fetch:e.fetchFunc,r=n.map(h=>t(h,e.requestInit,{isBinary:!0})),o=(e.onProgress==null?await Promise.all(r):await Sm(r,e.onProgress,0,.5)).map(h=>h.arrayBuffer());return e.onProgress==null?await Promise.all(o):await Sm(o,e.onProgress,.5,1)}function o$(n,e){var t;const r=e.fetchFunc==null?te().platform.fetch:e.fetchFunc;let i=0,s;return(t=e.onProgress)===null||t===void 0||t.call(e,0),new ReadableStream({pull:async a=>{for(var o;i<n.length;){s||(s=(await r(n[i],e.requestInit,{isBinary:!0})).body.getReader());const{done:c,value:l}=await s.read();if(c){i++,s=void 0,(o=e.onProgress)===null||o===void 0||o.call(e,i/n.length);continue}a.enqueue(l);return}a.close()}})}async function c$(n,e="",t,r){return _y(a=>vy(a,{requestInit:r}))(n,e,t)}function _y(n){return async(e,t="",r)=>{const i=e.map(()=>!1),s={},a=r!=null?r.map(()=>!1):[],o=[];if(e.forEach((f,p)=>{let x=0;f.weights.forEach(g=>{const m="quantization"in g?g.quantization.dtype:g.dtype,_=ca[m]*Ae(g.shape),b=()=>{i[p]=!0,s[p]==null&&(s[p]=[]),s[p].push({manifestEntry:g,groupOffset:x,sizeBytes:_})};r!=null?r.forEach((w,I)=>{w===g.name&&(b(),a[I]=!0)}):b(),o.push(g.name),x+=_})}),!a.every(f=>f)){const f=r.filter((p,x)=>!a[x]);throw new Error(`Could not find weights in manifest with names: ${f.join(", ")}. 
Manifest JSON has weights with names: ${o.join(", ")}.`)}const c=i.reduce((f,p,x)=>(p&&f.push(x),f),[]),l=[];c.forEach(f=>{e[f].paths.forEach(p=>{const x=t+(t.endsWith("/")?"":"/")+p;l.push(x)})});const u=await n(l),h={};let d=0;return c.forEach(f=>{const p=e[f].paths.length,x=new ci(u.slice(d,d+p));s[f].forEach(m=>{const _=x.slice(m.groupOffset,m.groupOffset+m.sizeBytes),b=mx(_,[m.manifestEntry]);for(const w in b)h[w]=b[w]}),d+=p}),h}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l$="application/octet-stream",u$="application/json";class gf{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(k(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=te().platform.fetch,k(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&k(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const r=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],i=yx(e,r);if(t.body.append("model.json",new Blob([JSON.stringify(i)],{type:u$}),"model.json"),e.weightData!=null){const a=ci.join(e.weightData);t.body.append("model.weights.bin",new Blob([a],{type:l$}),"model.weights.bin")}const s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:Rc(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}const r=t.modelTopology,i=t.weightsManifest;if(r==null&&i==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return qd(e,t=>this.loadWeights(t))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),r=nd(e.weightsManifest),i=()=>o$(t,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:r,getWeightStream:i})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[r,i]=h$(t),s=this.weightPathPrefix||r,a=[],o=[];for(const c of e)for(const l of c.paths)this.weightUrlConverter!=null?o.push(this.weightUrlConverter(l)):a.push(s+l+i);return this.weightUrlConverter&&a.push(...await Promise.all(o)),a}async loadWeights(e){const t=await this.getWeightUrls(e),r=nd(e),i=await vy(t,this.loadOptions);return[r,i]}}gf.URL_SCHEME_REGEX=/^https?:\/\//;function h$(n){const e=n.lastIndexOf("/"),t=n.lastIndexOf("?"),r=n.substring(0,e),i=t>e?n.substring(t):"";return[r+"/",i]}function hd(n){return n.match(gf.URL_SCHEME_REGEX)!=null}const by=(n,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(n)?t=n.every(r=>hd(r)):t=hd(n),t)return xf(n,e)}return null};hn.registerSaveRouter(by);hn.registerLoadRouter(by);function xf(n,e){return new gf(n,e)}function d$(n,e){return xf(n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ph{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class Sy{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class f${constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function p$(n,e,t,r){const i=arguments;return new f$(wy(...i))}function wy(n,e,t,r){return arguments.length===1?n.modelTopology!=null||n.weightSpecs!=null?new ph(n):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ph({modelTopology:n})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ph({modelTopology:n,weightSpecs:e,weightData:t,trainingConfig:r}))}function m$(n){return new Sy(n)}function g$(n){return new Sy(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ey=Object.freeze(Object.defineProperty({__proto__:null,CompositeArrayBuffer:ci,browserFiles:a$,browserHTTPRequest:d$,concatenateArrayBuffers:gC,copyModel:FC,decodeWeights:mx,decodeWeightsStream:xx,encodeWeights:uC,fromMemory:p$,fromMemorySync:wy,getLoadHandlers:EC,getModelArtifactsForJSON:qd,getModelArtifactsForJSONSync:vx,getModelArtifactsInfoForJSON:Rc,getSaveHandlers:wC,getWeightSpecs:nd,http:xf,isHTTPScheme:hd,listModels:LC,loadWeights:c$,moveModel:UC,registerLoadRouter:SC,registerSaveRouter:bC,removeModel:kC,weightsLoaderFactory:_y,withSaveHandler:m$,withSaveHandlerSync:g$},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Fs;function x$(n,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,r=!1,i=!1,s=!1,a=!1,o=!1;if(n.data instanceof Uint8Array)t=!0;else if(typeof ImageData<"u"&&n instanceof ImageData)r=!0;else if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)i=!0;else if(typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)s=!0;else if(n.getContext!=null)a=!0;else if(typeof ImageBitmap<"u"&&n instanceof ImageBitmap)o=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);if(Kh(Hh,q.backendName)!=null){const p={pixels:n},x={numChannels:e};return q.runKernel(Hh,p,x)}const[l,u]=i?[n.videoWidth,n.videoHeight]:[n.width,n.height];let h;if(a)h=n.getContext("2d").getImageData(0,0,l,u).data;else if(r||t)h=n.data;else if(s||i||o){if(Fs==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")Fs=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Fs=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Fs.canvas.width=l,Fs.canvas.height=u,Fs.drawImage(n,0,0,l,u),h=Fs.getImageData(0,0,l,u).data}let d;if(e===4)d=new Int32Array(h);else{const p=l*u;d=new Int32Array(p*e);for(let x=0;x<p;x++)for(let g=0;g<e;++g)d[x*e+g]=h[x*4+g]}return cy(d,[u,l,e],"int32")}function y$(n){if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const e=n.rank===2?1:n.shape[2];if(e>4||e===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${e}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`)}async function Ty(n,e){let t=$(n,"img","toPixels");if(!(n instanceof mn)){const l=t;t=cn(l,"int32"),l.dispose()}y$(t);const[r,i]=t.shape.slice(0,2),s=t.rank===2?1:t.shape[2],a=await t.data(),o=t.dtype==="float32"?255:1,c=new Uint8ClampedArray(i*r*4);for(let l=0;l<r*i;++l){const u=[0,0,0,255];for(let d=0;d<s;d++){const f=a[l*s+d];if(t.dtype==="float32"){if(f<0||f>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${f}.`)}else if(t.dtype==="int32"&&(f<0||f>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${f}.`);s===1?(u[0]=f*o,u[1]=f*o,u[2]=f*o):u[d]=f*o}const h=l*4;c[h+0]=Math.round(u[0]),c[h+1]=Math.round(u[1]),c[h+2]=Math.round(u[2]),c[h+3]=Math.round(u[3])}return t!==n&&t.dispose(),c}const Cy=H({fromPixels_:x$});function Ay(n,e){const t=n.shape.length,r=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[r-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[r-1]} vs. ${t}`);if(Ae(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const i=e.shape,s=i[i.length-1];let a=1;for(let h=0;h<i.length-1;++h)a*=i[h];const o=n.shape,c=i.slice();c.pop();let l=1;for(let h=s;h<t;++h)l*=o[h],c.push(o[h]);const u=[...Pn(n.shape).map(h=>h/l),1].slice(0,s);return[c,a,l,u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dd=-2,v$=-1;function Ry(n,e,t){const r=n.shape.length;k(r===e.length,()=>`Error in slice${r}D: Length of begin ${e} must match the rank of the array (${r}).`),k(r===t.length,()=>`Error in slice${r}D: Length of size ${t} must match the rank of the array (${r}).`);for(let i=0;i<r;++i)k(e[i]+t[i]<=n.shape[i],()=>`Error in slice${r}D: begin[${i}] + size[${i}] (${e[i]+t[i]}) would overflow input.shape[${i}] (${n.shape[i]})`)}function _$(n){const e=[];let t=0;for(;n>0;)n&1&&e.push(t),n/=2,t++;return e}function Ny(n,e,t){const r=[];for(let i=0;i<n.length;i++)r[i]=Math.ceil((e[i]-n[i])/t[i]);return r}function My(n,e,t,r){const i=[...n];for(let s=i.length;s<r.length;s++)i.push(1);for(let s=0;s<t;s++)s===0?i[e]=1:(i.splice(e,0,1),i.pop());return i}function Iy(n,e,t){return t<=n?t:t-(e-1)}function Dy(n,e){const t=[];for(let r=0;r<n;r++)t.push(e+r);return t}function b$(n,e,t,r,i,s,a,o,c){const l=n.length;let u=new Array(l),h=new Array(l),d=new Array(l);if(e.length&&t>0){const f=e[0],p=t+1;u=Py(a,f,p,r,n),h=Oy(o,f,p,i,n),d=My(s,f,p,n)}else for(let f=0;f<l;f++)u[f]=Ly(a,r,s,n,f,c),h[f]=ky(o,i,s,n,f,c),d[f]=$y(s,f,c);return{begin:u,end:h,strides:d}}function Py(n,e,t,r,i){const s=[...i],a=Dy(t,e);for(let o=0;o<s.length;o++)if(a.indexOf(o)>-1)s[o]=0;else{const c=Iy(e,t,o);let l=r[c];n&1<<c&&(l=0),s[o]=l}return s}function Oy(n,e,t,r,i){const s=[...i],a=Dy(t,e);for(let o=0;o<s.length;o++)if(a.indexOf(o)>-1)s[o]=Number.MAX_SAFE_INTEGER;else{const c=Iy(e,t,o);let l=r[c];n&1<<c&&(l=Number.MAX_SAFE_INTEGER),s[o]=l}for(let o=0;o<s.length;o++){const c=i[o];s[o]<0&&(s[o]+=c),s[o]=Ll(0,s[o],i[o])}return s}function $y(n,e,t){let r=n[e];return(t&1<<e||r==null)&&(r=1),r}function Ly(n,e,t,r,i,s){let a=e[i];const o=t[i]||1;(n&1<<i||s&1<<i||a==null)&&(o>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);const c=r[i];return a<0&&(a+=c),a=Ll(0,a,c-1),a}function ky(n,e,t,r,i,s){let a=e[i];const o=t[i]||1;(n&1<<i||s&1<<i||a==null)&&(o>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);const c=r[i];return a<0&&(a+=c),o>0?a=Ll(0,a,c):a=Ll(-1,a,c-1),a}function yf(n,e,t){let r=t.length;for(let i=0;i<t.length;i++)if(t[i]>1){r=i;break}for(let i=r+1;i<t.length;i++)if(e[i]>0||t[i]!==n[i])return!1;return!0}function vf(n,e){let t=n.length>0?n[n.length-1]:1;for(let r=0;r<n.length-1;r++)t+=n[r]*e[r];return t}function Fy(n,e,t){let r;const i=n.shape.length;typeof e=="number"?r=[e,...new Array(i-1).fill(0)]:e.length<i?r=e.concat(new Array(i-e.length).fill(0)):r=e.slice(),r.forEach(a=>{k(a!==-1,()=>"slice() does not support negative begin indexing.")});let s;return t==null?s=new Array(i).fill(-1):typeof t=="number"?s=[t,...new Array(i-1).fill(-1)]:t.length<i?s=t.concat(new Array(i-t.length).fill(-1)):s=t,s=s.map((a,o)=>a>=0?a:(k(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${o}.`),n.shape[o]-r[o])),[r,s]}function Uy(n,e,t,r,i,s,a,o,c){let l;if(r==null?(l=new Array(e.length),l.fill(1)):l=r,a!=null&&a&a-1)throw new Error("Multiple ellipses in slice is not allowed.");let u=!1;const h={dims:l.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:l.slice(),beginMask:i,endMask:s,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:c};for(let b=0;b<h.dims;b++)u&&1<<b&o&&h.numAddAxisAfterEllipsis++,1<<b&a&&(u=!0);u||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};S$(h,d);let f=!0,p=!0,x=!0;const g=[],m=[];for(let b=0;b<n.length;++b){if(d.strides[b]===0)throw Error(`strides[${b}] must be non-zero`);const w=!!(d.shrinkAxisMask&1<<b),I=n[b];if(I===-1){g.push(w?1:-1);continue}const M=[d.beginMask&1<<b,d.endMask&1<<b],D=[d.strides[b]>0?0:-1,d.strides[b]>0?I:I-1];if(w&&d.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");x=x&&d.strides[b]===1;const F=!!(d.beginMask&1<<b&&d.endMask&1<<b);if(d.beginValid&&d.endValid){if(w){const J=d.begin[b]<0?I+d.begin[b]:d.begin[b];if(d.begin[b]=J,d.end[b]=d.begin[b]+1,J<0||J>=I)throw Error(`slice index ${d.begin[b]} of dimension ${b} out of bounds.`)}else d.begin[b]=wm(d.begin[b],0,d.strides[b],I,M,D),d.end[b]=wm(d.end[b],1,d.strides[b],I,M,D);const B=d.strides[b]===1&&d.begin[b]===0&&d.end[b]===I;f=f&&B,p=p&&(b===0&&d.strides[b]===1||B)}else f=f&&d.strides[b]===1&&F,p=p&&(b===0&&d.strides[b]===1||F);let N,A=!1;if(d.beginValid&&d.endValid?(N=d.end[b]-d.begin[b],A=!0):w?(N=1,A=!0):F&&I>=0&&(d.strides[b]<0?N=-I:N=I,A=!0),A){let B;N===0||N<0!=d.strides[b]<0?B=0:B=Math.trunc(N/d.strides[b])+(N%d.strides[b]!==0?1:0),g.push(B)}else g.push(-1)}for(let b=0;b<d.finalShapeGatherIndices.length;++b){const w=d.finalShapeGatherIndices[b];w>=0?m.push(g[w]):w===dd&&m.push(1)}return{finalShapeSparse:m.filter((b,w)=>d.finalShapeGatherIndices[w]!==dd),finalShape:m,isIdentity:f,sliceDim0:p,isSimpleSlice:x,begin:d.begin,end:d.end,strides:d.strides}}function S$(n,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=n.begin!=null,e.endValid=n.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let r=0;r<n.dims;r++)if(1<<r&n.ellipsisMask){const i=Math.min(e.dims-(n.dims-r)+1+n.numAddAxisAfterEllipsis,e.dims);for(;t<i;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=r}else if(1<<r&n.newAxisMask)e.finalShapeGatherIndices.push(dd),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);n.begin!=null&&(e.begin[t]=n.begin[r]),n.end!=null&&(e.end[t]=n.end[r]),e.strides[t]=n.strides[r],n.beginMask&1<<r&&(e.beginMask|=1<<t),n.endMask&1<<r&&(e.endMask|=1<<t),n.shrinkAxisMask&1<<r?(e.finalShapeGatherIndices.push(v$),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(r)),e.inputShapeGatherIndicesSparse[t]=r,t++}}function wm(n,e,t,r,i,s){if(i[e])return t>0?s[e]:s[e+1&1];{const a=n<0?r+n:n;return a<s[0]?s[0]:a>s[1]?s[1]:a}}const w$=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:Ry,computeFlatOffset:vf,computeOutShape:Ny,getNormalizedAxes:b$,isSliceContinous:yf,maskToAxes:_$,parseSliceParams:Fy,sliceInfo:Uy,startForAxis:Ly,startIndicesWithElidedDims:Py,stopForAxis:ky,stopIndicesWithElidedDims:Oy,stridesForAxis:$y,stridesWithElidedDims:My},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E$=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n();function T$(){return new Promise(n=>E$(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function By(n,e){const t=n[0].length;n.forEach((i,s)=>{k(i.length===t,()=>`Error in concat${t}D: rank of tensors[${s}] must be the same as the rank of the rest (${t})`)}),k(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);const r=n[0];n.forEach((i,s)=>{for(let a=0;a<t;a++)k(a===e||i[a]===r[a],()=>`Error in concat${t}D: Shape of tensors[${s}] (${i}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`)})}function ma(n,e){const t=n[0].slice();for(let r=1;r<n.length;r++)t[e]+=n[r][e];return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ti;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(ti||(ti={}));function Vy(n,e,t){let r=new Array;if(t==null&&e==null)return r;if(e==null)for(;r.length<n+t.length;)r.push(-1);else r=e.slice();if(t==null)return r;if(n+t.length!==r.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${n+t.length}, but shape.rank = ${r.length}`);for(let i=1;i<t.length;++i){const s=t[i],a=r[r.length-t.length+i],o=r[a];if(s>=0)if(o>=0){if(o!==s)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${i+n}] = ${s} but shape[${i+n}] = ${o}`)}else r[a]=s}return r}function zy(n){const e={FIRST_DIM_SIZE:ti.FIRST_DIM_SIZE,VALUE_ROWIDS:ti.VALUE_ROWIDS,ROW_LENGTHS:ti.ROW_LENGTHS,ROW_SPLITS:ti.ROW_SPLITS,ROW_LIMITS:ti.ROW_LIMITS,ROW_STARTS:ti.ROW_STARTS},t=[];for(const r of n)if(r in e)t.push(e[r]);else break;return t}function Gy(n){return n.length===0?0:n[0]===ti.FIRST_DIM_SIZE?n.length-1:n.length}function Wy(n,e){if(n==null||e==null)return;const t=n.length,r=e.length;if(t>=r)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${t} must be less than ragged tensor input flatValues.rank = ${r})`);for(let i=0;i<Math.min(t,r-1);++i){const s=n[i],a=e[i+1];if(s>=0&&a>=0&&s!==1&&s!==a)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${i-n.length}] = ${s} but ragged tensor input.flatValues.shape[${i-n.length}] = ${a}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _f=30;function wu(n){return n<=_f?n:zh(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hy(n,e,t){const r=t*(typeof n=="number"?n:n[0]),i=e*(typeof n=="number"?n:n[1]);return[r,i]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bf(n,e,t,r=!0){let i=[];if(r)i=i.concat(e.slice(0)),i.push(n[0]/t),i=i.concat(n.slice(1));else{i=i.concat(n[0]);const s=e.length;for(let a=0;a<s;++a)i=i.concat([n[a+1]/e[a],e[a]]);i=i.concat(n.slice(s+1))}return i}function Sf(n,e,t=!0){const r=[];if(t){r.push(e);for(let i=e+1;i<n;++i)i<=2*e?(r.push(i),r.push(i-(e+1))):r.push(i)}else{const i=[],s=[];for(let a=1;a<n;++a)a>=e*2+1||a%2===1?s.push(a):i.push(a);r.push(...i),r.push(0),r.push(...s)}return r}function wf(n,e,t,r=!0){const i=[];r?i.push(n[0]/t):i.push(n[0]*t);for(let s=1;s<n.length;++s)s<=e.length?r?i.push(e[s-1]*n[s]):i.push(n[s]/e[s-1]):i.push(n[s]);return i}function Xy(n,e){const t=[0];for(let r=0;r<e;++r)t.push(n[r][0]);return t}function jy(n,e,t){const r=n.slice(0,1);for(let i=0;i<t;++i)r.push(n[i+1]-e[i][0]-e[i][1]);return r}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qy=1.7580993408473768,Ky=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yy=.3275911,Zy=.254829592,Jy=-.284496736,Qy=1.421413741,ev=-1.453152027,tv=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fd(n,e){if(n.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${e.length}.`);const t=new Float32Array(n.length*2);for(let r=0;r<t.length;r+=2)t[r]=n[r/2],t[r+1]=e[r/2];return t}function C$(n){const e=new Float32Array(n.length/2),t=new Float32Array(n.length/2);for(let r=0;r<n.length;r+=2)e[r/2]=n[r],t[r/2]=n[r+1];return{real:e,imag:t}}function A$(n){const e=Math.ceil(n.length/4),t=new Float32Array(e),r=new Float32Array(e);for(let i=0;i<n.length;i+=4)t[Math.floor(i/4)]=n[i],r[Math.floor(i/4)]=n[i+1];return{real:t,imag:r}}function R$(n){const e=Math.floor(n.length/4),t=new Float32Array(e),r=new Float32Array(e);for(let i=2;i<n.length;i+=4)t[Math.floor(i/4)]=n[i],r[Math.floor(i/4)]=n[i+1];return{real:t,imag:r}}function N$(n,e){const t=n[e*2],r=n[e*2+1];return{real:t,imag:r}}function M$(n,e,t,r){n[r*2]=e,n[r*2+1]=t}function I$(n,e){const t=new Float32Array(n/2),r=new Float32Array(n/2);for(let i=0;i<Math.ceil(n/2);i++){const s=(e?2:-2)*Math.PI*(i/n);t[i]=Math.cos(s),r[i]=Math.sin(s)}return{real:t,imag:r}}function D$(n,e,t){const r=(t?2:-2)*Math.PI*(n/e),i=Math.cos(r),s=Math.sin(r);return{real:i,imag:s}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mh="->",P$=/->/g,Em=",",Tm="...";function nv(n,e){n=n.replace(/\s/g,"");const t=(n.length-n.replace(P$,"").length)/mh.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${mh}").`);const[r,i]=n.split(mh);k(r.indexOf(Tm)===-1,()=>`The ellipsis notation ("${Tm}") is not supported yet.`);const s=r.split(Em),a=s.length;if(e!==a)throw new Error(`Expected ${a} input tensors, received ${e}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let d=0;d<i.length;++d){const f=i[d];if(!s.some(p=>p.indexOf(f)!==-1))throw new Error(`Output subscripts contain the label ${f} not present in the input subscripts.`);o.indexOf(f)===-1&&o.push(f)}for(let d=0;d<r.length;++d){const f=r[d];o.indexOf(f)===-1&&f!==Em&&o.push(f)}const c=new Array(s.length);for(let d=0;d<a;++d){if(new Set(s[d].split("")).size!==s[d].length)throw new Error(`Found duplicate axes in input component ${s[d]}. Support for duplicate axes in input is not implemented yet.`);c[d]=[];for(let f=0;f<s[d].length;++f)c[d].push(o.indexOf(s[d][f]))}const l=o.length,u=i.length,h=[];for(let d=u;d<l;++d)h.push(d);return{allDims:o,summedDims:h,idDims:c}}function rv(n,e){let t=new Array(n);t.fill(-1);for(let i=0;i<e.length;++i)t[e[i]]=i;const r=[];for(let i=0;i<n;++i)t[i]===-1&&r.push(i);return t=t.filter(i=>i!==-1),{permutationIndices:t,expandDims:r}}function iv(n,e,t){const r=new Array(n);for(let i=0;i<t.length;++i){const s=t[i].shape;for(let a=0;a<e[i].length;++a)r[e[i][a]]===void 0?r[e[i][a]]=s[a]:k(r[e[i][a]]===s[a],()=>`Expected dimension ${r[e[i][a]]} at axis ${a} of input shaped ${JSON.stringify(s)}, but got dimension ${s[a]}`)}}function sv(n,e){const t=n,r=[];let i=0;n.length===0&&t.push(-1),i=n.length+1;for(let a=0;a<i;++a)r.push([]);const s=[];for(let a=0;a<t.length;++a){const o=t[a],c=O$(e,o);for(const l of c)s.indexOf(l)===-1&&(r[a].push(l),s.push(l))}return{path:t,steps:r}}function av(n){return n.every((e,t)=>e===t)}function O$(n,e){const t=[];for(let r=0;r<n.length;++r)(n[r].length===0||n[r].indexOf(e)!==-1||e===-1)&&t.push(r);return t}function ov(n,e,t=0){let r=[];if(typeof e=="number")k(n.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),r=new Array(e).fill(n.shape[t]/e);else{const i=e.reduce((a,o)=>(o===-1&&(a+=1),a),0);k(i<=1,()=>"There should be only one negative value in split array.");const s=e.indexOf(-1);if(s!==-1){const a=e.reduce((o,c)=>c>0?o+c:o);e[s]=n.shape[t]-a}k(n.shape[t]===e.reduce((a,o)=>a+o),()=>"The sum of sizes must match the size of the axis dimension."),r=e}return r}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cv(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function lv(n,e){return`indices(${n}, 0) is invalid: ${e} < 0`}function uv(n,e,t){return`indices(${n}, 0) is invalid: ${e} >= ${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hv(n,e){return`only one output dimension may be -1, not both ${n} and ${e}`}function dv(n,e){return`size ${n} must be non-negative, not ${e}`}function fv(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function pv(n,e){const t=Ae(n),r=Ae(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${r}. inputShape=${n} outputShape= ${e}`}function mv(n,e){const t=Ae(n),r=Ae(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${r}. inputShape=${n} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pd(){return"segment ids must be >= 0"}function gv(){return"segment ids are not increasing"}function xv(n,e){return`Segment id ${n} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function yv(n,e,t){return`Bad: indices[${n}] == ${e} out of range [0, ${t})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vv(n,e){let t=!1,r;for(n<=_f?(r=n,t=!0):r=zh(n,Math.floor(Math.sqrt(n)));!t;)r>e||r===n?t=!0:r=zh(n,r+1);return r}function _v(n,e,t){const r=[],i=n.length;for(let s=0;s<i;s++)s!==e?r.push(n[s]):r.push(t);return r}function bv(n,e,t,r){const i=e.shape.length,s=n.shape.length;if(r!==0&&(r<-i||r>i))throw new Error(`Expect batchDims in the range of [-${i}, ${i}], but got ${r}`);if(r<0&&(r+=i),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (
    ${s}).`);if(t<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${t}).`);for(let h=0;h<r;++h)if(n.shape[h]!==e.shape[h])throw new Error(`x.shape[${h}]: ${n.shape[h]} should be equal to indices.shape[${h}]: ${e.shape[h]}.`);const a=n.shape[t],o=[];let c=1,l=1,u=1;for(let h=0;h<r;++h)o.push(n.shape[h]),c*=n.shape[h];for(let h=r;h<t;h++)o.push(n.shape[h]),l*=n.shape[h];for(let h=r;h<i;h++)o.push(e.shape[h]);for(let h=t+1;h<s;h++)o.push(n.shape[h]),u*=n.shape[h];return{batchSize:c,sliceSize:u,outerSize:l,dimSize:a,outputShape:o}}const $$=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:bv,computeOutShape:_v,segOpComputeOptimalWindowSize:vv},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vo(n){try{return n.map(e=>go(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Sv(n){return n.map(e=>na(e))}const L$=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:Zy,ERF_A2:Jy,ERF_A3:Qy,ERF_A4:ev,ERF_A5:tv,ERF_P:Yy,PARALLELIZE_THRESHOLD:_f,get RowPartitionType(){return ti},SELU_SCALE:Ky,SELU_SCALEALPHA:qy,applyActivation:bu,assertAndGetBroadcastShape:Gt,assertAxesAreInnerMostDims:li,assertParamsConsistent:By,assignToTypedArray:M$,axesAreInnerMostDims:Zd,calculateShapes:yu,checkEinsumDimSizes:iv,checkPadOnDimRoundingMode:Hr,combineLocations:Fx,combineRaggedTensorToTensorShapes:Vy,complexWithEvenIndex:A$,complexWithOddIndex:R$,computeConv2DInfo:Ar,computeConv3DInfo:Mc,computeDefaultPad:Kd,computeDilation2DInfo:Nx,computeOptimalWindowSize:wu,computeOutAndReduceShapes:wi,computeOutShape:ma,computePool2DInfo:_a,computePool3DInfo:Nc,convertConv2DDataFormat:Ao,decodeEinsumEquation:nv,eitherStridesOrDilationsAreOne:xr,expandShapeToKeepDim:Rr,exponent:D$,exponents:I$,fromStringArrayToUint8:Sv,fromUint8ToStringArray:vo,getAxesPermutation:Xr,getBroadcastDims:zl,getComplexWithIndex:N$,getEinsumComputePath:sv,getEinsumPermutation:rv,getFusedBiasGradient:_u,getFusedDyActivation:vu,getImageCenter:Hy,getInnerMostAxes:jr,getPermuted:Sf,getRaggedRank:Gy,getReductionAxes:$x,getReshaped:bf,getReshapedPermuted:wf,getRowPartitionTypesHelper:zy,getSliceBeginCoords:Xy,getSliceSize:jy,getSparseFillEmptyRowsIndicesDenseShapeMismatch:cv,getSparseFillEmptyRowsNegativeIndexErrorMessage:lv,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:uv,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:fv,getSparseReshapeInputOutputMismatchErrorMessage:mv,getSparseReshapeInputOutputMultipleErrorMessage:pv,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:hv,getSparseReshapeNegativeOutputDimErrorMessage:dv,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:yv,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:pd,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:gv,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:xv,getUndoAxesPermutation:Jd,isIdentityPermutation:av,log:PT,mergeRealAndImagArrays:fd,prepareAndValidate:Ay,prepareSplitSize:ov,segment_util:$$,shouldFuse:Su,slice_util:w$,splitRealAndImagArrays:C$,stridesOrDilationsArePositive:ha,tupleValuesAreOne:fc,upcastType:Si,validateDefaultValueShape:Wy,validateInput:ff,validateUpdateShape:ly,warn:ri},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */QO();/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qs={},dl={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function k$(n,e){qs[n]=e}function ai(n,e){if(!(n in qs)||e!=null){const r=U$(n,e);if(r!==null)qs[n]=r;else return console.log("Could not get context for WebGL version",n),null}const t=qs[n];return t==null||t.isContextLost()?(delete qs[n],ai(n)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),qs[n])}function F$(n){if(!te().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function U$(n,e){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=e??F$(n);return t.addEventListener("webglcontextlost",r=>{r.preventDefault(),delete qs[n]},!1),te().getBool("SOFTWARE_WEBGL_ENABLED")&&(dl.failIfMajorPerformanceCaveat=!1),n===1?t.getContext("webgl",dl)||t.getContext("experimental-webgl",dl):t.getContext("webgl2",dl)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var vc;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(vc||(vc={}));var Sr;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(Sr||(Sr={}));var In;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(In||(In={}));function Pc(n,e){return[e,n]}function B$(n,e){return n*e}function fl(n){const e=Ae(n),t=Math.ceil(e/4);return Bh(t)}function Mo(n,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(n/2))]}function V$(n,e){const[t,r]=Mo(n,e);return t*r*4}function Ef(n,e){const t=n;let r,i,s,a,o,c,l,u,h,d;return te().getNumber("WEBGL_VERSION")===2?(r=t.R32F,i=t.R16F,s=t.RGBA16F,a=t.RGBA32F,o=t.RED,l=4,u=1,h=t.HALF_FLOAT,d=t.FLOAT,c=t.RGBA8):(r=n.RGBA,i=n.RGBA,s=n.RGBA,a=t.RGBA,o=n.RGBA,l=4,u=4,h=e!=null?e.HALF_FLOAT_OES:null,d=n.FLOAT,c=n.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:i,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:a,textureFormatFloat:o,downloadTextureFormat:c,downloadUnpackNumChannels:l,defaultNumChannels:u,textureTypeHalfFloat:h,textureTypeFloat:d}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xe(n,e){const t=e();return te().getBool("DEBUG")&&z$(n),t}function z$(n){const e=n.getError();if(e!==n.NO_ERROR)throw new Error("WebGL Error: "+X$(n,e))}const G$=596e-10,W$=65504;function H$(n){return!!(te().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||G$<Math.abs(n)&&Math.abs(n)<W$)}function X$(n,e){switch(e){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function pl(n,e){return Xi(n,()=>n.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function j$(n,e){const t=Xi(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Xe(n,()=>n.shaderSource(t,e)),Xe(n,()=>n.compileShader(t)),n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function q$(n,e){const t=Xi(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Xe(n,()=>n.shaderSource(t,e)),Xe(n,()=>n.compileShader(t)),te().get("ENGINE_COMPILE_ONLY"))return t;if(n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw wv(e,n.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}const K$=/ERROR: [0-9]+:([0-9]+):/g;function wv(n,e){const t=K$.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(n);return}const r=+t[1],i=n.split(`
`),s=i.length.toString().length+2,a=i.map((h,d)=>ro((d+1).toString(),s)+h);let o=0;for(let h=0;h<a.length;h++)o=Math.max(a[h].length,o);const c=a.slice(0,r-1),l=a.slice(r-1,r),u=a.slice(r);console.log(c.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${ro(l[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join(`
`))}function Y$(n){return Xi(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function Z$(n,e){if(Xe(n,()=>n.linkProgram(e)),!te().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(e,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function gh(n,e){if(Xe(n,()=>n.validateProgram(e)),n.getProgramParameter(e,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function J$(n,e){const t=Xi(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return Xe(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),Xe(n,()=>n.bufferData(n.ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function Q$(n,e){const t=Xi(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return Xe(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t)),Xe(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function eL(n){return Xi(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function tL(n,e){const t=te().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||e<=0){const r=`[${n}x${e}]`;throw new Error("Requested texture size "+r+" is invalid.")}if(n>t||e>t){const r=`[${n}x${e}]`,i=`[${t}x${t}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+i+".")}}function nL(n){return Xi(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Cm(n,e,t,r,i,s,a){const o=n.getAttribLocation(e,t);return o===-1?!1:(Xe(n,()=>n.bindBuffer(n.ARRAY_BUFFER,r)),Xe(n,()=>n.vertexAttribPointer(o,i,n.FLOAT,!1,s,a)),Xe(n,()=>n.enableVertexAttribArray(o)),!0)}function rL(n,e,t){cL(n,t),Xe(n,()=>n.activeTexture(n.TEXTURE0+t)),Xe(n,()=>n.bindTexture(n.TEXTURE_2D,e))}function iL(n,e,t){return Xi(n,()=>n.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function sL(n,e,t){return n.getUniformLocation(e,t)}function aL(n,e,t,r){Xe(n,()=>rL(n,e,r)),Xe(n,()=>n.uniform1i(t,r))}function xh(n,e,t){Xe(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),Xe(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0))}function Am(n,e){Xe(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),Xe(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function ml(n){const e=n.checkFramebufferStatus(n.FRAMEBUFFER);if(e!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+oL(n,e))}function oL(n,e){switch(e){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function Xi(n,e,t){const r=Xe(n,()=>e());if(r==null)throw new Error(t);return r}function cL(n,e){const t=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+n.TEXTURE0;if(r<n.TEXTURE0||r>t){const i=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${i}.`)}}function _o(n,e=2){return Ae(n.slice(0,n.length-e))}function bo(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function gl(n){let e=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(e=[_o(n),...bo(n)]),e}function lL(n,e=!1){let t=te().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=te().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");r===1/0&&te().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=t/2),e&&(t=t*2,r=r*2,n=n.map((o,c)=>c>=n.length-2?Fd(n[c]):n[c]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=Ts(n).newShape);let i=Ae(n),s=null;n.length<=1&&i<=t?s=[1,i]:n.length===2&&n[0]<=t&&n[1]<=t?s=n:n.length===3&&n[0]*n[1]<=t&&n[2]<=t?s=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=t&&n[1]*n[2]<=t?s=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=t&&n[3]<=t?s=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=t&&n[1]*n[2]*n[3]<=t&&(s=[n[0],n[1]*n[2]*n[3]]);const a=s!=null&&Math.max(...s)>r&&Math.min(...s)<=(e?2:1)&&Math.min(...s)>0;if(s==null||a)if(e){const o=_o(n);let c=2,l=2;n.length&&([c,l]=bo(n)),i=o*(c/2)*(l/2),s=Bh(i).map(u=>u*2)}else s=Bh(i);return s}function xl(n){return n%2===0}function jl(n,e){if(n=n.slice(-2),e=e.slice(-2),fn(n,e)||!n.length||!e.length||n[0]===0||n[1]===0||e[0]===0||e[1]===0)return!0;if(n.length!==e.length){const t=n[n.length-1],r=e[e.length-1];if(t===r||xl(t)&&xl(r)&&(n[0]===1||e[0]===1))return!0}return n[1]===e[1]&&xl(n[0])&&xl(e[0])}let yh,vh;function uL(n){if(yh==null){const e=ai(n);yh=e.getParameter(e.MAX_TEXTURE_SIZE)}return yh}function hL(n){if(vh==null){const e=ai(n);vh=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,vh)}function dL(n){if(n===0)return 0;let e;const t=ai(n);return Gr(t,"EXT_disjoint_timer_query_webgl2")&&n===2?e=2:Gr(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function Gr(n,e){return n.getExtension(e)!=null}function Rm(n){try{if(ai(n)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function fL(n){if(n===0)return!1;const e=ai(n);if(n===1){if(!Gr(e,"OES_texture_float"))return!1}else if(!Gr(e,"EXT_color_buffer_float"))return!1;return md(e)}function pL(n){if(n===0)return!1;const e=ai(n);if(n===1){if(!Gr(e,"OES_texture_float")||!Gr(e,"WEBGL_color_buffer_float"))return!1}else{if(Gr(e,"EXT_color_buffer_float"))return md(e);const r="EXT_color_buffer_half_float";if(Gr(e,r)){const i=e.getExtension(r);return mL(e,i)}return!1}return md(e)}function md(n){const e=Ef(n),t=n.createTexture();n.bindTexture(n.TEXTURE_2D,t),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const s=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,s),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0);const a=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(t),n.deleteFramebuffer(s),a}function mL(n,e){const t=Ef(n,e),r=n.createTexture();n.bindTexture(n.TEXTURE_2D,r),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatHalfFloat,1,1,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);const a=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,a),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,r,0);const o=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(r),n.deleteFramebuffer(a),o}function gL(n){return n!==2?!1:ai(n).fenceSync!=null}function Oc(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&k(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Je=te();Je.registerFlag("HAS_WEBGL",()=>Je.getNumber("WEBGL_VERSION")>0);Je.registerFlag("WEBGL_VERSION",()=>Rm(2)?2:Rm(1)?1:0);Je.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Je.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Je.get("WEBGL_VERSION")===2);Je.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Je.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Je.registerFlag("WEBGL_PACK",()=>Je.getBool("HAS_WEBGL"));Je.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Je.getBool("WEBGL_PACK"));Je.registerFlag("WEBGL_PACK_CLIP",()=>Je.getBool("WEBGL_PACK"));Je.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Je.getBool("WEBGL_PACK"));Je.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Je.getBool("WEBGL_PACK"));Je.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Je.getBool("WEBGL_PACK"));Je.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Je.getBool("WEBGL_PACK"));Je.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Je.getBool("WEBGL_PACK"));Je.registerFlag("WEBGL_PACK_REDUCE",()=>Je.getBool("WEBGL_PACK"));Je.registerFlag("WEBGL_LAZILY_UNPACK",()=>Je.getBool("WEBGL_PACK"));Je.registerFlag("WEBGL_CONV_IM2COL",()=>Je.getBool("WEBGL_PACK"));Je.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>Je.getBool("WEBGL_PACK"));Je.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>uL(Je.getNumber("WEBGL_VERSION")));Je.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>hL(Je.getNumber("WEBGL_VERSION")));Je.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=Je.getNumber("WEBGL_VERSION");return n===0?0:dL(n)});Je.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Je.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!hx());Je.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>fL(Je.getNumber("WEBGL_VERSION")));Je.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Je.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Je.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Je.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>pL(Je.getNumber("WEBGL_VERSION")));Je.registerFlag("WEBGL_FENCE_API_ENABLED",()=>gL(Je.getNumber("WEBGL_VERSION")));Je.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Je.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Je.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});Je.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>hx()?1:-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});Je.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Je.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Je.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Je.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);Je.registerFlag("WEBGL_EXP_CONV",()=>!1);Je.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Je.getBool("IS_TEST"));Je.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);Je.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);Je.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);Je.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yn(){let n,e,t,r,i,s,a,o,c,l;return te().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",e="in",t="out",r="in",i="texture",s="outputColor",a="out vec4 outputColor;",o=te().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",c="",l=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",e="attribute",t="varying",r="varying",i="texture2D",s="gl_FragColor",a="",o=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,c=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,l=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:e,varyingVs:t,varyingFs:r,texture2D:i,output:s,defineOutput:a,defineSpecialNaN:o,defineSpecialInf:c,defineRound:l}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ea(n,e,t="index"){const r=Pn(e);return r.map((i,s)=>{const a=`int ${n[s]} = ${t} / ${i}`,o=s===r.length-1?`int ${n[s+1]} = ${t} - ${n[s]} * ${i}`:`index -= ${n[s]} * ${i}`;return`${a}; ${o};`}).join("")}function Eu(n,e,t="index"){const r=Pn(e);return r.map((i,s)=>{const a=`int ${n[s]} = ${t} / outShapeStrides[${s}]`,o=s===r.length-1?`int ${n[s+1]} = ${t} - ${n[s]} * outShapeStrides[${s}]`:`index -= ${n[s]} * outShapeStrides[${s}]`;return`${a}; ${o};`}).join("")}function xL(n,e){const t=n.length,r=n.map(s=>`${e}[${s}]`),i=new Array(t-1);i[t-2]=r[t-1];for(let s=t-3;s>=0;--s)i[s]=`(${i[s+1]} * ${r[s+1]})`;return i}function yL(n,e,t="index"){const r=n.map((s,a)=>a),i=xL(r,e);return i.map((s,a)=>{const o=`int ${n[a]} = ${t} / ${i[a]}`,c=a===i.length-1?`int ${n[a+1]} = ${t} - ${n[a]} * ${i[a]}`:`index -= ${n[a]} * ${i[a]}`;return`${o}; ${c};`}).join("")}function Tf(n){const e=Pn(n).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function Cf(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const Ev=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:Tv}=L$;function vL(n,e,t){const r=[];if(n.forEach(f=>{const p=Ae(f.shapeInfo.logicalShape);if(f.shapeInfo.isUniform?r.push(`uniform float ${f.name}${p>1?`[${p}]`:""};`):(r.push(`uniform sampler2D ${f.name};`),r.push(`uniform int offset${f.name};`)),t.enableShapeUniforms){const{uniformShape:x}=Af(t.packedInputs,f.shapeInfo.logicalShape,f.shapeInfo.texShape);switch(x.length){case 1:r.push(`uniform int ${f.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${f.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${f.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${f.name}Shape;`);break}r.push(`uniform ivec2 ${f.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;");break}r.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(f=>{r.push(`uniform ${f.type} ${f.name}${f.arrayIndex?`[${f.arrayIndex}]`:""};`)});const i=r.join(`
`),s=n.map(f=>_L(f,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),a=e.texShape,o=Yn(),c=wL(o);let l,u,h=CL(o);return e.isPacked?(l=bL(e.logicalShape,a,t.enableShapeUniforms),u=TL(o)):(l=SL(e.logicalShape,a,t.enableShapeUniforms),u=EL(o)),t.packedInputs&&(h+=ML),[h,c,u,i,l,s,t.userCode].join(`
`)}function Io(n,e=!1){const t=n.shapeInfo.logicalShape;switch(t.length){case 0:return zL(n,e);case 1:return WL(n,e);case 2:return XL(n,e);case 3:return qL(n,e);case 4:return YL(n,e);case 5:return ZL(n);case 6:return JL(n);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function Cv(n,e){switch(n.shapeInfo.logicalShape.length){case 0:return VL(n);case 1:return GL(n,e);case 2:return HL(n,e);case 3:return jL(n,e);default:return KL(n,e)}}function _L(n,e,t=!1,r){let i="";t?i+=Cv(n,r):i+=Io(n,r);const s=n.shapeInfo.logicalShape,a=e.logicalShape;return s.length<=a.length&&(t?i+=QL(n,e):i+=ek(n,e)),i}function bL(n,e,t){switch(n.length){case 0:return Av();case 1:return IL(n,e,t);case 2:return UL(n,e,t);case 3:return PL(n,e,t);default:return $L(n,e,t)}}function SL(n,e,t){switch(n.length){case 0:return Av();case 1:return DL(n,e,t);case 2:return BL(n,e,t);case 3:return OL(n,e,t);case 4:return LL(n,e,t);case 5:return kL(n,e);case 6:return FL(n,e);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function wL(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function EL(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function TL(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function CL(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${AL}
    ${RL}
    ${NL}
  `}const AL=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,RL=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,NL=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,ML=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function Av(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function IL(n,e,t){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return r[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${r[1]}.0);
      }
    `:r[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${r[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);
    }
  `}function DL(n,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function PL(n,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],i=Math.ceil(n[2]/2),s=i*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${i});
      int c = imod(index, ${i}) * 2;

      return ivec3(b, r, c);
    }
  `}function OL(n,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Eu(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const r=Ea(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${r}
      return ivec3(r, c, d);
    }
  `}function $L(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],i=Math.ceil(n[n.length-1]/2),s=i*Math.ceil(n[n.length-2]/2);let a=s,o="",c="b, r, c";for(let l=2;l<n.length-1;l++)a*=n[n.length-l-1],o=`
      int b${l} = index / ${a};
      index -= b${l} * ${a};
    `+o,c=`b${l}, `+c;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      ${o}

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${i});
      int c = imod(index, ${i}) * 2;

      return ivec${n.length}(${c});
    }
  `}function LL(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Eu(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const r=Ea(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${r}
      return ivec4(r, c, d, d2);
    }
  `}function kL(n,e){const t=Ea(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function FL(n,e){const t=Ea(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function UL(n,e,t){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(fn(n,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));
      }
    `;const i=Math.ceil(n[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));

      int index = resTexRC.x * ${r[1]} + resTexRC.y;
      int r = 2 * (index / ${i});
      int c = imod(index, ${i}) * 2;

      return ivec2(r, c);
    }
  `}function BL(n,e,t){return fn(n,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:n[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function Ta(n){return`offset${n}`}function VL(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),r=Yn();return`
    vec4 ${t}() {
      return ${r.texture2D}(${e}, halfCR);
    }
  `}function zL(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`float ${r}() {return ${t};}`;const[i,s]=n.shapeInfo.texShape;if(i===1&&s===1)return`
      float ${r}() {
        return sampleTexture(${t}, halfCR);
      }
    `;const a=Ta(t);if(e)return`
    float ${r}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${a});
      return sampleTexture(${t}, uv);
    }
  `;const[o,c]=n.shapeInfo.texShape;return`
    float ${r}() {
      vec2 uv = uvFromFlat(${o}, ${c}, ${a});
      return sampleTexture(${t}, uv);
    }
  `}function GL(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),i=n.shapeInfo.texShape,s=Yn();if(e)return`
    vec4 ${r}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${s.texture2D}(${t}, uv);
    }
  `;const a=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];return`
    vec4 ${r}(int index) {
      vec2 uv = packedUVfrom1D(
        ${a[0]}, ${a[1]}, index);
      return ${s.texture2D}(${t}, uv);
    }
  `}function WL(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`
      float ${r}(int index) {
        ${Do(n)}
      }
    `;const i=n.shapeInfo.texShape,s=i[0],a=i[1];if(a===1&&s===1)return`
      float ${r}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;const o=Ta(t);return a===1?e?`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);
        return sampleTexture(${t}, uv);
      }
    `:s===1?e?`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${a}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${o});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${s}, ${a}, index + ${o});
      return sampleTexture(${t}, uv);
    }
  `}function HL(n,e){const t=n.shapeInfo.logicalShape,r=n.name,i="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n.shapeInfo.texShape,a=s[0],o=s[1],c=Yn();if(s!=null&&fn(t,s))return e?`
      vec4 ${i}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);

        return ${c.texture2D}(${r}, uv);
      }
    `:`
      vec4 ${i}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${a}.0);

        return ${c.texture2D}(${r}, uv);
      }
    `;if(e)return`
    vec4 ${i}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${c.texture2D}(${r}, uv);
    }
  `;const l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],u=Math.ceil(t[1]/2);return`
    vec4 ${i}(int row, int col) {
      vec2 uv = packedUVfrom2D(${u}, ${l[0]}, ${l[1]}, row, col);
      return ${c.texture2D}(${r}, uv);
    }
  `}function XL(n,e){const t=n.shapeInfo.logicalShape,r=n.name,i="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n.shapeInfo.texShape;if(s!=null&&fn(t,s)){if(e)return`
      float ${i}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `;const d=s[0],f=s[1];return`
    float ${i}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${f}.0, ${d}.0);
      return sampleTexture(${r}, uv);
    }
  `}const{newShape:a,keptDims:o}=Ts(t),c=a;if(c.length<t.length){const d=Po(n,c),f=["row","col"];return`
      ${Io(d,e)}
      float ${i}(int row, int col) {
        return ${i}(${Oo(f,o)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${i}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${Do(n)}
      }
    `;const l=s[0],u=s[1],h=Ta(r);return u===1?e?`
      float ${i}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${i}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);
      return sampleTexture(${r}, uv);
    }
  `:l===1?e?`
      float ${i}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${i}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);
      return sampleTexture(${r}, uv);
    }
  `:e?`
      float ${i}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
        return sampleTexture(${r}, uv);
      }
    `:`
  float ${i}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${h};
    vec2 uv = uvFromFlat(${l}, ${u}, index);
    return sampleTexture(${r}, uv);
  }
`}function jL(n,e){const t=n.shapeInfo.logicalShape,r=n.name,i="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(t[0]===1){const d=t.slice(1),f=[1,2],p=Po(n,d),x=["b","row","col"];return`
        ${Cv(p,e)}
        vec4 ${i}(int b, int row, int col) {
          return ${i}(${Oo(x,f)});
        }
      `}const o=Yn();if(e)return`
    vec4 ${i}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${o.texture2D}(${r}, uv);
    }
  `;const c=a[0],l=a[1],u=Math.ceil(t[2]/2),h=u*Math.ceil(t[1]/2);return`
    vec4 ${i}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${c}, ${l}, ${h}, ${u}, b, row, col);
      return ${o.texture2D}(${r}, uv);
    }
  `}function qL(n,e){const t=n.shapeInfo.logicalShape,r=n.name,i="get"+r.charAt(0).toUpperCase()+r.slice(1),s=t[1]*t[2],a=t[2],{newShape:o,keptDims:c}=Ts(t),l=o;if(l.length<t.length){const x=Po(n,l),g=["row","col","depth"];return`
        ${Io(x,e)}
        float ${i}(int row, int col, int depth) {
          return ${i}(${Oo(g,c)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${i}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${s}, ${a}, 1)));
        ${Do(n)}
      }
    `;const u=n.shapeInfo.texShape,h=u[0],d=u[1],f=n.shapeInfo.flatOffset;if(d===s&&f==null)return e?`
      float ${i}(int row, int col, int depth) {
        int stride1 = ${r}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
        float ${i}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${a}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${h}.0);
          return sampleTexture(${r}, uv);
        }
      `;if(d===a&&f==null)return e?`
      float ${i}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${i}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${r}, uv);
    }
  `;const p=Ta(r);return e?`
    float ${i}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${r}Shape[1] * ${r}Shape[2];
      int stride1 = ${r}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${p};
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
      return sampleTexture(${r}, uv);
    }
    `:`
      float ${i}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s} + col * ${a} + depth + ${p};
        vec2 uv = uvFromFlat(${h}, ${d}, index);
        return sampleTexture(${r}, uv);
      }
  `}function KL(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),i=Yn();if(e)return`
    vec4 ${r}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${i.texture2D}(${t}, uv);
    }
  `;const s=n.shapeInfo.logicalShape,a=s.length,o=n.shapeInfo.texShape,c=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=c[0],u=c[1],h=Math.ceil(s[a-1]/2);let d=h*Math.ceil(s[a-2]/2),f="int b, int row, int col",p=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let x=2;x<a-1;x++)f=`int b${x}, `+f,d*=s[a-x-1],p=`b${x} * ${d} + `+p;return`
    vec4 ${r}(${f}) {
      int index = ${p};
      int texR = index / ${u};
      int texC = index - texR * ${u};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${l});
      return ${i.texture2D}(${t}, uv);
    }
  `}function YL(n,e){const t=n.shapeInfo.logicalShape,r=n.name,i="get"+r.charAt(0).toUpperCase()+r.slice(1),s=t[3],a=t[2]*s,o=t[1]*a,{newShape:c,keptDims:l}=Ts(t);if(c.length<t.length){const _=Po(n,c),b=["row","col","depth","depth2"];return`
      ${Io(_,e)}
      float ${i}(int row, int col, int depth, int depth2) {
        return ${i}(${Oo(b,l)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${i}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${o}, ${a}, ${s}, 1)));
        ${Do(n)}
      }
    `;const u=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],f=h[1],p=`int stride2 = ${r}Shape[3];`,x=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(f===o&&u==null)return e?`
      float ${i}(int row, int col, int depth, int depth2) {
        ${p}
        ${x}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${i}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${a}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${d}.0);
        return sampleTexture(${r}, uv);
      }
    `;if(f===s&&u==null)return e?`
      float ${i}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${i}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${d}.0);
        return sampleTexture(${r}, uv);
      }
    `;const m=Ta(r);return e?`
    float ${i}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${p}
      ${x}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${m});
      return sampleTexture(${r}, uv);
    }
  `:`
    float ${i}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${a} +
          depth * ${s} + depth2;
      vec2 uv = uvFromFlat(${d}, ${f}, index + ${m});
      return sampleTexture(${r}, uv);
    }
  `}function ZL(n){const e=n.shapeInfo.logicalShape,t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),i=e[4],s=e[3]*i,a=e[2]*s,o=e[1]*a,{newShape:c,keptDims:l}=Ts(e);if(c.length<e.length){const x=Po(n,c),g=["row","col","depth","depth2","depth3"];return`
      ${Io(x)}
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        return ${r}(${Oo(g,l)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${o}, ${a}, ${s}, ${i})) +
          depth3;
        ${Do(n)}
      }
    `;const u=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],f=h[1];if(f===o&&u==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${s}, ${i}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===i&&u==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;const p=Ta(t);return`
    float ${r}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${a} + depth * ${s} +
          depth2 * ${i} + depth3 + ${p};
      vec2 uv = uvFromFlat(${d}, ${f}, index);
      return sampleTexture(${t}, uv);
    }
  `}function JL(n){const e=n.shapeInfo.logicalShape,t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:i,keptDims:s}=Ts(e);if(i.length<e.length){const g=Po(n,i),m=["row","col","depth","depth2","depth3","depth4"];return`
      ${Io(g)}
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${r}(${Oo(m,s)});
      }
    `}const a=e[5],o=e[4]*a,c=e[3]*o,l=e[2]*c,u=e[1]*l;if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${u}, ${l}, ${c}, ${o})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${Do(n)}
      }
    `;const h=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,f=d[0],p=d[1];if(p===u&&h==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${l}, ${c}, ${o}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(p===a&&h==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;const x=Ta(t);return`
    float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${l} + depth * ${c} +
          depth2 * ${o} + depth3 * ${a} + depth4 + ${x};
      vec2 uv = uvFromFlat(${f}, ${p}, index);
      return sampleTexture(${t}, uv);
    }
  `}function Do(n){const e=n.name,t=Ae(n.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function QL(n,e){const t=n.name,r=t.charAt(0).toUpperCase()+t.slice(1),i="get"+r+"AtOutCoords",s=n.shapeInfo.logicalShape.length,a=e.logicalShape.length,o=Tv(n.shapeInfo.logicalShape,e.logicalShape),c=Jt(a),l=a-s;let u;const h=["x","y","z","w","u","v"];s===0?u="":a<2&&o.length>=1?u="coords = 0;":u=o.map(_=>`coords.${h[_+l]} = 0;`).join(`
`);let d="";a<2&&s>0?d="coords":d=n.shapeInfo.logicalShape.map((_,b)=>`coords.${h[b+l]}`).join(", ");let f="return outputValue;";const x=Ae(n.shapeInfo.logicalShape)===1,m=Ae(e.logicalShape)===1;if(s===1&&!x&&!m)f=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(x&&!m)a===1?f=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:f=`
        return vec4(outputValue.x);
      `;else if(o.length){const _=s-2,b=s-1;o.indexOf(_)>-1&&o.indexOf(b)>-1?f="return vec4(outputValue.x);":o.indexOf(_)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(b)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${i}() {
      ${c} coords = getOutputCoords();
      ${u}
      vec4 outputValue = get${r}(${d});
      ${f}
    }
  `}function ek(n,e){const t=n.name,r=t.charAt(0).toUpperCase()+t.slice(1),i="get"+r+"AtOutCoords",s=e.texShape,a=n.shapeInfo.texShape,o=n.shapeInfo.logicalShape.length,c=e.logicalShape.length;if(!n.shapeInfo.isUniform&&o===c&&n.shapeInfo.flatOffset==null&&fn(a,s))return`
      float ${i}() {
        return sampleTexture(${t}, resultUV);
      }
    `;const l=Jt(c),u=Tv(n.shapeInfo.logicalShape,e.logicalShape),h=c-o;let d;const f=["x","y","z","w","u","v"];o===0?d="":c<2&&u.length>=1?d="coords = 0;":d=u.map(x=>`coords.${f[x+h]} = 0;`).join(`
`);let p="";return c<2&&o>0?p="coords":p=n.shapeInfo.logicalShape.map((x,g)=>`coords.${f[g+h]}`).join(", "),`
    float ${i}() {
      ${l} coords = getOutputCoords();
      ${d}
      return get${r}(${p});
    }
  `}function Jt(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function Af(n,e,t){const{newShape:r,keptDims:i}=Ts(e),s=e.length,a=n&&s===3&&e[0]===1,o=a?e.slice(1):r,c=!n&&s>1&&!fn(e,t)&&r.length<s||a;return{useSqueezeShape:c,uniformShape:c?o:e,keptDims:i}}function Po(n,e){const t=JSON.parse(JSON.stringify(n));return t.shapeInfo.logicalShape=e,t}function Oo(n,e){return e.map(t=>n[t]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tk(n,e,t,r){const i=t.map((u,h)=>{const d={logicalShape:u.shape,texShape:u.isUniform?null:u.texData.texShape,isUniform:u.isUniform,isPacked:u.isUniform?!1:u.texData.isPacked,flatOffset:null};return u.texData!=null&&u.texData.slice!=null&&u.texData.slice.flatOffset>0&&(d.flatOffset=u.texData.slice.flatOffset),{name:e.variableNames[h],shapeInfo:d}}),s=i.map(u=>u.shapeInfo),a={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=vL(i,a,e),c=q$(n.gl,o),l=n.createProgram(c);return te().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:c,source:o,webGLProgram:l,inShapeInfos:s,outShapeInfo:a,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(n.buildVao(l),Object.assign({program:e,fragmentShader:c,source:o,webGLProgram:l,inShapeInfos:s,outShapeInfo:a},Rv(n,e,l)))}function Rv(n,e,t){const r=[],i=[];let s,a,o,c=null,l=null;l=n.getUniformLocation(t,"NAN",!1),te().getNumber("WEBGL_VERSION")===1&&(c=n.getUniformLocation(t,"INFINITY",!1));const u=!1;for(const h of e.variableNames){const d={name:h,uniform:n.getUniformLocation(t,h,u),offset:n.getUniformLocation(t,`offset${h}`,u)};e.enableShapeUniforms&&(d.shape=n.getUniformLocation(t,`${h}Shape`,u),d.texShape=n.getUniformLocation(t,`${h}TexShape`,u)),r.push(d)}if(e.enableShapeUniforms&&(s=n.getUniformLocation(t,"outShape",u),o=n.getUniformLocation(t,"outShapeStrides",u),a=n.getUniformLocation(t,"outTexShape",u)),e.customUniforms)for(const h of e.customUniforms)i.push(n.getUniformLocation(t,h.name,u));return{variablesLocations:r,customUniformLocations:i,infLoc:c,nanLoc:l,outShapeLocation:s,outShapeStridesLocation:o,outTexShapeLocation:a}}function Nm(n,e){if(n.length!==e.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${e.length} inputs`);n.forEach((t,r)=>{const i=t.logicalShape,s=e[r],a=s.shape;if(!fn(i,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${i} and ${a} must match`);if(t.isUniform&&s.isUniform)return;const o=t.texShape,c=s.isUniform?null:s.texData.texShape;if(!fn(o,c))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${c} must match`)})}function nk(n,e,t,r,i){e.program.enableShapeUniforms||(Nm(e.inShapeInfos,t),Nm([e.outShapeInfo],[r]));const s=r.texData.texture,a=r.texData.texShape;r.texData.isPacked?n.setOutputPackedMatrixTexture(s.texture,a[0],a[1]):n.setOutputMatrixTexture(s.texture,a[0],a[1]),n.setProgram(e.webGLProgram),n.bindVertexArray(e.webGLProgram.vao),te().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&n.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&n.gl.uniform1f(e.nanLoc,NaN);for(let c=0;c<t.length;++c){const l=t[c],{uniform:u,offset:h,shape:d,texShape:f}=e.variablesLocations[c];if(d){const{uniformShape:p}=Af(e.program.packedInputs,l.shape,l.texData.texShape);switch(p.length){case 1:n.gl.uniform1iv(d,new Int32Array(p));break;case 2:n.gl.uniform2iv(d,new Int32Array(p));break;case 3:n.gl.uniform3iv(d,new Int32Array(p));break;case 4:n.gl.uniform4iv(d,new Int32Array(p));break}}if(f&&n.gl.uniform2i(f,l.texData.texShape[0],l.texData.texShape[1]),u!=null){if(l.isUniform){if(Ae(l.shape)<2)n.gl.uniform1f(u,l.uniformValues[0]);else{let p=l.uniformValues;p instanceof Float32Array||(p=new Float32Array(p)),n.gl.uniform1fv(u,p)}continue}l.texData.slice!=null&&h!=null&&n.gl.uniform1i(h,l.texData.slice.flatOffset),n.setInputMatrixTexture(l.texData.texture.texture,u,c)}}const o=e.outShapeLocation;if(o)switch(r.shape.length){case 1:n.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:n.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:n.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:n.gl.uniform4iv(o,new Int32Array(r.shape));break}if(e.outShapeStridesLocation){const c=Pn(r.shape);switch(r.shape.length){case 2:n.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(c));break;case 3:n.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(c));break;case 4:n.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(c));break}}if(e.outTexShapeLocation&&n.gl.uniform2i(e.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),e.program.customUniforms&&i)for(let c=0;c<e.program.customUniforms.length;++c){const l=e.program.customUniforms[c],u=e.customUniformLocations[c],h=i[c];if(l.type==="float")n.gl.uniform1fv(u,h);else if(l.type==="vec2")n.gl.uniform2fv(u,h);else if(l.type==="vec3")n.gl.uniform3fv(u,h);else if(l.type==="vec4")n.gl.uniform4fv(u,h);else if(l.type==="int")n.gl.uniform1iv(u,h);else if(l.type==="ivec2")n.gl.uniform2iv(u,h);else if(l.type==="ivec3")n.gl.uniform3iv(u,h);else if(l.type==="ivec4")n.gl.uniform4iv(u,h);else throw Error(`uniform type ${l.type} is not supported yet.`)}n.executeProgram()}function rk(n,e,t){let r="";e.concat(t).forEach(a=>{const o=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!a.isUniform){const c=a.texData.texShape,{useSqueezeShape:l,uniformShape:u,keptDims:h}=Af(n.packedInputs,a.shape,c);let d="",f="",p="";if(u.length===1&&n.packedInputs){const I=[Math.ceil(c[0]/2),Math.ceil(c[1]/2)];d=`${I[0]>1}_${I[1]>1}`}else if(u.length===2&&!n.packedInputs)f=`${u[0]>1}_${u[1]>1}`;else if(u.length>2&&!n.packedInputs){const I=Pn(u);p=`${I[0]===c[1]}_${I[I.length-1]===c[1]}`}const x=a.shape.length,g=u.length===2&&fn(a.shape,c),m=Ae(a.shape)===1,_=zl(a.shape,t.shape),b=!n.packedInputs&&x===t.shape.length&&fn(c,t.texData.texShape),w=n.packedInputs||u.length>2?"":`${c[0]>1}_${c[1]>1}`;r+=`${x}_${b}_${l?h:""}_${u.length}_${m}_${_}_${g}_${d}_${f}_${p}_${w}_${o}`}else{const c=a.isUniform?"uniform":a.texData.texShape;r+=`${a.shape}_${c}_${o}`}});const i=n.userCode;let s=n.constructor.name;return s+="_"+r+"_"+i+`${te().getNumber("WEBGL_VERSION")}`,s}function Gn(n){return te().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ik{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=vc.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Yn();this.outputShape=e,this.enableShapeUniforms=Gn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Eu(["r","c","d"],e):Ea(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sk{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=vc.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Yn();this.outputShape=e,this.enableShapeUniforms=Gn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Eu(["r","c","d"],e):Ea(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ak{constructor(e){this.variableNames=["A"],this.outTexUsage=Sr.DOWNLOAD;const t=Yn();this.outputShape=e,this.userCode=`
      ${Ev}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ok{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Sr.DOWNLOAD;const t=Yn();this.outputShape=e,this.userCode=`
      ${Ev}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ck={R:0,G:1,B:2,A:3};class Mm{constructor(e,t=!1,r="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const i=Yn();this.outputShape=e,this.enableShapeUniforms=Gn(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)");let a="";for(let o=0;o<r.length;o++){const c=r[o];a+=`
          if(offset == ${o}) {
            result = values[${ck[c]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?Cf():Tf(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${r.length});

        flatIndex = idiv(flatIndex, ${r.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${i.texture2D}(A, uv);
          ${a}
        }
        ${i.output} = vec4(${s}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lk{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=Yn();this.outputShape=e,this.enableShapeUniforms=Gn(this.outputShape.length);let i="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let o=0;o<=1;o++){const c=a*2+o;i+=`
          localCoords = coords;
          if(localCoords[2] + ${o} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${o};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${r.texture2D}(A, uv);

            if (offset == 0) {
              result[${c}] = values[0];
            } else if (offset == 1) {
              result[${c}] = values[1];
            } else if (offset == 2) {
              result[${c}] = values[2];
            } else {
              result[${c}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Cf():Tf(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${i}

          ${r.output} = ${s};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uk(n){const e=Yn(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return j$(n,t)}function hk(n){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return J$(n,e)}function dk(n){const e=new Uint16Array([0,1,2,2,1,3]);return Q$(n,e)}function $c(n,e,t,r,i,s){tL(e,t);const a=eL(n),o=n.TEXTURE_2D;return Xe(n,()=>n.bindTexture(o,a)),Xe(n,()=>n.texParameteri(o,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),Xe(n,()=>n.texParameteri(o,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),Xe(n,()=>n.texParameteri(o,n.TEXTURE_MIN_FILTER,n.NEAREST)),Xe(n,()=>n.texParameteri(o,n.TEXTURE_MAG_FILTER,n.NEAREST)),te().getNumber("WEBGL_VERSION")===1?Xe(n,()=>n.texImage2D(o,0,r,e,t,0,i,s,null)):Xe(n,()=>n.texStorage2D(o,1,r,e,t)),Xe(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:a,texShape:[t,e]}}function Nv(n){return n.internalFormatFloat}function fk(n,e,t,r){const[i,s]=Pc(e,t);return $c(n,i,s,Nv(r),r.textureFormatFloat,n.FLOAT)}function Mv(n){return n.internalFormatHalfFloat}function pk(n,e,t,r){const[i,s]=Pc(e,t);return $c(n,i,s,Mv(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function Iv(n){return n.downloadTextureFormat}function mk(n,e,t,r){const[i,s]=Pc(e,t);return $c(n,i,s,Iv(r),n.RGBA,n.UNSIGNED_BYTE)}function Dv(n){return n.internalFormatPackedFloat}function gk(n,e,t,r){const[i,s]=Mo(e,t);return $c(n,i,s,Dv(r),n.RGBA,n.FLOAT)}function Pv(n){return n.internalFormatPackedHalfFloat}function xk(n,e,t,r){const[i,s]=Mo(e,t);return $c(n,i,s,Pv(r),n.RGBA,r.textureTypeHalfFloat)}function yk(n,e,t){return Xe(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),Cm(n,e,"clipSpacePos",t,3,20,0)&&Cm(n,e,"uv",t,2,20,12)}function vk(n,e,t,r,i,s){Xe(n,()=>n.bindTexture(n.TEXTURE_2D,e));let a,o,c;i instanceof Uint8Array?(a=new Uint8Array(t*r*4),o=n.UNSIGNED_BYTE,c=n.RGBA):(a=new Float32Array(t*r*4),o=n.FLOAT,c=s.internalFormatPackedFloat),a.set(i),te().getNumber("WEBGL_VERSION")===2?Xe(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t,r,n.RGBA,o,a)):Xe(n,()=>n.texImage2D(n.TEXTURE_2D,0,c,t,r,0,n.RGBA,o,a)),Xe(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function _k(n,e,t){Xe(n,()=>n.bindTexture(n.TEXTURE_2D,e)),t.data instanceof Uint8Array?te().getNumber("WEBGL_VERSION")===2?Xe(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t.width,t.height,n.RGBA,n.UNSIGNED_BYTE,t.data)):Xe(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,t.width,t.height,0,n.RGBA,n.UNSIGNED_BYTE,t.data)):te().getNumber("WEBGL_VERSION")===2?Xe(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,t)):Xe(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t)),Xe(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function bk(n,e,t,r){const i=n.createBuffer();Xe(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,i));const o=4*4*e*t;return Xe(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,o,n.STREAM_READ)),Xe(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,0)),Xe(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),i}function Sk(n,e,t){const r=n,i=new Float32Array(t);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,i),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),i}function wk(n,e,t,r){const[i,s]=Pc(e,t),a=4,o=new Uint8Array(B$(e*t,a));return Xe(n,()=>n.readPixels(0,0,i,s,r.downloadTextureFormat,n.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)}function Ek(n,e,t,r,i,s,a,o){const c=n,l=new Float32Array(V$(s,a));return c.bindBuffer(c.PIXEL_PACK_BUFFER,e),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,l),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),l}function Tk(n,e,t){const r=new Float32Array(e*t*4);return Xe(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,r)),r}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _h{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=te().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,k$(t,e)):this.gl=ai(t),e=this.gl,te().getNumber("WEBGL_VERSION")===2){const s=e;this.createVertexArray=()=>Xe(s,()=>s.createVertexArray()),this.bindVertexArray=a=>Xe(s,()=>s.bindVertexArray(a)),this.deleteVertexArray=a=>Xe(s,()=>s.deleteVertexArray(a)),this.getVertexArray=()=>Xe(s,()=>s.getParameter(s.VERTEX_ARRAY_BINDING))}else if(e!=null){const s=e.getExtension("OES_vertex_array_object");if(s==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>Xe(e,()=>s.createVertexArrayOES()),this.bindVertexArray=a=>Xe(e,()=>s.bindVertexArrayOES(a)),this.deleteVertexArray=a=>Xe(e,()=>s.deleteVertexArrayOES(a)),this.getVertexArray=()=>Xe(e,()=>e.getParameter(s.VERTEX_ARRAY_BINDING_OES))}let r="WEBGL_color_buffer_float";const i="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),te().getNumber("WEBGL_VERSION")===1){const s="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=pl(this.gl,s),Gr(this.gl,a))this.textureHalfFloatExtension=pl(this.gl,a);else if(te().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(r),Gr(this.gl,i))this.colorBufferHalfFloatExtension=pl(this.gl,i);else if(te().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(r="EXT_color_buffer_float",Gr(this.gl,r))this.colorBufferFloatExtension=this.gl.getExtension(r);else if(Gr(this.gl,i))this.colorBufferHalfFloatExtension=this.gl.getExtension(i);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=hk(this.gl),this.indexBuffer=dk(this.gl),this.framebuffer=nL(this.gl),this.textureConfig=Ef(this.gl,this.textureHalfFloatExtension)}get debug(){return te().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;Xe(e,()=>e.finish()),Xe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),Xe(e,()=>e.deleteFramebuffer(this.framebuffer)),Xe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),Xe(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),Xe(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),fk(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),pk(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),mk(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),_k(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,r,i){this.throwIfDisposed(),vk(this.gl,e,t,r,i,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),xk(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),gk(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Am(this.gl,this.framebuffer),this.outputTexture=null),Xe(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,r){return this.downloadMatrixDriver(e,()=>wk(this.gl,t,r,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,r,i,s,a){return Ek(this.gl,e,t,r,i,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return Sk(this.gl,e,t)}createBufferFromTexture(e,t,r){this.bindTextureToFrameBuffer(e);const i=bk(this.gl,t,r,this.textureConfig);return this.unbindTextureToFrameBuffer(),i}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,r;if(te().getBool("WEBGL_FENCE_API_ENABLED")){const i=e,s=i.fenceSync(i.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),r=()=>{const a=i.clientWaitSync(s,0,0);return a===i.ALREADY_SIGNALED||a===i.CONDITION_SATISFIED},t=s}else te().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),r=()=>this.isQueryAvailable(t,te().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):r=()=>!0;return{query:t,isFencePassed:r}}downloadMatrixFromPackedTexture(e,t,r){return this.downloadMatrixDriver(e,()=>Tk(this.gl,t,r))}createProgram(e){this.throwIfDisposed();const t=this.gl;this.vertexShader==null&&(this.vertexShader=uk(t));const r=Y$(t);Xe(t,()=>t.attachShader(r,this.vertexShader)),Xe(t,()=>t.attachShader(r,e)),Z$(t,r);const i=Object.assign(r,{vao:this.createVertexArray()});return this.debug&&gh(t,i),i}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;Xe(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),yk(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(Xe(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&gh(this.gl,this.program),Xe(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,r=!0){return this.throwIfDisposed(),r?iL(this.gl,e,t):sL(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),Xe(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,r){this.throwIfDisposed(),this.throwIfNoProgram(),aL(this.gl,e,t,r)}setOutputMatrixTexture(e,t,r){this.setOutputMatrixTextureDriver(e,r,t)}setOutputPackedMatrixTexture(e,t,r){this.throwIfDisposed();const[i,s]=Mo(t,r);this.setOutputMatrixTextureDriver(e,i,s)}setOutputMatrixWriteRegion(e,t,r,i){this.setOutputMatrixWriteRegionDriver(r,e,i,t)}setOutputPackedMatrixWriteRegion(e,t,r,i){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&gh(this.gl,this.program),ml(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}Xe(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Xe(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=pl(this.gl,te().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(te().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const r=this.gl,i=this.getQueryTimerExtensionWebGL2(),s=r.createQuery();return r.beginQuery(i.TIME_ELAPSED_EXT,s),s}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(te().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const t=this.gl,r=this.getQueryTimerExtensionWebGL2();t.endQuery(r.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await nm(()=>this.disposed||this.isQueryAvailable(e,te().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,te().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){const r=this.gl;return r.getQueryParameter(e,r.QUERY_RESULT)/1e6}else{const r=this.getQueryTimerExtensionWebGL1();return r.getQueryObjectEXT(e,r.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){const r=this.gl,i=this.getQueryTimerExtensionWebGL2(),s=r.getQueryParameter(e,r.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(i.GPU_DISJOINT_EXT)),s&&!this.disjoint}else{const r=this.getQueryTimerExtensionWebGL1(),i=r.getQueryObjectEXT(e,r.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),i&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=Ck(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:r}=this.itemsToPoll[t];r()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let r;"setTimeoutCustom"in te().platform&&(r=te().platform.setTimeoutCustom.bind(te().platform)),nm(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,r)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),xh(this.gl,e,this.framebuffer),this.debug&&ml(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(xh(this.gl,this.outputTexture,this.framebuffer),this.debug&&ml(this.gl)):Am(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const r=t();return this.unbindTextureToFrameBuffer(),r}setOutputMatrixTextureDriver(e,t,r){this.throwIfDisposed();const i=this.gl;xh(i,e,this.framebuffer),this.debug&&ml(i),this.outputTexture=e,Xe(i,()=>i.viewport(0,0,t,r)),Xe(i,()=>i.scissor(0,0,t,r))}setOutputMatrixWriteRegionDriver(e,t,r,i){this.throwIfDisposed(),Xe(this.gl,()=>this.gl.scissor(e,t,r,i))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function Ck(n){let e=0;for(;e<n.length&&n[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ak(n){const e=new Float32Array(n.length);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rr(n){return(e,t,r,i,s)=>{const a=Gt(e,t),o=a.length,c=Pn(a),l=Ae(a),u=vs(s,l),h=e.length,d=t.length,f=Pn(e),p=Pn(t),x=zl(e,a),g=zl(t,a);if(x.length+g.length===0)for(let m=0;m<u.length;++m)u[m]=n(r[m%r.length],i[m%i.length]);else for(let m=0;m<u.length;++m){const _=Ud(m,o,c),b=_.slice(-h);x.forEach(D=>b[D]=0);const w=Wh(b,h,f),I=_.slice(-d);g.forEach(D=>I[D]=0);const M=Wh(I,d,p);u[m]=n(r[w],i[M])}return[u,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rk(n,e,t,r){if(r==="int32"){const i=Int32Array.from(n);return[e,"int32",i]}if(r==="bool"){const i=hu([0],t),[s,a]=rr((o,c)=>o!==c?1:0)(e,[],n,i,"bool");return[a,"bool",s]}throw new Error(`Error in Cast: failed to cast ${t} to ${r}`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nk=rr((n,e)=>n+e);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mk(n,e,t,r,i){const s=Ae(r),a=_s(i,t);for(let o=0;o<n.length;o++){const c=n[o];if(c<0)throw new Error("Input x must be non-negative!");c>=i||(s>0?a[c]+=e[o]:a[c]+=1)}return a}function Ik(n,e,t,r=!1){const i=n.shape[0],s=n.shape[1],a=pn([i,t],e.dtype);for(let o=0;o<i;o++)for(let c=0;c<s;c++){const l=n.get(o,c);if(l<0)throw new Error("Input x must be non-negative!");l>=t||(r?a.set(1,o,l):e.size>0?a.set(a.get(o,l)+e.get(o,c),o,l):a.set(a.get(o,l)+1,o,l))}return a}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dk=rr((n,e)=>n&e);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ji(n){return(e,t,r)=>{const i=En(t,e.length);for(let s=0;s<e.length;++s)i[s]=n(e[s],r);return i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pk=ji(n=>Math.ceil(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ok(n,e,t,r){const i=En(t,Ae(e));if(r&&t!=="string"){let s=0;n.forEach(a=>{const o=Ae(a.shape);i.set(a.vals,s),s+=o})}else{let s=0;n.forEach(a=>{const o=t==="string"?vo(a.vals):a.vals;let c=0;for(let l=0;l<a.shape[0];++l){const u=l*e[1]+s;for(let h=0;h<a.shape[1];++h)i[u+h]=o[c++]}s+=a.shape[1]})}return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $k=rr((n,e)=>n===e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lk=ji(n=>Math.exp(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kk=ji(n=>Math.expm1(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fk=ji(n=>Math.floor(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uk=rr((n,e)=>Math.floor(n/e));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bk(n,e,t,r,i,s,a,o,c){const l=pn([r,s],t);for(let u=0;u<r;u++){const h=[];let d=0;for(let f=0;f<i;f++){const p=n[u*i+f];d+=p*a[f],h.push(p)}if(d<0||d>=c/s)throw new Error(`Invalid indices: ${h} does not index into ${o}`);for(let f=0;f<s;f++)l.values[u*s+f]=e.get(...e.indexToLoc(d*s+f))}return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vk(n,e,t){const r=pn(t,n.dtype);for(let i=0;i<r.size;++i){const a=r.indexToLoc(i).slice(),o=a[0],c=a[2],l=e.locToIndex([o,c]);a[2]=e.values[l];const u=n.locToIndex(a);0<=u&&u<n.values.length&&(r.values[i]=n.values[u])}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zk=rr((n,e)=>n>e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gk=rr((n,e)=>n>=e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wk=rr((n,e)=>n<e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hk=rr((n,e)=>n<=e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xk(n,e,t){const r=(e-n)/(t-1),i=_s(t,"float32");i[0]=n;for(let s=1;s<i.length;s++)i[s]=i[s-1]+r;return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jk=ji(n=>Math.log(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qk(n,e,t,r){const i=vs(r,Ae(t));for(let s=0;s<i.length;++s){const a=s*e;let o=n[a];for(let c=0;c<e;++c){const l=n[a+c];(Number.isNaN(l)||l>o)&&(o=l)}i[s]=o}return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kk=rr((n,e)=>Math.max(n,e));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yk=rr((n,e)=>Math.min(n,e));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ov=rr((n,e)=>n*e);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zk(n,e,t){const r=Co(-1,t);return Ov([],e,r,n,t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jk=rr((n,e)=>n!==e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qk(n,e,t,r,i){const s=e.length,a=Ae(e),o=Pn(e),c=Pn(i),l=vs(t,Ae(i));for(let u=0;u<a;++u){const h=Ud(u,s,o),d=new Array(h.length);for(let p=0;p<d.length;p++)d[p]=h[r[p]];const f=Wh(d,s,c);l[f]=n[u]}return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eF(n,e,t,r){const[i,s]=wi(n,r),a=Si(e,"int32"),o=_s(Ae(i),a),c=Ae(s);for(let l=0;l<o.length;++l){const u=l*c;let h=1;for(let d=0;d<c;++d)h*=t[u+d];o[l]=h}return{outVals:o,outShape:i,outDtype:a}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tF(n,e,t){n.forEach((r,i)=>{if(r<0||r>=t){const s=Ud(i,e.length,Pn(e)).join(",");throw new Error(`indices[${s}] = ${r} is not in [0, ${t})`)}})}function nF(n,e){for(let t=0;t<n.length;++t){const r=n[t],i=t===n.length-1?e:n[t+1].length;if(r.length===0)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>i)throw new Error("Ragged splits must not point past values");for(let s=1;s<r.length;++s)if(r[s-1]>r[s])throw new Error("Ragged splits must be sorted in ascending order")}}function rF(n,e,t,r){const i=[];let s=0;const a=e.length-1+t.length,o=new Array(a).fill(null).map(()=>[0]);nF(t,r);let c=1;for(let l=0;l<e.length-1;++l){c*=e[l];const u=e[l+1];for(let h=1;h<c+1;++h)o[l].push(h*u)}for(let l=0;l<n.length;++l){let u=n[l],h=n[l]+1;for(let d=0;d<t.length;++d){const f=t[d],p=d+e.length-1;if(p>=0){const x=o[p],g=x[x.length-1]-f[u];for(let m=u;m<h;++m)o[p].push(f[m+1]+g)}u=f[u],h=f[h]}h!==u&&(i.push([u,h]),s+=h-u)}return{outSplits:o,valueSlices:i,numValues:s}}function iF(n){const e=[];for(let t=0;t<n.length;++t){const r=n[t].length,i=En("int32",r);e.push(i),n[t].forEach((s,a)=>i[a]=s)}return e}function Im(n,e){const t=n.slice(0,e);for(;t.length<e;)t.push(1);for(let r=e;r<n.length;r++)t[e-1]*=n[r];return t}function sF(n,e,t,r,i,s){const a=Im(e,2)[1],o=Im(s,2)[1];let c=0;for(const l of t)for(let u=l[0];u<l[1];++u){for(let h=0;h<r;++h)i[c*o+h]=n[u*a+h];++c}}function aF(n,e,t,r,i){const s=e.slice();s[0]=i;const a=En(t,Ae(s)),o=n.length,c=o===0?0:o/e[0];return sF(n,e,r,c,a,s),[a,s]}function oF(n,e,t,r,i,s,a,o){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const c=e[0][0]-1;if(tF(s,a,c),r.length===0)throw new Error("params.rank must be nonzero");const l=r[0],{outSplits:u,valueSlices:h,numValues:d}=rF(s,a,n,l),f=iF(u),p=aF(t,r,i,h,d);return[f,p[0],p[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dm=2147483647;function cF(n,e,t,r,i,s,a){if(e.length>1)throw new Error("starts must be a scalar or vector");if(i.length>1)throw new Error("limits must be a scalar or vector");if(a.length>1)throw new Error("deltas must be a scalar or vector");const o=e.length===0,c=i.length===0,l=a.length===0,u=[];o||u.push(e[0]),c||u.push(i[0]),l||u.push(a[0]);for(let g=1;g<u.length;++g)if(u[g]!==u[g-1])throw new Error("starts, limits, and deltas must have the same shape");const h=u.length===0?1:u[0],d=En("int32",h+1);d[0]=0;for(let g=0;g<h;++g){const m=o?n[0]:n[g],_=c?r[0]:r[g],b=l?s[0]:s[g];if(b===0)throw new Error("Requires delta != 0");let w;if(b>0&&_<m||b<0&&_>m)w=0;else if(w=Math.ceil(Math.abs((_-m)/b)),w>Dm)throw new Error(`Requires ((limit - start) / delta) <= ${Dm}`);d[g+1]=d[g]+w}const f=d[h],p=En(t,f);let x=0;for(let g=0;g<h;++g){const m=d[g+1]-d[g];let _=o?n[0]:n[g];const b=l?s[0]:s[g];for(let w=0;w<m;++w)p[x++]=_,_+=b}return[d,p]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Or=ti;class ql{constructor(e,t,r,i,s,a,o,c,l,u){this.shape=e,this.shapeShape=t,this.values=r,this.valuesShape=i,this.valuesDType=s,this.defaultValue=a,this.defaultValueShape=o,this.rowPartitionValues=c,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=zy(u),this.raggedRank=Gy(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===Or.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===Or.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case Or.VALUE_ROWIDS:return ql.getMaxWidthValueRowID(t);case Or.ROW_SPLITS:return ql.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${Or[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(t===0||t===1)return 0;let r=0;for(let i=0;i<t-1;++i){const s=e[i+1]-e[i];s>r&&(r=s)}return r}static getMaxWidthValueRowID(e){const t=e.length;if(t===0)return 0;let r=0,i=e[0],s=0;for(let a=1;a<t;++a){const o=e[a];o!==i&&(i=o,s=Math.max(a-r,s),r=a)}return Math.max(t-r,s)}tensorShapeFromTensor(e,t,r=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return Om(e,r)}calculateOutputSize(e){const t=this.valuesShape,r=this.defaultValueShape;Wy(r,t);const i=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=Vy(this.raggedRank,i,t);a[0]<0&&(a[0]=e);for(let o=1;o<=this.raggedRank;++o)a[o]<0&&(a[o]=this.getMaxWidth(o));return a}calculateFirstParentOutputIndex(e,t,r){const i=Math.min(e,r),s=[];let a=0;for(let o=0;o<i;++o,a+=t)s.push(a);for(let o=i;o<e;++o)s.push(-1);return k(s.length===e,()=>"Final length of result must be equal to firstDimension."),s}calculateOutputIndexRowSplit(e,t,r,i){const s=e.length,a=[];for(let o=0;o<s-1;++o){const c=e[o+1]-e[o];let l=Math.min(i,c),u=t[o];u===-1&&(l=0);for(let h=0;h<l;++h)a.push(u),u+=r;for(let h=0;h<c-l;++h)a.push(-1)}if(s>0&&a.length!==e[s-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,r,i){const s=e.length,a=[];if(s===0)return[];let o=0,c=e[0];if(c>=t.length)throw new Error(`Got currentValueRowId=${c}, which is not less than ${t.length}`);let l=t[c];a.push(l);for(let u=1;u<s;++u){const h=e[u];if(h===c)l>=0&&(++o,o<i?l+=r:l=-1);else{if(o=0,c=h,h>=t.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${t.length}`);l=t[h]}a.push(l)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,r,i){const s=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case Or.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,t,r,i);case Or.ROW_SPLITS:if(s.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(s,t,r,i);default:throw new Error(`Unsupported partition type: ${Or[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case Or.FIRST_DIM_SIZE:return e[0];case Or.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Or.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Or[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),r=this.calculateOutputSize(t),i=new Array(this.raggedRank+1);i[i.length-1]=1;for(let c=i.length-2;c>=0;--c)i[c]=i[c+1]*r[c+1];const s=Om(r,!1),a=En(this.valuesDType,Ae(s));if(i[0]*r[0]>0){let c=this.calculateFirstParentOutputIndex(t,i[0],r[0]);for(let l=1;l<=this.raggedRank;++l)c=this.calculateOutputIndex(l-1,c,i[l],r[l]);this.setOutput(this.raggedRank,c,a,s)}return[s,a]}setOutput(e,t,r,i){if(r.length===0)return;const s=this.values,a=r;let o=i.slice();o=o.slice(e+1);const c=Ae(o),l=t.length;let u=this.defaultValue;if(u.length!==c&&u.length!==1){const p=this.defaultValueShape;Ct(()=>{const x=ge(u,p);u=oc(x,o).dataSync()})}let h=0,d=0,f=0;for(let p=0;p<=l;++p){let x=p<l?t[p]:-1;if(x===f){++f;continue}if(d<f){const g=s.subarray(h*c),m=a.subarray(d*c),_=(f-d)*c;Pm(m,g,_)}if(p>=l){const g=r.length;x=Math.floor(g/c)}if(x>f)if(this.defaultValue.length===1)a.subarray(f*c,x*c).fill(this.defaultValue[0]),f=x;else for(;x>f;){const g=a.slice(f*c);Pm(g,u,c),++f}x<0?(h=p+1,d=f):(h=p,d=f,f=d+1)}}}function Pm(n,e,t){for(let r=0;r<t;r++)n[r]=e[r]}function Om(n,e){const t=[];for(let r of n){if(r<0){if(!e)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}t.push(r)}return t}function lF(n,e,t,r,i,s,a,o,c,l){return new ql(n,e,t,r,i,s,a,o,c,l).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uF(n,e,t,r){const i=n===e,s=n<e&&t<0,a=e<n&&t>1;if(i||s||a)return _s(0,r);const o=Math.abs(Math.ceil((e-n)/t)),c=_s(o,r);e<n&&t===1&&(t=-1),c[0]=n;for(let l=1;l<c.length;l++)c[l]=c[l-1]+t;return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hF=ji(n=>1/Math.sqrt(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dF(n,e,t,r,i,s,a,o,c,l){const u=[r/i,i],h=n.values,d=e.values;if(r===0)return pn(t,e.dtype);const f=c instanceof xo?c:pn(u,e.dtype);typeof c=="string"||typeof c=="number"?f.values.fill(c):typeof c=="boolean"&&f.values.fill(+c);for(let p=0;p<s;p++){const x=[];let g=0;for(let m=0;m<a;m++){const _=h[p*a+m];x.push(_),g+=_*o[m]}if(g<0||g>=r/i)throw new Error(`Invalid indices: ${x} does not index into ${t}`);for(let m=0;m<i;m++)l?f.values[g*i+m]+=d[p*i+m]:f.values[g*i+m]=e.rank===0?d[0]:d[p*i+m]}return f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fF=ji(n=>1/(1+Math.exp(-n)));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pF(n,e,t,r,i){const s=yf(r,e,t),a=Ae(t),o=Pn(r);if(s){const h=vf(e,o);return i==="string"?n.slice(h,h+a):n.subarray(h,h+a)}const c=i==="string"?vo(n):n,l=pn(r,i,c),u=pn(t,i);for(let h=0;h<u.size;++h){const d=u.indexToLoc(h),f=d.map((p,x)=>p+e[x]);u.set(l.get(...f),...d)}return i==="string"?Sv(u.values):u.values}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mF(n,e,t,r,i,s,a){const o=e[0],c=s[0],l=new Array(c),u=new Array(o),h=e[1];if(c===0){if(o!==0)throw new Error(cv(o));const g=En(t,0),m=En(i,0);return[g,[0,h],m,l,u]}let d=!0,f=0;const p=new Array(c).fill(0);for(let g=0;g<o;++g){const m=n[g*h];if(m<0)throw new Error(lv(g,m));if(m>=c)throw new Error(uv(g,m,c));++p[m],d=d&&m>=f,f=m}let x=!0;for(let g=0;g<c;++g){const m=p[g]===0;l[g]=m,x=x&&!m,p[g]=Math.max(p[g],1),g>0&&(p[g]+=p[g-1])}if(x&&d){const g=n,m=r;for(let _=0;_<o;++_)u[_]=_;return[g,[o,h],m,l,u]}else{const g=p[c-1],m=En(t,g*h),_=En(i,g),b=new Array(c).fill(0);for(let w=0;w<o;++w){const I=n[w*h],M=b[I],D=(I===0?0:p[I-1])+M;b[I]++;for(let F=0;F<h;++F)m[D*h+F]=n[w*h+F];_[D]=r[w],u[w]=D}for(let w=0;w<c;++w)if(b[w]===0){const M=w===0?0:p[w-1];m[M*h+0]=w;for(let D=1;D<h;++D)m[M*h+D]=0;_[M]=a}return[m,[g,h],_,l,u]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gF(n,e,t,r,i){const s=Ae(r),a=e[0],o=i.length,c=[];let l=1,u=-1;for(let g=0;g<o;++g){const m=i[g];if(m===-1){if(u!==-1)throw new Error(hv(u,g));u=g,c.push(1)}else{if(m<0)throw new Error(dv(g,m));l*=m,c.push(m)}}if(u!==-1){if(l<=0)throw new Error(fv());const g=Math.trunc(s/l);if(l*g!==s)throw new Error(pv(r,c));c[u]=g}if(Ae(c)!==s)throw new Error(mv(r,c));const d=r.length,f=[];if(d>0){f[d-1]=1;for(let g=d-2;g>=0;--g)f[g]=f[g+1]*r[g+1]}const p=[];if(o>0){p[o-1]=1;for(let g=o-2;g>=0;--g)p[g]=p[g+1]*c[g+1]}const x=En(t,a*o);for(let g=0;g<a;++g){let m=0;for(let _=0;_<d;++_)m+=n[g*d+_]*f[_];for(let _=0;_<o;++_)x[g*o+_]=Math.trunc(m/p[_]),m%=p[_]}return[x,[a,o],c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xF(n,e,t,r,i,s=!1,a=0){const o=r.length,c=[e[0],n.length/e[0]],l=c[1],h=o>0?i[o-1]+1:0;if(h<0)throw new Error(pd());const d=e.slice();d[0]=h;const f=d.reduce((b,w)=>b*w,1),p=En(t,f);if(o===0)return h>0&&p.fill(a),[p,d];if(h<=0)throw new Error(pd());let x=0,g=1,m=0,_=i[x];for(;;){let b=0;if(g<o){if(b=i[g],_===b){++g;continue}if(_>=b)throw new Error(gv())}if(_<0||_>=h)throw new Error(xv(_,h));_>m&&p.fill(a,m*l,_*l);for(let w=x;w<g;++w){const I=r[w];if(I<0||I>=c[0])throw new Error(yv(w,r[w],c[0]));for(let M=0;M<l;M++)p[_*l+M]+=n[I*l+M]}if(s)for(let w=0;w<l;w++)p[_*l+w]/=g-x;if(x=g,++g,m=_+1,_=b,g>o)break}return m<h&&p.fill(a,m*l,h*l),[p,d]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yF=ji(n=>Math.sqrt(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vF=rr((n,e)=>{const t=n-e;return t*t});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _F=ji((n,e)=>{const{pattern:t,replaceGlobal:r,rewrite:i}=e;return n.replace(new RegExp(t,r?"g":""),i)});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bF(n,e,t,r){const i=pn(n,e.dtype);for(let s=0;s<i.size;s++){const a=i.indexToLoc(s),o=new Array(a.length);for(let c=0;c<o.length;c++)o[c]=a[c]*t[c]+r[c];i.set(e.get(...o),...a)}return i}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SF{constructor(e,t,r,i,s,a){this.separator=na(e),this.nGramWidths=t,this.leftPad=na(r),this.rightPad=na(i),this.padWidth=s,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const r=this.getPadWidth(t);return Math.max(0,e+2*r-t+1)}createNGrams(e,t,r,i,s,a){for(let o=0;o<s;++o){const c=this.getPadWidth(a),l=Math.max(0,c-o),u=Math.max(0,c-(s-(o+1))),h=a-(l+u),d=t+(l>0?0:o-c);let f=0;f+=l*this.leftPad.length;for(let _=0;_<h;++_)f+=e[d+_].length;f+=u*this.rightPad.length;const p=l+u+h-1;f+=p*this.separator.length,r[i+o]=new Uint8Array(f);const x=r[i+o];let g=0;const m=_=>_.forEach(b=>x[g++]=b);for(let _=0;_<l;++_)m(this.leftPad),m(this.separator);for(let _=0;_<h-1;++_)m(e[d+_]),m(this.separator);if(h>0){m(e[d+h-1]);for(let _=0;_<u;++_)m(this.separator),m(this.rightPad)}else{for(let _=0;_<u-1;++_)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const r=e.length,i=t.length;if(i>0){let c=t[0];if(c!==0)throw new Error(`First split value must be 0, got ${c}`);for(let l=1;l<i;++l){let u=t[l]>=c;if(u=u&&t[l]<=r,!u)throw new Error(`Invalid split value ${t[l]}, must be in [${c}, ${r}]`);c=t[l]}if(c!==r)throw new Error(`Last split value must be data size. Expected ${r}, got ${c}`)}const s=i-1,a=En("int32",i);if(r===0||i===0){const c=new Array(r);for(let l=0;l<=s;++l)a[l]=0;return[c,a]}a[0]=0;for(let c=1;c<=s;++c){const l=t[c]-t[c-1];let u=0;this.nGramWidths.forEach(h=>{u+=this.getNumNGrams(l,h)}),this.preserveShort&&l>0&&u===0&&(u=1),a[c]=a[c-1]+u}const o=new Array(a[s]);for(let c=0;c<s;++c){const l=t[c];let u=a[c];if(this.nGramWidths.forEach(h=>{const d=t[c+1]-t[c],f=this.getNumNGrams(d,h);this.createNGrams(e,l,o,u,f,h),u+=f}),this.preserveShort&&u===a[c]){const h=t[c+1]-t[c];if(h===0)continue;const d=h+2*this.padWidth;this.createNGrams(e,l,o,u,1,d)}}return[o,a]}}function wF(n,e,t,r,i,s,a,o){return new SF(t,r,i,s,a,o).compute(n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EF(n,e,t,r){if(!n.length)return;if(e.length===0){for(let s=0;s<n.length;++s)r.push(n.subarray(s,s+1));return}if(e.length===1){const s=e[0];let a=n.indexOf(s);for(;a!==-1;){const o=n.subarray(0,a);(!t||o.length!==0)&&r.push(o),n=n.subarray(a+1),a=n.indexOf(s)}(!t||n.length!==0)&&r.push(n);return}let i=0;for(let s=0;s<n.length+1;s++)if(s===n.length||e.indexOf(n[s])!==-1){const a=n.subarray(i,s);(!t||a.length!==0)&&r.push(a),i=s+1}}function TF(n,e,t){const r=n.length,i=[];let s=0,a=0;const o=new Array(r);for(let d=0;d<r;++d){const f=i.length;EF(n[d],e,t,i);const p=i.length-f;o[d]=p,s+=p,a=Math.max(a,p)}const c=En("int32",s*2),l=new Array(s),u=[r,a];let h=0;for(let d=0;d<r;++d)for(let f=0;f<o[d];++f)c[h*2]=d,c[h*2+1]=f,l[h]=i[h],++h;return[c,l,u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CF(n,e){const t=En("int32",n.length);for(let r=0;r<n.length;++r)t[r]=zT(n[r]).modulo(e).getLowBitsUnsigned();return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AF=rr((n,e)=>n-e);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RF(n,e){const t=new Array(n.rank);for(let i=0;i<t.length;i++)t[i]=n.shape[i]*e[i];const r=pn(t,n.dtype);for(let i=0;i<r.values.length;++i){const s=r.indexToLoc(i),a=new Array(n.rank);for(let c=0;c<a.length;c++)a[c]=s[c]%n.shape[c];const o=n.locToIndex(a);r.values[i]=n.values[o]}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ic=(n,e)=>{const t=e.value-n.value;return t===0?n.index-e.index:t};function $v(n,e,t=0,r=n.length-1){for(;r>t;){if(r-t>600){const o=r-t+1,c=e-t+1,l=Math.log(o),u=.5*Math.exp(2*l/3),h=.5*Math.sqrt(l*u*(o-u)/o)*Math.sign(c-o/2),d=Math.max(t,Math.floor(e-c*u/o+h)),f=Math.min(r,Math.floor(e+(o-c)*u/o+h));$v(n,e,d,f)}const i=n[e];let s=t,a=r;for(Jo(n,t,e),ic(n[r],i)>0&&Jo(n,t,r);s<a;){for(Jo(n,s,a),s++,a--;ic(n[s],i)<0;)s=s+1;for(;ic(n[a],i)>0;)a=a-1}ic(n[t],i)===0?Jo(n,t,a):(a=a+1,Jo(n,a,r)),a<=e&&(t=a+1),e<=a&&(r=a-1)}}function NF(n,e,t,r,i){const s=e[e.length-1],[a,o]=[n.length/s,s],c=vs(t,a*r),l=vs("int32",a*r);for(let h=0;h<a;h++){const d=h*o,f=n.subarray(d,d+o);let p=new Array(f.length);f.forEach((_,b)=>p[b]={value:_,index:b}),r<p.length&&($v(p,r),p=p.slice(0,r)),i&&p.sort(ic);const x=h*r,g=c.subarray(x,x+r),m=l.subarray(x,x+r);for(let _=0;_<r;_++)g[_]=p[_].value,m[_]=p[_].index}const u=e.slice();return u[u.length-1]=r,[pn(u,t,c),pn(u,"int32",l)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MF(n,e,t,r){const i=Rn(e,t)[0],s=[1,t[0],1];for(let p=0;p<i;p++)s[0]*=t[p];s[1]=t[i];for(let p=i+1;p<t.length;p++)s[2]*=t[p];const a=new Map,o=new Int32Array(t[i]),c=new xo(s,r,n),l=[],u=s[0]===1&&s[2]===1;for(let p=0;p<t[i];p++){let x;if(u)x=n[p].toString();else{const m=[];for(let _=0;_<s[0];_++)for(let b=0;b<s[2];b++)m.push(c.get(_,p,b));x=m.join(",")}const g=a.get(x);if(g!=null)o[p]=g;else{const m=a.size;a.set(x,m),o[p]=m,l.push(p)}}const h=s.slice();h[1]=a.size;const d=new xo(h,r);l.forEach((p,x)=>{for(let g=0;g<s[0];g++)for(let m=0;m<s[2];m++)d.set(c.get(g,p,m),g,x,m)});const f=t.slice();return f[i]=h[1],{outputValues:d.values,outputShape:f,indices:o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IF=Object.freeze(Object.defineProperty({__proto__:null,addImpl:Nk,bincountImpl:Mk,bincountReduceImpl:Ik,bitwiseAndImpl:Dk,castImpl:Rk,ceilImpl:Pk,concatImpl:Ok,equalImpl:$k,expImpl:Lk,expm1Impl:kk,floorDivImpl:Uk,floorImpl:Fk,gatherNdImpl:Bk,gatherV2Impl:Vk,greaterEqualImpl:Gk,greaterImpl:zk,lessEqualImpl:Hk,lessImpl:Wk,linSpaceImpl:Xk,logImpl:jk,maxImpl:qk,maximumImpl:Kk,minimumImpl:Yk,multiplyImpl:Ov,negImpl:Zk,notEqualImpl:Jk,prodImpl:eF,raggedGatherImpl:oF,raggedRangeImpl:cF,raggedTensorToTensorImpl:lF,rangeImpl:uF,rsqrtImpl:hF,scatterImpl:dF,sigmoidImpl:fF,simpleAbsImpl:Ak,sliceImpl:pF,sparseFillEmptyRowsImpl:mF,sparseReshapeImpl:gF,sparseSegmentReductionImpl:xF,sqrtImpl:yF,squaredDifferenceImpl:vF,staticRegexReplaceImpl:_F,stridedSliceImpl:bF,stringNGramsImpl:wF,stringSplitImpl:TF,stringToHashBucketFastImpl:CF,subImpl:AF,tileImpl:RF,topKImpl:NF,transposeImpl:Qk,uniqueImpl:MF},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:DF,bincountImpl:Lv,bincountReduceImpl:PF,bitwiseAndImpl:OF,castImpl:$F,ceilImpl:LF,concatImpl:kF,equalImpl:FF,expImpl:UF,expm1Impl:BF,floorImpl:VF,gatherNdImpl:zF,gatherV2Impl:GF,greaterImpl:WF,greaterEqualImpl:HF,lessImpl:XF,lessEqualImpl:jF,linSpaceImpl:qF,logImpl:KF,maxImpl:YF,maximumImpl:ZF,minimumImpl:JF,multiplyImpl:QF,negImpl:e6,notEqualImpl:t6,prodImpl:n6,raggedGatherImpl:r6,raggedRangeImpl:i6,raggedTensorToTensorImpl:s6,rangeImpl:a6,rsqrtImpl:o6,scatterImpl:c6,sigmoidImpl:l6,simpleAbsImpl:kv,sliceImpl:u6,sparseFillEmptyRowsImpl:h6,sparseReshapeImpl:d6,sparseSegmentReductionImpl:Fv,sqrtImpl:f6,staticRegexReplaceImpl:p6,stridedSliceImpl:m6,stringNGramsImpl:g6,stringSplitImpl:x6,stringToHashBucketFastImpl:y6,subImpl:v6,tileImpl:_6,topKImpl:b6,transposeImpl:Rf,uniqueImpl:S6}=IF;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uv(n,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${n}.${t}`)}function qn(n,e){return e===1?[n]:Uv(n,e)}function w6(n,e){if(n===1)return"rc";let t="";for(let r=0;r<n;r++)t+=e[r],r<n-1&&(t+=",");return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class E6{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=Gn(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const t=qn("rc",this.rank),r=Jt(this.rank),i=this.getOutOfBoundsCondition(t),s=this.getSetup(t),a=this.getOutput(t);this.userCode=`
        void main() {
          ${r} rc = getOutputCoords();

          if(${i}) {
            setOutput(vec4(0));
          } else {
            ${s}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){const t=[];for(let r=0;r<=1;r++)for(let i=0;i<=1;i++){let s=`${r===0?"r":"rp1"}, ${i===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)s=`${e[e.length-1-a]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let r=this.rank-2;r<this.rank;r++)t+=`${e[r]} >= ${this.enableShapeUniforms?`outShape[${r}]`:this.outputShape[r]}`,r<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";const t=e.slice(-2),r=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],i=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${r};
      bool rEdge = rp1 >= ${i};
    `}getOutput(e){const t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bv{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Gn(this.outputShape.length);let r="";for(let i=0;i<4;i++){let s="thisRC = rc;";i%2===1&&(s+="thisRC.z += 1;"),i>1&&(s+="thisRC.y += 1;"),r+=`
        ${s}
        ${i>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${i}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${i>0?"}":""}
      `}this.userCode=`
      ${T6(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Cf():Tf(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${r}

        setOutput(result);
      }
    `}}function T6(n,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?yL(["r","c","d"],"inputShape"):Ea(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class C6{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,r){const i=Lm(t,r),s=km(e,i,r);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=$m(e,i,this.gpgpu.gl,this.gpgpu.textureConfig,r);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const c=this.freeTextures[s].pop();return this.usedTextures[s].push(c),c}let o;return i===In.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):i===In.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):i===In.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):i===In.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):i===In.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(o),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),o}releaseTexture(e,t,r,i){if(this.freeTextures==null)return;const s=Lm(r,i),a=km(t,s,i);a in this.freeTextures||(this.freeTextures[a]=[]);const o=$m(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,i),c=te().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");c!==-1&&this._numBytesAllocated>c?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=o):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const l=this.usedTextures[a],u=l&&l.indexOf(e);if(u==null||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function A6(n,e){const t=n;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===n.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function $m(n,e,t,r,i){const s=R6(e,r);let a;if(i){const[c,l]=Mo(n[0],n[1]);a=c*l}else{const[c,l]=Pc(n[0],n[1]);a=c*l}const o=A6(t,s);return a*o}function R6(n,e){switch(n){case In.PACKED_2X2_FLOAT32:return Dv(e);case In.PACKED_2X2_FLOAT16:return Pv(e);case In.UNPACKED_FLOAT32:return Nv(e);case In.UNPACKED_FLOAT16:return Mv(e);case In.PACKED_4X1_UNSIGNED_BYTE:return Iv(e);default:throw new Error(`Unknown physical texture type ${n}`)}}function N6(n){return te().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?In.PACKED_2X2_FLOAT32:In.UNPACKED_FLOAT32:n?In.PACKED_2X2_FLOAT16:In.UNPACKED_FLOAT16}function Lm(n,e){if(n===Sr.UPLOAD)return In.PACKED_2X2_FLOAT32;if(n===Sr.RENDER||n==null)return N6(e);if(n===Sr.DOWNLOAD||n===Sr.PIXELS)return In.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function km(n,e,t){return`${n[0]}_${n[1]}_${e}_${t}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xi{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Gn(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const qr="if (isnan(x)) return x;",M6="return x;",Fm="return abs(x);",I6="return (x >= 0.0) ? x : (exp(x) - 1.0);",D6=qr+`
  return (x < 0.0) ? 0.0 : x;
`,P6=qr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,ss="return x;",O6="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $6="return x;",L6=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,k6=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,F6=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,U6="return 1.0 / (1.0 + exp(-1.0 * x));";class ls{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Gn(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class B6{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=Gn(this.outputShape.length);const t=e.length,r=qn("rc",t),i=Jt(t),s=w6(t,r),a=r.slice(-2),o=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${i} rc = getOutputCoords();
        vec4 packedInput = getA(${s});

        setOutput(getChannel(packedInput, ${o}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V6=uy,z6=1e-7,G6=1e-4,yl={};function W6(n){return n in yl||(yl[n]={}),yl[n]}const H6=te().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),X6=600;function j6(){return te().global.screen==null?1024:te().global.screen.height*te().global.screen.width*window.devicePixelRatio*X6/1024/1024}class Tu extends e1{nextDataId(){return Tu.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!te().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof _h)t=e;else{const r=ai(te().getNumber("WEBGL_VERSION"),e);t=new _h(r)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const r=ai(te().getNumber("WEBGL_VERSION"));t=new _h(r),this.binaryCache=W6(te().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new C6(this.gpgpu),this.numMBBeforeWarning=j6(),this.texData=new oT(this,rs())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,r,i,s,a){const o=this.makeTensorInfo(t,r),c=this.texData.get(o.dataId);c.isPacked=!1,c.texture={texture:e,texShape:[i,s]},c.texShape=[i,s];const l=gl(t),u=new Mm(l,!1,a),h=this.runWebGLProgram(u,[o],r,[[i,s]]);return h.shape=t,c.texture=null,this.disposeIntermediateTensorInfo(o),h.dataId}write(e,t,r){if((te().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||te().getBool("DEBUG"))&&this.checkNumericalProblems(e),r==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const i={id:this.nextDataId()};return this.texData.set(i,{shape:t,dtype:r,values:e,usage:Sr.UPLOAD,refCount:1}),i}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,r,i,s){if(te().getBool("DEBUG")&&this.checkNumericalProblems(t),i==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:r,dtype:i,values:t,usage:Sr.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:r,dtype:i,complexTensorInfos:s,slice:a,shape:o,isPacked:c}=t;if(a!=null){let d;c?d=new ls(o,ss):d=new xi(o,ss);const f=this.runWebGLProgram(d,[{dataId:e,shape:o,dtype:i}],i),p=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),p}if(r!=null)return this.convertAndCacheOnCPU(e);if(i==="string")return r;const l=this.activeTimers!=null;let u;l&&(u=Qr());let h;if(i==="complex64"){const d=this.readSync(s.real.dataId),f=this.readSync(s.imag.dataId);h=fd(d,f)}else h=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=Qr()-u),this.convertAndCacheOnCPU(e,h)}async read(e){if(this.pendingRead.has(e)){const p=this.pendingRead.get(e);return new Promise(x=>p.push(x))}const t=this.texData.get(e),{values:r,shape:i,slice:s,dtype:a,complexTensorInfos:o,isPacked:c}=t;if(s!=null){let p;c?p=new ls(i,ss):p=new xi(i,ss);const x=this.runWebGLProgram(p,[{dataId:e,shape:i,dtype:a}],a),g=this.read(x.dataId);return this.disposeIntermediateTensorInfo(x),g}if(r!=null)return this.convertAndCacheOnCPU(e);if(te().getBool("DEBUG")&&!te().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&te().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,u;if(a!=="complex64"&&te().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const p=this.texData.get(u.dataId);l=this.gpgpu.createBufferFromTexture(p.texture.texture,...fl(i))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let h;if(a==="complex64"){const p=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),x=p[0],g=p[1];h=fd(x,g)}else if(l==null)h=this.getValuesFromTexture(e);else{const p=Ae(i);h=this.gpgpu.downloadFloat32MatrixFromBuffer(l,p)}if(u!=null&&this.disposeIntermediateTensorInfo(u),l!=null){const p=this.gpgpu.gl;Xe(p,()=>p.deleteBuffer(l))}const d=this.convertAndCacheOnCPU(e,h),f=this.pendingRead.get(e);return this.pendingRead.delete(e),f.forEach(p=>p(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&rs().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,t={}){const r=this.texData.get(e),{values:i,shape:s,slice:a,dtype:o,isPacked:c,texture:l}=r;if(o==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let f;c?f=new ls(s,ss):f=new xi(s,ss);const p=this.runWebGLProgram(f,[{dataId:e,shape:s,dtype:o}],o),x=this.readToGPU(p,t);return this.disposeIntermediateTensorInfo(p),x}if(l==null)throw i!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),h=rs().makeTensorFromTensorInfo(u),d=this.texData.get(u.dataId);return Object.assign({tensorRef:h},d.texture)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const r=t.map(i=>go(i));return pn(e.shape,e.dtype,r)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return pn(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){const r=e[t];if(!H$(r))throw te().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${r} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${r} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:r,isPacked:i}=this.texData.get(e),s=Ae(t);if(te().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const d=this.decode(e),f=this.texData.get(d.dataId),p=this.gpgpu.downloadMatrixFromPackedTexture(f.texture.texture,...fl(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(d),p}const a=te().getBool("WEBGL_PACK")&&i===!0,o=a?gl(t):t,c=a?new ok(o):new ak(o),l=this.runWebGLProgram(c,[{shape:o,dtype:r,dataId:e}],"float32"),u=this.texData.get(l.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),h}timerAvailable(){return te().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,r=[];let i=!1;this.programTimersStack==null?(this.programTimersStack=r,i=!0):this.activeTimers.push(r),this.activeTimers=r,e();const s=oa(this.activeTimers.map(c=>c.query)).filter(c=>c!=null),a=oa(this.activeTimers.map(c=>c.name)).filter(c=>c!=null);this.activeTimers=t,i&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(te().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const c=await Promise.all(s);o.kernelMs=cT(c),o.getExtraProfileInfo=()=>c.map((l,u)=>({name:a[u],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return te().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Qr(),endMs:null}}endTimer(e){return te().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Qr(),e)}async getQueryTime(e){if(te().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:r}=this.texData.get(e);return r!=null&&(this.disposeData(r.real.dataId,t),this.disposeData(r.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:r,texShape:i,usage:s,isPacked:a,slice:o}=this.texData.get(e),c=o&&o.origDataId||e,l=this.dataRefCount.get(c);l>1?this.dataRefCount.set(c,l-1):(this.dataRefCount.delete(c),t!=null&&(this.numBytesInGPU-=this.computeBytes(i,r),this.textureManager.releaseTexture(t,i,s,a)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=H6){return te().getBool("WEBGL_CPU_FORWARD")&&e.every(r=>this.texData.get(r.dataId).texture==null&&Ae(r.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){ri("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return V6(e.shape,t)}packedUnaryOp(e,t,r){const i=new ls(e.shape,t),s=this.compileAndRun(i,[e],r);return rs().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const i=kv(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,i)}if(te().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Fm,e.dtype);const t=new xi(e.shape,Fm),r=this.compileAndRun(t,[e]);return rs().makeTensorFromTensorInfo(r)}makeTensorInfo(e,t,r){let i;if(t==="string"&&r!=null&&r.length>0&&lu(r[0])){const s=r.map(a=>na(a));i=this.write(s,e,t)}else i=this.write(r,e,t);return this.texData.get(i).usage=null,{dataId:i,shape:e,dtype:t}}makeOutput(e,t,r){return rs().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,r),this)}unpackTensor(e){const t=new B6(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new E6(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const r=[_o(e.shape),...bo(e.shape)],i={dtype:e.dtype,shape:r,dataId:e.dataId},s=[_o(t),...bo(t)],a=new Bv(s,r),o=!0,c=[r],l=this.runWebGLProgram(a,[i],e.dtype,c,o);return{dataId:l.dataId,shape:t,dtype:l.dtype}}decode(e,t){const r=this.texData.get(e),{isPacked:i,shape:s,dtype:a}=r;if(t!=null){const d=Ae(s),f=t[0]*t[1]*4;k(d<=f,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const o=gl(s);let c;i?c=new sk(o):c=new ik(o);const l=!0,u=[t??fl(o)],h=this.runWebGLProgram(c,[{shape:o,dtype:a,dataId:e}],a,u,l,t);return{dtype:a,shape:s,dataId:h.dataId}}runWebGLProgram(e,t,r,i,s=!1,a){const o=this.makeTensorInfo(e.outputShape,r),c=this.texData.get(o.dataId);if(e.packedOutput&&(c.isPacked=!0),e.outPackingScheme===vc.DENSE){const m=a??fl(e.outputShape);c.texShape=m.map(_=>_*2)}if(e.outTexUsage!=null&&(c.usage=e.outTexUsage),Ae(o.shape)===0)return c.values=vs(o.dtype,0),o;const l=[],u=t.map(m=>{if(m.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let _=this.texData.get(m.dataId);if(_.texture==null){if(!e.packedInputs&&Ae(m.shape)<=te().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:m.shape,texData:null,isUniform:!0,uniformValues:_.values};e.packedInputs&&(_.isPacked=!0,_.shape=m.shape)}if(this.uploadToGPU(m.dataId),!!_.isPacked!=!!e.packedInputs)m=_.isPacked?this.unpackTensor(m):this.packTensor(m),l.push(m),_=this.texData.get(m.dataId);else if(_.isPacked&&!jl(_.shape,m.shape)){const b=m,w=m.shape;m.shape=_.shape,m=this.packedReshape(m,w),l.push(m),_=this.texData.get(m.dataId),b.shape=w}return{shape:m.shape,texData:_,isUniform:!1}});this.uploadToGPU(o.dataId);const h={shape:o.shape,texData:c,isUniform:!1},d=rk(e,u,h),f=this.getAndSaveBinary(d,()=>tk(this.gpgpu,e,u,h)),p=this.activeTimers!=null;let x;p&&(x=this.startTimer()),te().get("ENGINE_COMPILE_ONLY")||nk(this.gpgpu,f,u,h,i),l.forEach(m=>this.disposeIntermediateTensorInfo(m)),p&&(x=this.endTimer(x),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(x)}));const g=te().getNumber("WEBGL_FLUSH_THRESHOLD");if(g>0){const m=Qr();m-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=m)}if(!te().getBool("WEBGL_LAZILY_UNPACK")&&c.isPacked&&s===!1){const m=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),m}return o}compileAndRun(e,t,r,i,s=!1){return r=r||t[0].dtype,this.runWebGLProgram(e,t,r,i,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(te().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=Ct(()=>{if(!te().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=te().getBool("DEBUG");te().set("DEBUG",!1);const t=this.abs(Bt(1e-8)).dataSync()[0];if(te().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?z6:G6}uploadToGPU(e){const t=this.texData.get(e),{shape:r,dtype:i,values:s,texture:a,usage:o,isPacked:c}=t;if(a!=null)return;const l=this.activeTimers!=null;let u;l&&(u=Qr());let h=t.texShape;if(h==null&&(h=lL(r,c),t.texShape=h),s!=null){const d=gl(r);let f,p=h[1],x=h[0];const g=s instanceof Uint8Array||s instanceof Uint8ClampedArray;(c||!g)&&([p,x]=Mo(h[0],h[1])),c?f=new lk(d,g):f=new Mm(d,g);const m=g?[x,p]:h,_=this.makeTensorInfo(m,i),b=this.texData.get(_.dataId);g?b.usage=Sr.PIXELS:b.usage=Sr.UPLOAD,b.texShape=m,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(_.dataId),p,x,s);const w=[[x,p]],M=this.runWebGLProgram(f,[_],i,w,!0),D=this.texData.get(M.dataId);t.texShape=D.texShape,t.isPacked=D.isPacked,t.usage=D.usage,te().get("ENGINE_COMPILE_ONLY")?this.disposeData(M.dataId):(t.texture=D.texture,t.values=null,this.texData.delete(M.dataId)),this.disposeIntermediateTensorInfo(_),l&&(this.uploadWaitMs+=Qr()-u)}else{const d=this.acquireTexture(h,o,i,c);t.texture=d}}convertAndCacheOnCPU(e,t){const r=this.texData.get(e),{dtype:i}=r;return t!=null&&(r.values=q6(t,i)),r.values}acquireTexture(e,t,r,i){if(this.numBytesInGPU+=this.computeBytes(e,r),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const s=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${s} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,i)}computeBytes(e,t){return e[0]*e[1]*kl(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(const[,t]of Object.entries(this.binaryCache)){const r=new Promise(i=>{try{this.checkCompletion_(t),i(!0)}catch(s){throw s}});e.push(r)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await T$(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(wv(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:r,infLoc:i,nanLoc:s,outShapeLocation:a,outShapeStridesLocation:o,outTexShapeLocation:c}=Rv(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=r,e.infLoc=i,e.nanLoc=s,e.outShapeLocation=a,e.outShapeStridesLocation=o,e.outTexShapeLocation=c}}createTensorFromGPUData(e,t,r){e.channels=e.channels||"RGBA";const{texture:i,height:s,width:a,channels:o}=e,c=rs().backend;if(!c.gpgpu.gl.isTexture(i))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=c.writeTexture(i,t,r,s,a,o);return rs().makeTensorFromDataId(l,t,r,c)}}Tu.nextDataId=0;function q6(n,e){if(e==="float32"||e==="complex64")return n;if(e==="int32"||e==="bool"){const t=e==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let r=0;r<t.length;++r)t[r]=Math.round(n[r]);return t}else throw new Error(`Unknown dtype ${e}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dx()&&cC("webgl",()=>new Tu,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nf=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class ga{constructor(e,t,r){this.variableNames=["A","B"],this.outputShape=Gt(t,r),this.enableShapeUniforms=Gn(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ca=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class $o{constructor(e,t,r,i=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Gt(t,r);const s=this.outputShape.length;this.enableShapeUniforms=Gn(s);let a="";if(i)if(s===0||Ae(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${Jt(s)} coords = getOutputCoords();
        `,s===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const c=qn("coords",s);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${c[s-2]} + 1) >= outShape[${s} - 2];
            bool nextColOutOfBounds =
              (${c[s-1]} + 1) >= outShape[${s} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${c[s-2]} + 1) >= ${this.outputShape[s-2]};
            bool nextColOutOfBounds =
              (${c[s-1]} + 1) >= ${this.outputShape[s-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mr(n){const{inputs:e,backend:t}=n,{x:r}=e;return t.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const K6={kernelName:Gd,backendName:"webgl",kernelFunc:mr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rs(n){const{inputs:e,backend:t}=n,{real:r,imag:i}=e,s=t.makeTensorInfo(r.shape,"complex64"),a=t.texData.get(s.dataId),o=mr({inputs:{x:r},backend:t}),c=mr({inputs:{x:i},backend:t});return a.complexTensorInfos={real:o,imag:c},s}const Y6={kernelName:A1,backendName:"webgl",kernelFunc:Rs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vv="return (a < 0.) ? b * a : a;",zv=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Z6(n){const{inputs:e,backend:t,attrs:r}=n,{x:i}=e,{alpha:s}=r,a=t.makeTensorInfo([],"float32",Co(s,"float32")),o=te().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $o(zv,i.shape,a.shape):new ga(Vv,i.shape,a.shape),c=t.runWebGLProgram(o,[i,a],"float32");return t.disposeIntermediateTensorInfo(a),c}const J6={kernelName:g0,backendName:"webgl",kernelFunc:Z6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gv="return (a < 0.) ? b * a : a;",Wv=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Q6(n){const{inputs:e,backend:t}=n,{x:r,alpha:i}=e,s=te().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $o(Wv,r.shape,i.shape):new ga(Gv,r.shape,i.shape);return t.runWebGLProgram(s,[r,i],"float32")}const e5={kernelName:q0,backendName:"webgl",kernelFunc:Q6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lo="if (isnan(x)) return x;";function zt({opSnippet:n,packedOpSnippet:e,cpuKernelImpl:t,dtype:r}){return({inputs:i,backend:s})=>{const{x:a}=i,o=s,c=r||a.dtype;if(o.shouldExecuteOnCPU([a])&&t!=null){const h=o.texData.get(a.dataId),d=t(h.values,c);return o.makeTensorInfo(a.shape,c,d)}const l=te().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let u;return l?u=new ls(a.shape,e):u=new xi(a.shape,n),o.runWebGLProgram(u,[a],c)}}function $n({opSnippet:n,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:r=!1,cpuKernelImpl:i,dtype:s}){return({inputs:a,backend:o})=>{const{a:c,b:l}=a,u=o;if(r&&c.dtype==="complex64"){const p=u.texData.get(c.dataId),x=u.texData.get(l.dataId),[g,m]=[[p.complexTensorInfos.real,x.complexTensorInfos.real],[p.complexTensorInfos.imag,x.complexTensorInfos.imag]].map(b=>{const[w,I]=b,M={dataId:w.dataId,dtype:w.dtype,shape:c.shape},D={dataId:I.dataId,dtype:I.dtype,shape:l.shape},F=new ga(n,c.shape,l.shape);return u.runWebGLProgram(F,[M,D],Si(w.dtype,I.dtype))}),_=Rs({inputs:{real:g,imag:m},backend:u});return u.disposeIntermediateTensorInfo(g),u.disposeIntermediateTensorInfo(m),_}const h=s||Si(c.dtype,l.dtype);if((c.dtype==="string"||l.dtype==="string"||u.shouldExecuteOnCPU([c,l]))&&i!=null){const p=u.texData.get(c.dataId).values,x=u.texData.get(l.dataId).values,g=c.dtype==="string"?vo(p):p,m=c.dtype==="string"?vo(x):x,[_,b]=i(c.shape,l.shape,g,m,h),w=u.makeTensorInfo(b,h),I=u.texData.get(w.dataId);return I.values=_,w}const d=te().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let f;return d?f=new $o(e,c.shape,l.shape,t):f=new ga(n,c.shape,l.shape),u.runWebGLProgram(f,[c,l],h)}}function _c(n,e=!1){if(n==="linear")return e?$6:M6;if(n==="relu")return e?k6:D6;if(n==="elu")return e?L6:I6;if(n==="relu6")return e?F6:P6;if(n==="prelu")return e?Wv:Gv;if(n==="leakyrelu")return e?zv:Vv;if(n==="sigmoid")return e?U6:O6;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hv{constructor(e,t,r,i=!1,s=!1,a=!1,o=null,c=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r,this.enableShapeUniforms=Gn(this.outputShape.length);const u=i?e[1]:e[2],h=Math.ceil(u/2),d=i?"i * 2, rc.y":"rc.y, i * 2",f=s?"rc.z, i * 2":"i * 2, rc.z",p=i?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],x=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",m="";o&&(c?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:l?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:g=`vec4 activation(vec4 x) {
          ${o}
        }`,m="result = activation(result);");const _=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),c&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",w="rc.x";e[0]<t[0]?b=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(w=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${h}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${b};
        int batchB = ${w};
        for (int i = 0; i < ${h}; i++) {
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${f});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${p[0]} * ${x[0]});
          result += (${p[1]} * ${x[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${_}

        ${m}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Um={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class Bm{constructor(e,t,r){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Gt(t,r),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vm="return a * b;";function Mf(n){const{inputs:e,backend:t}=n,{a:r,b:i}=e,s=Si(r.dtype,i.dtype);if(r.dtype==="complex64"){const o=t.texData.get(r.dataId),c=t.texData.get(i.dataId),l=new Bm(Um.REAL,r.shape,i.shape),u=new Bm(Um.IMAG,r.shape,i.shape),h=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:r.shape},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:c.complexTensorInfos.real.dataId,dtype:c.complexTensorInfos.real.dtype,shape:i.shape},{dataId:c.complexTensorInfos.imag.dataId,dtype:c.complexTensorInfos.imag.dtype,shape:i.shape}],d=t.runWebGLProgram(l,h,"float32"),f=t.runWebGLProgram(u,h,"float32"),p=Rs({inputs:{real:d,imag:f},backend:t});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),p}if(t.shouldExecuteOnCPU([r,i])){const o=t.texData.get(r.dataId),c=t.texData.get(i.dataId),[l,u]=QF(r.shape,i.shape,o.values,c.values,s),h=t.makeTensorInfo(u,s),d=t.texData.get(h.dataId);return d.values=l,h}let a;return te().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new $o(Vm,r.shape,i.shape):a=new ga(Vm,r.shape,i.shape),t.runWebGLProgram(a,[r,i],s)}const t5={kernelName:k0,backendName:"webgl",kernelFunc:Mf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n5(n,e,t){const r=[_o(n.shape),...bo(n.shape)],i={dtype:n.dtype,shape:r,dataId:n.dataId},s=[_o(e),...bo(e)],a=new Bv(s,r),o=!0,c=[r],l=t.runWebGLProgram(a,[i],n.dtype,c,o);return{dataId:l.dataId,shape:e,dtype:l.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ke(n){const{inputs:e,backend:t,attrs:r}=n,{x:i}=e,{shape:s}=r,a=t,o=Ae(i.shape),c=uT(s,o),l=Ae(c);k(o===l,()=>`The new shape (${c}) has ${l} elements and the old shape (${i.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);const u=a.texData.get(i.dataId);return u.isPacked&&!jl(i.shape,c)&&!(u.texture!==null&&jl(u.shape,c))?n5(i,c,a):(a.incRef(i.dataId),{dataId:i.dataId,shape:c,dtype:i.dtype})}const r5={kernelName:r2,backendName:"webgl",kernelFunc:ke};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zm{constructor(e,t){this.variableNames=["x"];const{windowSize:r,batchSize:i,inSize:s,outSize:a}=e;this.outputShape=[i,a];const o=Math.floor(r/4)*4,c=r%4;let l="sumValue += dot(values, ones);";if(t!=null){const h=1/t;l=`sumValue += dot(values * ${po(h)?h.toPrecision(2):h}, ones);`}let u="";s%r>0&&(u=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        float sumValue = 0.0;

        for (int i = 0; i < ${o}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${o};
        if (${c===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${c===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${c===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class i5{constructor(e,t){this.variableNames=["x"];const{windowSize:r,batchSize:i,inSize:s,outSize:a}=e;this.outputShape=[i,a];let o="0.0",c="";t==="prod"?o="1.0":t==="min"?(o="1.0 / 1e-20",c="min"):t==="max"&&(o="-1.0 / 1e-20",c="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?l="sumValue":t==="prod"?l="prodValue":t==="all"?l="allValue":t==="any"&&(l="anyValue");const u=Math.floor(r/4)*4,h=r%4;let d=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${c}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${c}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,f="vec4";t==="all"?(o="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,f="bvec4"):t==="any"&&(o="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,f="bvec4");let p="";s%r>0&&(p=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${o};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        vec4 minMaxValue = vec4(${o});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${u};
        if (${h===1}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===2}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===3}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${l});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s5(n){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const t=e.length?e[e.length-1].outSize:n[1],r=wu(t);e.push({inSize:t,windowSize:r,outSize:Math.ceil(t/r)})}return e}function Aa(n,e,t,r){const i=s5(n.shape);let s=n;for(let a=0;a<i.length;a++){const{inSize:o,windowSize:c,outSize:l}=i[a];let u,h;t==="mean"?u=a===0?new zm({windowSize:c,inSize:o,batchSize:n.shape[0],outSize:l},o):new zm({windowSize:c,inSize:o,batchSize:n.shape[0],outSize:l}):u=new i5({windowSize:c,inSize:o,batchSize:n.shape[0],outSize:l},t),h=s,s=r.runWebGLProgram(u,[s],e),h.dataId!==n.dataId&&r.disposeIntermediateTensorInfo(h)}return s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class a5{constructor(e,t){this.variableNames=["A"];const r=new Array(e.length);for(let a=0;a<r.length;a++)r[a]=e[t[a]];this.outputShape=r,this.rank=r.length;const i=Jt(this.rank),s=o5(t);this.userCode=`
    void main() {
      ${i} resRC = getOutputCoords();
      setOutput(getA(${s}));
    }
    `}}function o5(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let i=0;i<n.length;i++)r[n[i]]=t[i];return r.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class c5{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const r=new Array(e.length);for(let u=0;u<r.length;u++)r[u]=e[t[u]];if(this.outputShape=r,this.rank=r.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const i=Jt(this.rank),s=Uv("rc",this.rank),a=new Array(this.rank);for(let u=0;u<t.length;u++)a[t[u]]=s[u];const o=`vec2(${a.slice(-2).join()})`,c=`++${s[this.rank-1]} < ${r[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${o})`;this.userCode=`
    void main() {
      ${i} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${c}) {
        result[1] = ${l};
      }
      --${s[this.rank-1]};
      if(++${s[this.rank-2]} < ${r[this.rank-2]}) {
        result[2] = ${l};
        if(${c}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cu(n,e,t){const r=te().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new c5(n.shape,e):new a5(n.shape,e);return t.runWebGLProgram(r,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l5(n,e,t,r){const i=e,s=n.shape.length,a=Rn(i,n.shape);let o=a;const c=Xr(o,s),l=c!=null;let u=n;l&&(u=Cu(n,c,r),o=jr(o.length,s)),li("sum",o,s);const[h,d]=wi(u.shape,o);let f=h;t&&(f=Rr(h,a));const p=Ae(d),g=Ae(n.shape)/p,m=ke({inputs:{x:u},attrs:{shape:[g,p]},backend:r}),_=Xd(n.dtype),b=Aa(m,_,"sum",r),w=ke({inputs:{x:b},attrs:{shape:f},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(b),l&&r.disposeIntermediateTensorInfo(u),w}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Au(n){const{inputs:e,backend:t,attrs:r}=n,{x:i}=e,{axis:s,keepDims:a}=r;return l5(i,s,a,t)}const u5={kernelName:S2,backendName:"webgl",kernelFunc:Au};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kn(n){const{inputs:e,backend:t,attrs:r}=n,{x:i}=e,{perm:s}=r,a=t,o=i.shape.length,c=new Array(o);for(let u=0;u<c.length;u++)c[u]=i.shape[s[u]];let l;if(a.shouldExecuteOnCPU([i])){const h=a.texData.get(i.dataId).values,d=Rf(h,i.shape,i.dtype,s,c);l=a.makeTensorInfo(c,i.dtype);const f=a.texData.get(l.dataId);f.values=d}else l=Cu(i,s,a);return l}const h5={kernelName:Sl,backendName:"webgl",kernelFunc:Kn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xv=1e3;function Kl({a:n,b:e,transposeA:t,transposeB:r,backend:i,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:c=null}){const l=n.shape.length,u=e.shape.length,h=t?n.shape[l-2]:n.shape[l-1],d=r?e.shape[u-1]:e.shape[u-2],f=t?n.shape[l-1]:n.shape[l-2],p=r?e.shape[u-2]:e.shape[u-1],x=n.shape.slice(0,-2),g=e.shape.slice(0,-2),m=Ae(x),_=Ae(g),w=Gt(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([f,p]);k(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${r} must match.`);const I=t?[m,h,f]:[m,f,h],M=r?[_,p,d]:[_,d,p],D=ke({inputs:{x:n},backend:i,attrs:{shape:I}}),F=ke({inputs:{x:e},backend:i,attrs:{shape:M}}),N=[D,F],A=Math.max(m,_),B=t?D.shape[1]:D.shape[2],J=s!=null,Y=a!=null,ae=c==="leakyrelu",le=c!=null?_c(c,!0):null,he=J||Y||ae||le!=null;let de;if((f===1||p===1)&&B>Xv&&he===!1){let $e=D,He=F;t&&($e=Kn({inputs:{x:D},backend:i,attrs:{perm:[0,2,1]}}),N.push($e)),r&&(He=Kn({inputs:{x:F},backend:i,attrs:{perm:[0,2,1]}}),N.push(He));const ze=p!==1,_t=p===1;let Ot=$e;ze&&(Ot=ke({inputs:{x:$e},backend:i,attrs:{shape:[A,B,1]}}),N.push(Ot));const xe=p===1?2:1;let Te=He;_t&&(Te=ke({inputs:{x:He},backend:i,attrs:{shape:[A,1,B]}}),N.push(Te));const Ge=Mf({inputs:{a:Ot,b:Te},backend:i});de=Au({inputs:{x:Ge},backend:i,attrs:{axis:xe,keepDims:!0}}),N.push(Ge)}else{const $e=Si(n.dtype,e.dtype),He=new Hv(I,M,[A,f,p],t,r,J,le,Y,ae),ze=[D,F];if(s!=null&&ze.push(s),Y&&ze.push(a),ae){const _t=i.makeTensorInfo([],"float32",Co(o,"float32"));ze.push(_t),N.push(_t)}de=i.runWebGLProgram(He,ze,$e)}const oe=ke({inputs:{x:de},backend:i,attrs:{shape:w}});N.push(de);for(const $e of N)i.disposeIntermediateTensorInfo($e);return oe}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d5(n){const{inputs:e,backend:t,attrs:r}=n,{a:i,b:s,bias:a,preluActivationWeights:o}=e,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:h}=r;return Kl({a:i,b:s,transposeA:c,transposeB:l,backend:t,bias:a,preluActivationWeights:o,leakyreluAlpha:h,activation:u})}const f5={kernelName:Xh,backendName:"webgl",kernelFunc:d5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gm="return abs(x);";function p5(n){const{inputs:e,backend:t}=n,{x:r}=e;if(t.shouldExecuteOnCPU([r])&&r.dtype!=="complex64"){const s=t.texData.get(r.dataId),a=kv(s.values);return t.makeTensorInfo(r.shape,r.dtype,a)}let i;return te().getBool("WEBGL_PACK_UNARY_OPERATIONS")?i=new ls(r.shape,Gm):i=new xi(r.shape,Gm),t.runWebGLProgram(i,[r],r.dtype)}const m5={kernelName:s1,backendName:"webgl",kernelFunc:p5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g5=qr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,x5=zt({opSnippet:g5}),y5={kernelName:a1,backendName:"webgl",kernelFunc:x5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v5=qr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,_5=zt({opSnippet:v5}),b5={kernelName:o1,backendName:"webgl",kernelFunc:_5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wm="return a + b;",S5=$n({opSnippet:Wm,packedOpSnippet:Wm,supportsComplex:!0,cpuKernelImpl:DF}),w5={kernelName:Vd,backendName:"webgl",kernelFunc:S5};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class E5{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((s,a)=>`T${a}`);const r=[];this.variableNames.forEach(s=>{r.push(`float v${s} = get${s}AtOutCoords();`)});const i=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        float result = ${i};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class T5{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((s,a)=>`T${a}`);const r=[];this.variableNames.forEach(s=>{r.push(`vec4 v${s} = get${s}AtOutCoords();`)});const i=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        vec4 result = ${i};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tl(n){const{inputs:e,backend:t}=n,r=e;if(r.length===1)return mr({inputs:{x:r[0]},backend:t});if(r.length>te().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const c=Math.floor(r.length/2),l=Tl({inputs:r.slice(0,c),backend:t}),u=Tl({inputs:r.slice(c),backend:t});return Tl({inputs:[l,u],backend:t})}const i=r.map(c=>c.dtype).reduce((c,l)=>Si(c,l)),s=r.map(c=>c.shape),o=te().getBool("WEBGL_PACK")?new T5(r[0].shape,s):new E5(r[0].shape,s);return t.runWebGLProgram(o,r,i)}const C5={kernelName:c1,backendName:"webgl",kernelFunc:Tl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A5(n){const{inputs:e,backend:t,attrs:r}=n,{x:i}=e,{axis:s,keepDims:a}=r,o=i.shape.length,c=Rn(s,i.shape);let l=c;const u=Xr(l,o);let h=i;u!=null&&(h=Kn({inputs:{x:i},backend:t,attrs:{perm:u}}),l=jr(l.length,o)),li("all",l,o);const[d,f]=wi(h.shape,l),p=Ae(f),x=ke({inputs:{x:h},backend:t,attrs:{shape:[-1,p]}}),g=Aa(x,x.dtype,"all",t);let m;if(a){const _=Rr(d,c);m=ke({inputs:{x:g},backend:t,attrs:{shape:_}})}else m=ke({inputs:{x:g},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(g),u!=null&&t.disposeIntermediateTensorInfo(h),m}const R5={kernelName:l1,backendName:"webgl",kernelFunc:A5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N5(n){const{inputs:e,backend:t,attrs:r}=n,{x:i}=e,{axis:s,keepDims:a}=r,o=i.shape.length,c=Rn(s,i.shape);let l=c;const u=Xr(l,o);let h=i;u!=null&&(h=Kn({inputs:{x:i},backend:t,attrs:{perm:u}}),l=jr(l.length,o)),li("any",l,o);const[d,f]=wi(h.shape,l),p=Ae(f),x=ke({inputs:{x:h},backend:t,attrs:{shape:[-1,p]}}),g=Aa(x,x.dtype,"any",t);let m;if(a){const _=Rr(d,c);m=ke({inputs:{x:g},backend:t,attrs:{shape:_}})}else m=ke({inputs:{x:g},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(g),u!=null&&t.disposeIntermediateTensorInfo(h),m}const M5={kernelName:u1,backendName:"webgl",kernelFunc:N5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class I5{constructor(e,t,r){this.variableNames=["A"];const{windowSize:i,batchSize:s,outSize:a}=e;r||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];const o=t==="max"?">":"<",c=r?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${i};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${i}; i++) {
          int inIdx = ${c};
          float candidate = getA(batch, inIdx);
          if (candidate ${o} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class D5{constructor(e,t,r,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,k(e.length>2,()=>`Packed arg${r.charAt(0).toUpperCase()+r.slice(1)} supports only inputs with rank above 2.`);const s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),i||this.variableNames.push("bestIndicesA");const o=this.outputShape,c=o.length,l=Jt(c),u=qn("coords",c);let h,d;if(a===1){d=c+1;const F=Jt(d);h=`
        ${F} sourceLocR = ${F}(${u.join()}, 0);
        ++${u[c-1]};
        ${F} sourceLocG = ${F}(${u.join()}, 0);
        ++${u[c-2]};
        ${F} sourceLocA = ${F}(${u.join()}, 0);
        --${u[c-1]};
        ${F} sourceLocB = ${F}(${u.join()}, 0);
        --${u[c-2]};`}else d=c,h=`
        ${l} sourceLocR = coords;
        ++${u[c-1]};
        ${l} sourceLocG = coords;
        ++${u[c-2]};
        ${l} sourceLocA = coords;
        --${u[c-1]};
        ${l} sourceLocB = coords;
        --${u[c-2]};`;const f=["x","y","z","w","u","v"].slice(0,d),p="."+f[d-1],x=f.map(F=>"int "+F),g=qn("sourceLocR",d-1).concat("inIdx.r"),m=qn("sourceLocG",d-1).concat("inIdx.g"),_=qn("sourceLocB",d-1).concat("inIdx.b"),b=qn("sourceLocA",d-1).concat("inIdx.a"),w=r==="max"?"greaterThan":"lessThan",I=i?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${_.join()}),
                             getBestIndicesAChannel(${b.join()})));`,M=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${m.join()}) : 0.,
            hasNextRow ? getAChannel(${_.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,D=i?"":`
      float getBestIndicesAChannel(${x.join()}) {
        return getChannel(getBestIndicesA(${f.join()}),
                                          vec2(${f.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${x.join()}) {
        return getChannel(getA(${f.join()}),
                               vec2(${f.slice(-2).join()}));
      }
      ${D}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${u[c-1]} < ${o[c-1]-1};
        bool hasNextRow = ${u[c-2]} < ${o[c-2]-1};
        ${h}
        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},
          sourceLocB${p}, sourceLocA${p}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${M};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${I}
          vec4 candidate = ${M};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jv(n,e,t,r=null){let i=e.shape[0],s=e.shape[1];r!=null&&(i=r.shape[0],s=r.shape[1]);const a=wu(s),o={windowSize:a,inSize:s,batchSize:i,outSize:Math.ceil(s/a)},c=new I5(o,t,r==null),l=[e];r!=null&&l.push(r);const u=n.runWebGLProgram(c,l,"int32");if(u.shape[1]===1)return u;const h=jv(n,e,t,u);return n.disposeIntermediateTensorInfo(u),h}function qv(n,e,t,r=null){const i=r!=null?r.shape:e.shape,s=i[i.length-1],a=wu(s),o=new D5(i,a,t,r==null),c=r==null?[e]:[e,r],l=n.runWebGLProgram(o,c,"int32");if(l.shape.length===e.shape.length){const u=qv(n,e,t,l);return n.disposeIntermediateTensorInfo(l),u}return l}function Kv(n,e,t,r){const i=[t];if(li("arg"+r.charAt(0).toUpperCase()+r.slice(1),i,e.shape.length),!te().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const s=[],a=n.texData.get(e.dataId),o=a!==null&&a.isPacked;let c=e;o&&(c=n.unpackTensor(e),s.push(c));const[l,u]=wi(c.shape,i),h=Ae(u),d=ke({inputs:{x:c},backend:n,attrs:{shape:[-1,h]}});s.push(d);const f=jv(n,d,r);s.push(f);const p=ke({inputs:{x:f},backend:n,attrs:{shape:l}});return s.forEach(x=>n.disposeIntermediateTensorInfo(x)),p}return qv(n,e,r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P5(n){const{inputs:e,backend:t,attrs:r}=n,{x:i}=e,{axis:s}=r;let a=Rn(s,i.shape);const o=Xr(a,i.shape.length);let c=i;const l=[];o!=null&&(c=Kn({inputs:{x:i},backend:t,attrs:{perm:o}}),l.push(c),a=jr(a.length,c.shape.length)),li("argMax",[a[0]],c.shape.length);const u=Kv(t,c,a[0],"max");return l.forEach(h=>t.disposeIntermediateTensorInfo(h)),u}const O5={kernelName:h1,backendName:"webgl",kernelFunc:P5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $5(n){const{inputs:e,backend:t,attrs:r}=n,{x:i}=e,{axis:s}=r;let a=Rn(s,i.shape);const o=Xr(a,i.shape.length);let c=i;const l=[];o!=null&&(c=Kn({inputs:{x:i},backend:t,attrs:{perm:o}}),l.push(c),a=jr(a.length,c.shape.length)),li("argMin",[a[0]],c.shape.length);const u=Kv(t,c,a[0],"min");return l.forEach(h=>t.disposeIntermediateTensorInfo(h)),u}const L5={kernelName:d1,backendName:"webgl",kernelFunc:$5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k5=qr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,F5=zt({opSnippet:k5}),U5={kernelName:f1,backendName:"webgl",kernelFunc:F5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B5=qr+"return log(x + sqrt(x * x + 1.0));",V5=zt({opSnippet:B5}),z5={kernelName:p1,backendName:"webgl",kernelFunc:V5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G5=qr+`
  return atan(x);
`,W5=zt({opSnippet:G5}),H5={kernelName:m1,backendName:"webgl",kernelFunc:W5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X5=Nf+`
  return atan(a, b);
`,j5=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Ca+`
  return result;
`,q5=$n({opSnippet:X5,packedOpSnippet:j5}),K5={kernelName:x1,backendName:"webgl",kernelFunc:q5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y5=qr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,Z5=zt({opSnippet:Y5}),J5={kernelName:g1,backendName:"webgl",kernelFunc:Z5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bc{constructor(e,t,r,i=!1,s=!1){if(this.variableNames=["x"],t==="avg"&&r)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,o=e.strideHeight,c=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,f=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const x=t==="avg",g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,m=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let _="0.0";if(x||(_="-1.0 / 1e-20"),r){const F=">=";this.userCode=`
        const ivec2 strides = ivec2(${o}, ${c});
        const ivec2 pads = ivec2(${f}, ${p});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${F} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${i?s?g:m:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const b="max";let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(w="avgValue / max(count, 1.0)");const I=Math.floor(a/4)*4,M=a%4,D=`
      if (${x}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${b}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${c});
      const ivec2 pads = ivec2(${f}, ${p});
      const float initializationValue = ${_};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${_});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${I}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${D}
          }

          int xC = xCCorner + ${I};
          if (${M===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${D}
          } else if (${M===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${D}
          } else if (${M===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${D}
          }
        }
        setOutput(${w});
      }
    `}}class If{constructor(e,t,r,i=!1,s=!1){if(this.variableNames=["x"],t==="avg"&&r)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,o=e.strideDepth,c=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,h=e.dilationHeight,d=e.dilationWidth,f=e.effectiveFilterDepth,p=e.effectiveFilterHeight,x=e.effectiveFilterWidth,g=e.padInfo.front,m=e.padInfo.top,_=e.padInfo.left;this.outputShape=e.outShape;const b=t==="avg";let w="0.0";if(b||(w="-1.0 / 1e-20"),r){const A=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${o}, ${c}, ${l});
        const ivec3 pads = ivec3(${g}, ${m}, ${_});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${f};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${p};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${x};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${A} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${i?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${x} +
                      wR * ${x} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const I="max";let M=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(M="avgValue / max(count, 1.0)");const D=Math.floor(a/4)*4,F=a%4,N=`
      if (${b}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${I}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${o}, ${c}, ${l});
      const ivec3 pads = ivec3(${g}, ${m}, ${_});
      const float initializationValue = ${w};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${w});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${f};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${p};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${D}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${N}
            }

            int xC = xCCorner + ${D};
            if (${F===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${N}
            } else if (${F===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${N}
            } else if (${F===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${N}
            }
          }
        }
        setOutput(${M});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q5(n){const{inputs:e,backend:t,attrs:r}=n,{x:i}=e;Oc(i,"avgPool");const{filterSize:s,strides:a,pad:o,dimRoundingMode:c}=r,l=1;k(xr(a,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);const u=_a(i.shape,s,a,l,o,c);if(u.filterWidth===1&&u.filterHeight===1&&fn(u.inShape,u.outShape))return mr({inputs:{x:i},backend:t});const h=new bc(u,"avg",!1);return t.runWebGLProgram(h,[i],"float32")}const eU={kernelName:y1,backendName:"webgl",kernelFunc:Q5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tU(n){const{inputs:e,backend:t,attrs:r}=n,{x:i}=e,{filterSize:s,strides:a,pad:o,dimRoundingMode:c,dataFormat:l}=r,u=[1,1,1],h=Nc(i.shape,s,a,u,o,c,l),d=new If(h,"avg",!1);return t.runWebGLProgram(d,[i],"float32")}const nU={kernelName:v1,backendName:"webgl",kernelFunc:tU};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rU{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,r=e.filterWidth,i=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,o=e.dilationWidth,c=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=c-1-e.padInfo.top,h=l-1-e.padInfo.left,d=1/(t*r);this.userCode=`
      const ivec2 pads = ivec2(${u}, ${h});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${c};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${i}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${o}) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class iU{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,r=e.filterHeight,i=e.filterWidth,s=e.strideDepth,a=e.strideHeight,o=e.strideWidth,c=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,h=e.effectiveFilterDepth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,p=h-1-e.padInfo.front,x=d-1-e.padInfo.top,g=f-1-e.padInfo.left,m=1/(t*r*i);this.userCode=`
      const ivec3 pads = ivec3(${p}, ${x}, ${g});
      const float avgMultiplier = float(${m});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${c}) {
          float dyD = float(dyDCorner + wD) / ${s}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${f};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sU(n){const{inputs:e,backend:t,attrs:r}=n,{dy:i,input:s}=e,a=s,{filterSize:o,strides:c,pad:l,dimRoundingMode:u}=r,h=[1,1,1],d=Nc(a.shape,o,c,h,l,u),f=new iU(d);return t.runWebGLProgram(f,[i],a.dtype)}const aU={kernelName:ET,backendName:"webgl",kernelFunc:sU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oU(n){const{inputs:e,backend:t,attrs:r}=n,{dy:i,input:s}=e,a=s;Oc([i,s],"avgPoolGrad");const{filterSize:o,strides:c,pad:l}=r,u=_a(a.shape,o,c,1,l),h=new rU(u);return t.runWebGLProgram(h,[i],a.dtype)}const cU={kernelName:wT,backendName:"webgl",kernelFunc:oU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lU(n){const{inputs:e,backend:t,attrs:r}=n,{a:i,b:s}=e,{transposeA:a,transposeB:o}=r;return Kl({a:i,b:s,transposeA:a,transposeB:o,backend:t})}const uU={kernelName:_1,backendName:"webgl",kernelFunc:lU};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hU{constructor(e,t,r,i,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],Gt(e,t),Gt(e,r);let o="0.0";i!=null&&(Gt(e,i),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let c="1.0";s!=null&&(Gt(e,s),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${o};
        float scale = ${c};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dU{constructor(e,t,r,i,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Gt(e,t),Gt(e,r);let o="vec4(0.0)";i!=null&&(Gt(e,i),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let c="vec4(1.0)";s!=null&&(Gt(e,s),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${o};
        vec4 scale = ${c};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fU=({inputs:n,backend:e,attrs:t})=>{const{x:r,mean:i,variance:s,offset:a,scale:o}=n;k(i.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),k(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),k(o==null||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:c}=t;c==null&&(c=.001);const l=[r,i,s];let u=null;a!=null&&(u=a.shape,l.push(a));let h=null;o!=null&&(h=o.shape,l.push(o));const d=te().getBool("WEBGL_PACK_NORMALIZATION")?new dU(r.shape,i.shape,s.shape,u,h,c):new hU(r.shape,i.shape,s.shape,u,h,c);return e.runWebGLProgram(d,l,l[0].dtype)},pU={kernelName:a0,backendName:"webgl",kernelFunc:fU};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mU{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=Jt(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const r=gU(this.rank);let i;const s=e.map((a,o)=>`sourceLoc.${gd[o]} = start[${o}] + coords.${gd[o]};`);i=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${s.join(`
`)}
      `,this.userCode=`
      void main() {
        ${i}
        setOutput(getSource(${r}));
      }
    `}}const gd=["x","y","z","w","u","v"];function gU(n){if(n===1)return"sourceLoc";if(n<=6)return gd.slice(0,n).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xU{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=Jt(this.rank),r=qn("coords",this.rank),i=qn("sourceLoc",this.rank),s=this.rank===1?"sourceLoc":`vec2(${i.slice(-2).join()})`,a=`getChannel(getSource(${i.join()}), ${s})`,o=`
      result.x = ${a};
      if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
        ++${i[this.rank-1]};
        result.y = ${a};
        --${i[this.rank-1]};
      }
    `,c=this.rank===1?"":`
      --${r[this.rank-1]};
      if (++${r[this.rank-2]} < ${e[this.rank-2]}) {
        ++${i[this.rank-2]};
        result.z = ${a};
        if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
          ++${i[this.rank-1]};
          result.w = ${a};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((u,h)=>`start[${h}]`).join()});`:e.map((u,h)=>`${i[h]} = ${r[h]} + start[${h}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${o}
        ${c}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yU(n,e,t,r){const i=r.texData.get(n.dataId),s=r.makeTensorInfo(t,n.dtype),a=r.texData.get(s.dataId);Object.assign(a,i),a.refCount=1,a.shape=t,a.dtype=n.dtype;let o=vf(e,Pn(n.shape));i.slice&&(o+=i.slice.flatOffset),a.slice={flatOffset:o,origDataId:i.slice&&i.slice.origDataId||n.dataId};const c=r.dataRefCount.get(a.slice.origDataId)||1;return r.dataRefCount.set(a.slice.origDataId,c+1),s}function ko(n){const{inputs:e,backend:t,attrs:r}=n,{x:i}=e,{begin:s,size:a}=r,[o,c]=Fy(i,s,a);if(Ry(i,o,c),Ae(c)===0)return t.makeTensorInfo(c,i.dtype,[]);if(t.shouldExecuteOnCPU([i])||i.dtype==="string"){const h=t.texData.get(i.dataId),d=u6(h.values,o,c,i.shape,i.dtype);return t.makeTensorInfo(c,i.dtype,d)}const{isPacked:l}=t.texData.get(i.dataId),u=yf(i.shape,o,c);if(l||!u){const h=te().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xU(c):new mU(c),d=[o];return t.runWebGLProgram(h,[i],i.dtype,d)}return t.uploadToGPU(i.dataId),yU(i,o,c,t)}const vU={kernelName:m2,backendName:"webgl",kernelFunc:ko};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _U=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:i}=e,{blockShape:s,crops:a}=r;k(i.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const o=s.reduce((_,b)=>_*b),c=bf(i.shape,s,o),l=Sf(c.length,s.length),u=wf(i.shape,s,o),h=Xy(a,s.length),d=jy(u,a,s.length),f=[],p=ke({inputs:{x:i},backend:t,attrs:{shape:c}}),x=Kn({inputs:{x:p},backend:t,attrs:{perm:l}}),g=ke({inputs:{x},backend:t,attrs:{shape:u}}),m=ko({inputs:{x:g},backend:t,attrs:{begin:h,size:d}});return f.push(p),f.push(x),f.push(g),f.forEach(_=>t.disposeIntermediateTensorInfo(_)),m},bU={kernelName:b1,backendName:"webgl",kernelFunc:_U};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SU(n){const{inputs:e,backend:t,attrs:r}=n,{x:i,weights:s}=e,{size:a}=r,o=t.readSync(i.dataId),c=t.readSync(s.dataId),l=Lv(o,c,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,l)}const wU={kernelName:S1,backendName:"webgl",kernelFunc:SU};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EU=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,TU=`
  return float(int(a.r) & int(b.r));
`;function CU(n){const{inputs:e,backend:t}=n,{a:r,b:i}=e,s=te().getBool("WEBGL_PACK_BINARY_OPERATIONS"),a=te().getNumber("WEBGL_VERSION");if(t.shouldExecuteOnCPU([r,i])||a===1){const c=t.texData.get(r.dataId).values,l=t.texData.get(i.dataId).values,[u,h]=OF(r.shape,i.shape,c,l,r.dtype),d=t.makeTensorInfo(h,r.dtype),f=t.texData.get(d.dataId);return f.values=u,d}let o;return s?o=new $o(EU,r.shape,i.shape,!1):o=new ga(TU,r.shape,i.shape),t.runWebGLProgram(o,[r,i],r.dtype)}const AU={kernelName:w1,backendName:"webgl",kernelFunc:CU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RU(n){const{inputs:e,backend:t}=n,{s0:r,s1:i}=e,s=t.readSync(r.dataId),a=t.readSync(i.dataId),o=Gt(Array.from(s),Array.from(a));return t.makeTensorInfo([o.length],"int32",Int32Array.from(o))}const NU={kernelName:E1,backendName:"webgl",kernelFunc:RU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MU="return float(a != b);",Yv=$n({opSnippet:MU,cpuKernelImpl:t6,dtype:"bool"}),IU={kernelName:U0,backendName:"webgl",kernelFunc:Yv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lc(n){const{inputs:e,backend:t}=n,{input:r}=e,i=t.texData.get(r.dataId);return mr({inputs:{x:i.complexTensorInfos.real},backend:t})}const DU={kernelName:e2,backendName:"webgl",kernelFunc:Lc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PU="return float(int(x));";function OU(n,e){const t=new xi(n.shape,PU),r=e.runWebGLProgram(t,[n],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xd(n){const{inputs:e,backend:t,attrs:r}=n,{x:i}=e,{dtype:s}=r;if(s==="complex64"){if(i.dtype==="complex64")return mr({inputs:{x:i},backend:t});const a=da(i.shape),o=xd({inputs:{x:i},backend:t,attrs:{dtype:"float32"}}),c=Rs({inputs:{real:o,imag:a},backend:t});return a.dispose(),t.disposeIntermediateTensorInfo(o),c}if(i.dtype==="complex64"){const a=Lc({inputs:{input:i},backend:t}),o=xd({inputs:{x:a},backend:t,attrs:{dtype:s}});return t.disposeIntermediateTensorInfo(a),o}if(!fT(i.dtype,s)){const a=mr({inputs:{x:i},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:s}}if(t.shouldExecuteOnCPU([i])){const a=t.texData.get(i.dataId).values,[o,c,l]=$F(a,i.shape,i.dtype,s);return t.makeTensorInfo(o,c,l)}if(s==="int32")return OU(i,t);if(s==="bool"){const a=t.makeTensorInfo([],"bool",vs("bool",1)),c=Yv({inputs:{a:i,b:a},backend:t});return t.disposeIntermediateTensorInfo(a),c}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${s}`)}const $U={kernelName:zd,backendName:"webgl",kernelFunc:xd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hm="return ceil(x);",LU=zt({opSnippet:Hm,packedOpSnippet:Hm,cpuKernelImpl:LF}),kU={kernelName:T1,backendName:"webgl",kernelFunc:LU};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FU{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UU{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BU(n){const{inputs:e,backend:t,attrs:r}=n,{x:i}=e,{clipValueMin:s,clipValueMax:a}=r;let o;te().getBool("WEBGL_PACK_CLIP")?o=new UU(i.shape):o=new FU(i.shape);const c=[[s],[a]];return t.runWebGLProgram(o,[i],i.dtype,c)}const VU={kernelName:C1,backendName:"webgl",kernelFunc:BU};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zU{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xm(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function GU(n){const{inputs:e,backend:t}=n,{x:r}=e,i=t.texData.get(r.dataId),s=new zU(r.shape),a=[Xm(r,i.complexTensorInfos.real),Xm(r,i.complexTensorInfos.imag)];return t.runWebGLProgram(s,a,a[0].dtype)}const WU={kernelName:R1,backendName:"webgl",kernelFunc:GU};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HU{constructor(e){this.outputShape=[],this.outputShape=ma(e,1),this.variableNames=e.map((a,o)=>`T${o}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];const r=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){const o=t[a-1];r.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${o}));`)}const i=t.length,s=t[t.length-1];r.push(`else setOutput(getT${i}(yR, yC-${s}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${r.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XU{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=ma(e,t);const r=this.outputShape,i=r.length,s=Jt(i),a=qn("coords",i),o=["x","y","z","w","u","v"].slice(0,i);this.variableNames=e.map((x,g)=>`T${g}`);const c=new Array(e.length-1);c[0]=e[0][t];for(let x=1;x<c.length;x++)c[x]=c[x-1]+e[x][t];const l=o[t],u=o.slice(-2),h=o.join();let d=`if (${l} < ${c[0]}) {
        return getChannel(
            getT0(${h}), vec2(${u.join()}));
        }`;for(let x=1;x<c.length;x++){const g=c[x-1];d+=`
        if (${l} < ${c[x]}  && ${l} >= ${c[x-1]}) {
          return getChannel(
            getT${x}(${vl(o,l,g)}),
            vec2(${vl(u,l,g)}));
        }`}const f=c.length,p=c[c.length-1];d+=`
        return getChannel(
          getT${f}(${vl(o,l,p)}),
          vec2(${vl(u,l,p)}));`,this.userCode=`
      float getValue(${o.map(x=>"int "+x)}) {
        ${d}
      }

      void main() {
        ${s} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[i-1]} = ${a[i-1]} + 1;
        if (${a[i-1]} < ${r[i-1]}) {
          result.g = getValue(${a});
        }

        ${a[i-2]} = ${a[i-2]} + 1;
        if (${a[i-2]} < ${r[i-2]}) {
          result.a = getValue(${a});
        }

        ${a[i-1]} = ${a[i-1]} - 1;
        if (${a[i-2]} < ${r[i-2]} &&
            ${a[i-1]} < ${r[i-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}}function vl(n,e,t){const r=n.indexOf(e);return n.map((s,a)=>a===r?`${s} - ${t}`:s).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ru(n){const{inputs:e,backend:t}=n,{input:r}=e,i=t.texData.get(r.dataId);return mr({inputs:{x:i.complexTensorInfos.imag},backend:t})}const jU={kernelName:d0,backendName:"webgl",kernelFunc:Ru};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sc(n,e,t){const r=n[0].dtype;if(r==="complex64"){const f=n.map(_=>Lc({inputs:{input:_},backend:t})),p=n.map(_=>Ru({inputs:{input:_},backend:t})),x=sc(f,e,t),g=sc(p,e,t),m=Rs({inputs:{real:x,imag:g},backend:t});return f.forEach(_=>t.disposeIntermediateTensorInfo(_)),p.forEach(_=>t.disposeIntermediateTensorInfo(_)),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(g),m}let i=t.shouldExecuteOnCPU(n);if(r==="string"&&(i=!0),i){const f=n.map(w=>{const M=[-1,Ae(w.shape.slice(e))];return ke({inputs:{x:w},backend:t,attrs:{shape:M}})}),p=f.map(w=>({vals:t.readSync(w.dataId),shape:w.shape})),x=ma(f.map(w=>w.shape),1),g=f[0].shape[0]===1,m=kF(p,x,r,g),_=ma(n.map(w=>w.shape),e),b=t.makeTensorInfo(_,r,m);return f.forEach(w=>t.disposeIntermediateTensorInfo(w)),b}const s=n.filter(f=>Ae(f.shape)>0),a=te().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(s.length===1){const f=a?new xi(n[0].shape,ss):new ls(n[0].shape,ss);return t.runWebGLProgram(f,n,r)}const o=te().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>o){const f=[];for(let x=0;x<s.length;x+=o){const g=s.slice(x,x+o);f.push(sc(g,e,t))}const p=sc(f,e,t);for(const x of f)t.disposeIntermediateTensorInfo(x);return p}if(a){const f=new XU(s.map(p=>p.shape),e);return t.runWebGLProgram(f,s,r)}const{tensors2D:c,outShape:l}=qU(s,e,t),u=new HU(c.map(f=>f.shape)),h=t.runWebGLProgram(u,c,r);c.forEach(f=>t.disposeIntermediateTensorInfo(f));const d=ke({inputs:{x:h},attrs:{shape:l},backend:t});return t.disposeIntermediateTensorInfo(h),d}function qU(n,e,t){const r=ma(n.map(s=>s.shape),e);return{tensors2D:n.map(s=>ke({inputs:{x:s},attrs:{shape:[-1,Ae(s.shape.slice(e))]},backend:t})),outShape:r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zv(n){const{inputs:e,backend:t,attrs:r}=n,{axis:i}=r,s=Rn(i,e[0].shape)[0],a=e.map(l=>l.shape);By(a,s);const o=ma(e.map(l=>l.shape),s);if(Ae(o)===0)return t.makeTensorInfo(o,e[0].dtype,[]);const c=e.filter(l=>Ae(l.shape)>0);return c.length===1?mr({inputs:{x:c[0]},backend:t}):sc(c,s,t)}const KU={kernelName:N1,backendName:"webgl",kernelFunc:Zv};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jv{constructor(e,t=!1,r=null,i=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,o=e.padInfo.left,c=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,h=e.dilationWidth,d=e.filterHeight,f=e.filterWidth,p=Math.floor(e.inChannels/4)*4,x=e.inChannels%4,g=e.dataFormat==="channelsLast",m=g?1:2,_=g?2:3,b=g?3:1;let w="",I="";r&&(i?w=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:s?w=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:w=`
          float activation(float x) {
            ${r}
          }
        `,I="result = activation(result);");const M=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${w}

      const ivec2 strides = ivec2(${c}, ${l});
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${b}];

        ivec2 xRCCorner =
            ivec2(coords[${m}], coords[${_}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${f}; wC++) {
            int xC = xCCorner + wC * ${h};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${p}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${x===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${p}) *
                    getW(wR, wC, ${p}, d2);
              } else {
                dotProd +=
                    getX(batch, ${p}, xR, xC) *
                    getW(wR, wC, ${p}, d2);
              }

            } else if (${x===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${p}, d2),
                getW(wR, wC, ${p} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${p}),
                  getX(batch, xR, xC, ${p} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${p}, xR, xC),
                  getX(batch, ${p} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${x===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${p}, d2),
                getW(wR, wC, ${p} + 1, d2),
                getW(wR, wC, ${p} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${p}),
                  getX(batch, xR, xC, ${p} + 1),
                  getX(batch, xR, xC, ${p} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${p}, xR, xC),
                  getX(batch, ${p} + 1, xR, xC),
                  getX(batch, ${p} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${M}
        ${I}
        setOutput(result);
      }
    `}}class YU{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,r=e.padInfo.top,i=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,o=e.strideWidth,c=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,h=e.filterDepth,d=e.filterHeight,f=e.filterWidth,p=Math.floor(e.inChannels/4)*4,x=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${s}, ${a}, ${o});
      const ivec3 pads = ivec3(${t}, ${r}, ${i});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${h}; wF++) {
          int xF = xFCorner + wF * ${c};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${f}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${p}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${x===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${p}) *
                  getW(wF, wR, wC, ${p}, d2);
              } else if (${x===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${p}),
                  getX(batch, xF, xR, xC, ${p} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${p}, d2),
                  getW(wF, wR, wC, ${p} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${x===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${p}),
                  getX(batch, xF, xR, xC, ${p} + 1),
                  getX(batch, xF, xR, xC, ${p} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${p}, d2),
                  getW(wF, wR, wC, ${p} + 1, d2),
                  getW(wF, wR, wC, ${p} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qv{constructor(e,t=!1,r=null,i=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Gn(this.outputShape.length);const a=e.padInfo.left,o=e.strideWidth,c=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,h=u;let d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<u;g++)d+=`
           vec4 xTexelC${g*2};
           int xTexelC${g*2}Ready;
           vec4 xTexelC${g*2+1};
           int xTexelC${g*2+1}Ready;
           vec4 xC${g};`;d+=`
     for (int r = 0; r < ${l}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let g=0;g<u;g++)d+=`
           xTexelC${g*2} = vec4(0.0);
           xTexelC${g*2}Ready = 0;
           xTexelC${g*2+1} = vec4(0.0);
           xTexelC${g*2+1}Ready = 0;
           xC${g} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let g=0;g<(h+1)/2;g++){const m=g*2;if(d+=`
           xC = xCCorner + ${m*c};
           `,o===1){if(m<u&&(a%2===1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${m}Ready == 0) {
                   xTexelC${m} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${m}.zw = vec2(0.0);
                   }
                   xTexelC${m}Ready = 1;
                 }
               `,c===1&&m>0?d+=`
                 xC${m} = vec4(xTexelC${m-2}.zw, xTexelC${m}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${m} = vec4(previous.zw, xTexelC${m}.xy);
                   } else {
                     xC${m} = vec4(0.0, 0.0, xTexelC${m}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${m}Ready == 0) {
                   xTexelC${m} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${m}.zw = vec2(0.0);
                   }
                   xTexelC${m}Ready = 1;
                 }

                 xC${m} = xTexelC${m};
                 `,m+1<u)){const _=a%2===0?Fd(c):c;c%2===0&&a%2===1||c%2!==0&&a%2!==1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${_};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${m+1}Ready == 0) {
                     xTexelC${m+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${m+1}.zw = vec2(0.0);
                     }
                     xTexelC${m+1}Ready = 1;
                   }
                   `,c>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${m+1} = vec4(previous.zw, xTexelC${m+1}.xy);
                     } else {
                      xC${m+1} = vec4(0.0, 0.0, xTexelC${m+1}.xy);
                     }
                     `:d+=`
                     xC${m+1} = vec4(xTexelC${m}.zw, xTexelC${m+1}.xy);
                     `):_===1?d+=`
                     xC${m+1} = xTexelC${m};
                     `:d+=`
                     xCOffset = xC + ${_};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${m+1}Ready == 0) {
                       xTexelC${m+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${m+1}.zw = vec2(0.0);
                       }
                       xTexelC${m+1}Ready = 1;
                     }

                     xC${m+1} = xTexelC${m+1};
                     `}}else m<u&&(a%2===1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${m}Ready == 0) {
                   xTexelC${m} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${m}.zw = vec2(0.0);
                   }
                   xTexelC${m}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${m+1}Ready == 0) {
                   xTexelC${m+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${m+1}.zw = vec2(0.0);
                   }
                   xTexelC${m+1}Ready = 1;
                 }

                 xC${m} = vec4(xTexelC${m}.zw, xTexelC${m+1}.zw);
               `,m+1<u&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${m+1} = vec4(xTexelC${m+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${m}Ready == 0) {
                   xTexelC${m} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${m}.zw = vec2(0.0);
                   }
                   xTexelC${m}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${m+1}Ready == 0) {
                   xTexelC${m+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${m+1}.zw = vec2(0.);
                   }
                   xTexelC${m+1}Ready = 1;
                 }

                 xC${m} = vec4(
                   xTexelC${m}.xy, xTexelC${m+1}.xy);
               `,m+1<u&&(d+=`
                   xC${m+1} = vec4(xTexelC${m}.zw, xTexelC${m+1}.zw);
                 `)));m<u&&(d+=`
             wTexel = getW(r, ${m}, d1, d2);
             dotProd += xC${m}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${m}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,m+1<u&&(d+=`
               wTexel = getW(r, ${m+1}, d1, d2);
               dotProd += xC${m+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${m+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   `,d+=`
     }
   `,d+=`
     }
   `;let f="",p="";r&&(i?f=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${r}
         }`:s?f=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${r}
         }`:f=`vec4 activation(vec4 x) {
           ${r}
         }`,p="result = activation(result);");const x=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${f}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${x}
         ${p}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZU{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Gn(this.outputShape.length);const{dataFormat:r}=t,i=Yn(),s=r==="channelsLast",a=s?1:2,o=s?2:3,c=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let l="";for(let u=0;u<=1;u++)for(let h=0;h<=1;h++)l+=`
          blockIndex = rc.z + ${h};
          pos = rc.y + ${u};

          ${c}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${o}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${s}) {
                  innerDims = vec2(d1, ch);
                  result[${u*2+h}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${u*2+h}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${i.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yl(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}function e3({x:n,filter:e,convInfo:t,backend:r,bias:i=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:o=null}){const c=n.shape,l=r.texData.get(n.dataId),u=t.inChannels,h=c[0]*c[1]*c[2],d=t.outChannels,f=t.dataFormat==="channelsLast",p=!1,x=!1;let g;const m=[];if(s!=null){const w=Yl(s.shape,f);w!=null&&(s=ke({inputs:{x:s},backend:r,attrs:{shape:w}}),m.push(s))}if(i!=null){const w=Yl(i.shape,f);w!=null&&(i=ke({inputs:{x:i},backend:r,attrs:{shape:w}}),m.push(i))}if(!((h===1||d===1)&&u>Xv)&&l.isPacked&&f&&l.texture!=null&&c[2]%2!==0&&fn(l.shape.slice(-3),c.slice(-3))){const w=c[0]*c[1]*(c[2]+1),I={dataId:n.dataId,shape:[1,w,t.inChannels],dtype:n.dtype},M=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,k(jl(l.shape,I.shape),()=>`packed reshape ${l.shape} to ${I.shape} isn't free`);const D=ke({inputs:{x:e},backend:r,attrs:{shape:[1,t.inChannels,t.outChannels]}});m.push(D);const F=Kl({a:I,b:D,backend:r,transposeA:p,transposeB:x,bias:i,activation:o,preluActivationWeights:s,leakyreluAlpha:a}),N=r.texData.get(F.dataId);k(N.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=M,N.shape=t.outShape,g=mr({inputs:{x:F},backend:r}),g.shape=t.outShape,m.push(F)}else{const w=t.outHeight*t.outWidth,I=ke({inputs:{x:n},backend:r,attrs:{shape:f?[t.batchSize,w,t.inChannels]:[t.batchSize,t.inChannels,w]}}),M=ke({inputs:{x:e},backend:r,attrs:{shape:[1,t.inChannels,t.outChannels]}}),D=Kl({a:f?I:M,b:f?M:I,transposeA:!f,transposeB:x,backend:r,bias:i,activation:o,preluActivationWeights:s,leakyreluAlpha:a});g=ke({inputs:{x:D},backend:r,attrs:{shape:t.outShape}}),m.push(I),m.push(M),m.push(D)}for(const w of m)r.disposeIntermediateTensorInfo(w);return g}function t3({x:n,filter:e,convInfo:t,backend:r,bias:i=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:o=null}){const{filterWidth:c,filterHeight:l,inChannels:u,outWidth:h,outHeight:d,dataFormat:f}=t,p=f==="channelsLast",x=c*l*u,g=d*h,m=[t.batchSize,x,g],_=!0,b=!1,w=[];if(s!=null){const oe=Yl(s.shape,p);oe!=null&&(s=ke({inputs:{x:s},backend:r,attrs:{shape:oe}}),w.push(s))}if(i!=null){const oe=Yl(i.shape,p);oe!=null&&(i=ke({inputs:{x:i},backend:r,attrs:{shape:oe}}),w.push(i))}const I=ke({inputs:{x:e},backend:r,attrs:{shape:[1,x,Ae(e.shape)/x]}});w.push(I);const M=new ZU(m,t),D=[n.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],F=r.runWebGLProgram(M,[n],"float32",D),N=ke({inputs:{x:F},backend:r,attrs:{shape:m}});w.push(F),w.push(N);const A=i!=null,B=s!=null,J=o==="leakyrelu",Y=o?_c(o,!0):null,ae=new Hv(p?N.shape:I.shape,p?I.shape:N.shape,p?[t.batchSize,g,t.outChannels]:[t.batchSize,t.outChannels,g],_,b,A,Y,B,J),le=p?[N,I]:[I,N];if(i&&le.push(i),B&&le.push(s),J){const oe=r.makeTensorInfo([],"float32",Co(a,"float32"));le.push(oe),w.push(oe)}const he=r.runWebGLProgram(ae,le,"float32"),de=ke({inputs:{x:he},backend:r,attrs:{shape:t.outShape}});w.push(he);for(const oe of w)r.disposeIntermediateTensorInfo(oe);return de}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JU(n){const{inputs:e,backend:t,attrs:r}=n,{x:i,filter:s}=e,{strides:a,pad:o,dataFormat:c,dilations:l,dimRoundingMode:u}=r,h=Ao(c),d=Ar(i.shape,s.shape,a,l,o,u,!1,h);let f;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))f=e3({x:i,filter:s,convInfo:d,backend:t});else if(d.strideWidth<=2&&h==="channelsLast"&&te().getBool("WEBGL_EXP_CONV")){const x=new Qv(d),g=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];f=t.runWebGLProgram(x,[i,s],"float32",g)}else if(te().getBool("WEBGL_CONV_IM2COL"))f=t3({x:i,filter:s,convInfo:d,backend:t});else{const x=new Jv(d);f=t.runWebGLProgram(x,[i,s],"float32")}const p=ke({inputs:{x:f},backend:t,attrs:{shape:d.outShape}});return t.disposeIntermediateTensorInfo(f),p}const QU={kernelName:M1,backendName:"webgl",kernelFunc:JU};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class e8{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,r=e.strideWidth,i=e.padInfo.top,s=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${i};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${a?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class t8{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,r=e.filterWidth,i=e.strideHeight,s=e.strideWidth,a=e.dataFormat==="channelsLast",o=t-1-e.padInfo.top,c=r-1-e.padInfo.left,l=a?1:2,u=a?2:3,h=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${h}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${i}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class n8{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,r=e.strideHeight,i=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,o=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${s};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${r} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${i} - ${o};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class r8{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,r=e.filterHeight,i=e.filterWidth,s=e.strideDepth,a=e.strideHeight,o=e.strideWidth,c=t-1-e.padInfo.front,l=r-1-e.padInfo.top,u=i-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${c}, ${l}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${s}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${r}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${r} - 1 - wR;

            for (int wC = 0; wC < ${i}; wC++) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${i} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i8(n){const{inputs:e,backend:t,attrs:r}=n,{x:i,dy:s}=e,{strides:a,pad:o,dataFormat:c,dimRoundingMode:l,filterShape:u}=r,h=Ao(c),d=Ar(i.shape,u,a,1,o,l,!1,h),f=new e8(d);return t.runWebGLProgram(f,[i,s],"float32")}const s8={kernelName:I1,backendName:"webgl",kernelFunc:i8};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class a8{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=Gn(this.outputShape.length);const t=e.filterHeight,r=e.filterWidth,i=t-1-e.padInfo.top,s=r-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${s});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            int wCPerm = ${r} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o8(n){const{inputs:e,backend:t,attrs:r}=n,{dy:i,filter:s}=e,{inputShape:a,strides:o,pad:c,dataFormat:l,dimRoundingMode:u}=r,h=Ao(l),d=Ar(a,s.shape,o,1,c,u,!1,h);if(te().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&h==="channelsLast"){const f=[[d.strideHeight,d.strideWidth]],p=new a8(d);return t.runWebGLProgram(p,[i,s],"float32",f)}else{const f=new t8(d);return t.runWebGLProgram(f,[i,s],"float32")}}const c8={kernelName:D1,backendName:"webgl",kernelFunc:o8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l8(n){const{inputs:e,backend:t,attrs:r}=n,{x:i,filter:s}=e,{strides:a,pad:o,dilations:c}=r,l=Mc(i.shape,s.shape,a,c,o),u=new YU(l);return t.runWebGLProgram(u,[i,s],"float32")}const u8={kernelName:P1,backendName:"webgl",kernelFunc:l8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h8(n){const{inputs:e,backend:t,attrs:r}=n,{x:i,dy:s}=e,{strides:a,pad:o,filterShape:c}=r,l=Mc(i.shape,c,a,1,o),u=new n8(l);return t.runWebGLProgram(u,[i,s],"float32")}const d8={kernelName:TT,backendName:"webgl",kernelFunc:h8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f8(n){const{inputs:e,backend:t,attrs:r}=n,{dy:i,filter:s}=e,{pad:a,strides:o,inputShape:c}=r,l=Mc(c,s.shape,o,1,a),u=new r8(l);return t.runWebGLProgram(u,[i,s],"float32")}const p8={kernelName:O1,backendName:"webgl",kernelFunc:f8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m8=Lo+`
  return cos(x);
`,g8=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${Ca}
  return result;
`,x8=zt({opSnippet:m8,packedOpSnippet:g8}),y8={kernelName:$1,backendName:"webgl",kernelFunc:x8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v8=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,_8=zt({opSnippet:v8}),b8={kernelName:L1,backendName:"webgl",kernelFunc:_8};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class S8{constructor(e,t,r,i,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,o,c,l]=e,[u]=t,[h,d]=r;this.outputShape=[u,h,d,l];const f=i==="bilinear"?1:0,[p,x]=[`${o-1}.0`,`${c-1}.0`],[g,m,_]=h>1?[`${(o-1)/(h-1)}`,"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[b,w,I]=d>1?[`${(c-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${x} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${x}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${b});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${m};
        float width_scale = ${w};

        float in_y = ${_};
        if( in_y < 0.0 || in_y > ${p} ) {
          setOutput(float(${s}));
          return;
        }
        float in_x = ${I};
        if( in_x < 0.0 || in_x > ${x} ) {
          setOutput(float(${s}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${f} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w8=n=>{const{inputs:e,backend:t,attrs:r}=n,{image:i,boxes:s,boxInd:a}=e,{cropSize:o,method:c,extrapolationValue:l}=r,u=new S8(i.shape,s.shape,o,c,l);return t.runWebGLProgram(u,[i,s,a],"float32")},E8={kernelName:U1,backendName:"webgl",kernelFunc:w8};var Sc;(function(n){n.Prod="*",n.Sum="+"})(Sc||(Sc={}));class jm{constructor(e,t,r,i){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const s=this.outputShape.length,a=this.op===Sc.Prod?"1.0":"0.0",o=r?a:`getX(${qm(s,"coords",this.op)})`,c=this.outputShape[this.outputShape.length-1];let l="",u="";r?(l=i?`end != ${c-1}`:"end != 0",u=i?"end + 1":"end - 1"):(l=i?`end + pow2 < ${c}`:"end >= pow2",u=i?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Jt(s)} coords = getOutputCoords();
        int end = ${Km(s,"coords",this.op)};
        float val = ${o};
        int pow2 = int(pow(2.0, index));
        if (${l}) {
          int idx = ${u};
          ${Km(s,"coords",this.op)} = idx;
          val ${this.op}= getX(${qm(s,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function qm(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function Km(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n3(n,e,t,r,i,s){const a=e.shape.length,o=Xr([r],a);let c=e;o!=null&&(c=Kn({inputs:{x:e},backend:t,attrs:{perm:o}}));const l=jr(1,a)[0];if(l!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${r}`);const u=c.shape[l];let h=mr({inputs:{x:c},backend:t});for(let d=0;d<=Math.ceil(Math.log2(u))-1;d++){const f=new jm(n,c.shape,!1,s),p=[[d]],x=h;h=t.runWebGLProgram(f,[h],h.dtype,p),t.disposeIntermediateTensorInfo(x)}if(i){const d=new jm(n,c.shape,i,s),f=h;h=t.runWebGLProgram(d,[h],h.dtype),t.disposeIntermediateTensorInfo(f)}if(o!=null){const d=Jd(o),f=Kn({inputs:{x:h},backend:t,attrs:{perm:d}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(c),f}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T8(n){const{inputs:e,backend:t,attrs:r}=n,{x:i}=e,{axis:s,exclusive:a,reverse:o}=r;return n3(Sc.Prod,i,t,s,a,o)}const C8={kernelName:k1,backendName:"webgl",kernelFunc:T8};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A8(n){const{inputs:e,backend:t,attrs:r}=n,{x:i}=e,{axis:s,exclusive:a,reverse:o}=r;return n3(Sc.Sum,i,t,s,a,o)}const R8={kernelName:F1,backendName:"webgl",kernelFunc:A8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N8(n){const{inputs:e,backend:t,attrs:r}=n,{x:i,weights:s}=e,{size:a,binaryOutput:o}=r;if(i.shape.length===1){const c=t.readSync(i.dataId),l=t.readSync(s.dataId),u=Lv(c,l,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,u)}else if(i.shape.length===2){const c=t.bufferSync(i),l=t.bufferSync(s),u=PF(c,l,a,o);return t.makeTensorInfo(u.shape,s.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${i.shape.length}.`)}const M8={kernelName:B1,backendName:"webgl",kernelFunc:N8};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class I8{constructor(e,t,r){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=r,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D8(n){const{inputs:e,backend:t,attrs:r}=n,{x:i}=e,{blockSize:s,dataFormat:a}=r,o=i.shape[0],c=a==="NHWC"?i.shape[1]:i.shape[2],l=a==="NHWC"?i.shape[2]:i.shape[3],u=a==="NHWC"?i.shape[3]:i.shape[1],h=c*s,d=l*s,f=u/(s*s),p=a==="NHWC"?[o,h,d,f]:[o,f,h,d],x=new I8(p,s,a);return t.runWebGLProgram(x,[i],i.dtype)}const P8={kernelName:V1,backendName:"webgl",kernelFunc:D8};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class r3{constructor(e,t=!1,r=null,i=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Gn(this.outputShape.length);const a=e.filterHeight,o=e.filterWidth,c=e.outChannels/e.inChannels;let l="",u="";r&&(i?l=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:s?l=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:l=`
          float activation(float x) {
            ${r}
          }
        `,u="result = activation(result);");const h=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${c};
        int q = d2 - d1 * ${c};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${o}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${h}
        ${u}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class i3{constructor(e,t=!1,r=null,i=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Gn(this.outputShape.length);const a=e.outChannels/e.inChannels,o=e.padInfo.left,c=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,h=e.filterWidth,d=h;let f=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let m=0;m<h;m++)f+=`
          vec4 xTexelC${m*2};
          int xTexelC${m*2}Ready;
          vec4 xTexelC${m*2+1};
          int xTexelC${m*2+1}Ready;
          vec4 xC${m};`;f+=`
    for (int r = 0; r < ${u}; r++) {
      `;for(let m=0;m<h;m++)f+=`
          xTexelC${m*2} = vec4(0.0);
          xTexelC${m*2}Ready = 0;
          xTexelC${m*2+1} = vec4(0.0);
          xTexelC${m*2+1}Ready = 0;
          xC${m} = vec4(0.0);`;f+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let m=0;m<(d+1)/2;m++){const _=m*2;if(f+=`
          xC = xCCorner + ${_*l};
          `,c===1){if(_<h&&(o%2===1?(f+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${_}Ready == 0) {
                  xTexelC${_} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${_}.zw = vec2(0.0);
                  }
                  xTexelC${_}Ready = 1;
                }
              `,l===1&&_>0?f+=`
                xC${_} = vec4(xTexelC${_-2}.zw, xTexelC${_}.xy);
                `:f+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${_} = vec4(previous.zw, xTexelC${_}.xy);
                  } else {
                    xC${_} = vec4(0.0, 0.0, xTexelC${_}.xy);
                  }
                  `):f+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${_}Ready == 0) {
                  xTexelC${_} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${_}.zw = vec2(0.0);
                  }
                  xTexelC${_}Ready = 1;
                }

                xC${_} = xTexelC${_};
                `,_+1<h)){const b=o%2===0?Fd(l):l;l%2===0&&o%2===1||l%2!==0&&o%2!==1?(f+=`
                  xCOffset = xC + imod(pads[1], 2) + ${b};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${_+1}Ready == 0) {
                    xTexelC${_+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${_+1}.zw = vec2(0.0);
                    }
                    xTexelC${_+1}Ready = 1;
                  }
                  `,l>1?f+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${_+1} = vec4(previous.zw, xTexelC${_+1}.xy);
                    } else {
                     xC${_+1} = vec4(0.0, 0.0, xTexelC${_+1}.xy);
                    }
                    `:f+=`
                    xC${_+1} = vec4(xTexelC${_}.zw, xTexelC${_+1}.xy);
                    `):b===1?f+=`
                    xC${_+1} = xTexelC${_};
                    `:f+=`
                    xCOffset = xC + ${b};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${_+1}Ready == 0) {
                      xTexelC${_+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${_+1}.zw = vec2(0.0);
                      }
                      xTexelC${_+1}Ready = 1;
                    }

                    xC${_+1} = xTexelC${_+1};
                    `}}else _<h&&(o%2===1?(f+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${_}Ready == 0) {
                  xTexelC${_} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${_}.zw = vec2(0.0);
                  }
                  xTexelC${_}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${_+1}Ready == 0) {
                  xTexelC${_+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${_+1}.zw = vec2(0.0);
                  }
                  xTexelC${_+1}Ready = 1;
                }

                xC${_} = vec4(xTexelC${_}.zw, xTexelC${_+1}.zw);
              `,_+1<h&&(f+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${_+1} = vec4(xTexelC${_+1}.xy, final.xy);
                `)):(f+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${_}Ready == 0) {
                  xTexelC${_} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${_}.zw = vec2(0.0);
                  }
                  xTexelC${_}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${_+1}Ready == 0) {
                  xTexelC${_+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${_+1}.zw = vec2(0.);
                  }
                  xTexelC${_+1}Ready = 1;
                }

                xC${_} = vec4(
                  xTexelC${_}.xy, xTexelC${_+1}.xy);
              `,_+1<h&&(f+=`
                  xC${_+1} = vec4(xTexelC${_}.zw, xTexelC${_+1}.zw);
                `)));_<h&&(f+=`
            wTexel = getW(r, ${_}, d1, q);
            dotProd += xC${_} * vec4(wTexel.xz, wTexel.xz);
          `,_+1<h&&(f+=`
              wTexel = getW(r, ${_+1}, d1, q);
              dotProd += xC${_+1} * vec4(wTexel.xz, wTexel.xz);
            `))}f+=`
    }
  `,f+=`
      }
    `;let p="",x="";r&&(i?p=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:s?p=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:p=`vec4 activation(vec4 x) {
          ${r}
        }`,x="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${p}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${f}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${x}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O8(n){const{inputs:e,backend:t,attrs:r}=n,{x:i,filter:s}=e,{strides:a,pad:o,dilations:c,dimRoundingMode:l}=r;let u=c;u==null&&(u=[1,1]),k(xr(a,u),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);const h=Ar(i.shape,s.shape,a,u,o,l,!0);let d;te().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?d=new i3(h):d=new r3(h);const f=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return t.runWebGLProgram(d,[i,s],"float32",f)}const $8={kernelName:z1,backendName:"webgl",kernelFunc:O8};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class L8{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,r=e.strideWidth,i=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${i};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class k8{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,r=e.filterWidth,i=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,o=r-1-e.padInfo.left,c=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${i}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${c}; dm++) {
              int d2 = d1 * ${c} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F8(n){const{inputs:e,backend:t,attrs:r}=n,{x:i,dy:s}=e,{strides:a,dilations:o,pad:c,dimRoundingMode:l,filterShape:u}=r,h=Ar(i.shape,u,a,o,c,l,!0),d=new L8(h);return t.runWebGLProgram(d,[i,s],"float32")}const U8={kernelName:G1,backendName:"webgl",kernelFunc:F8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B8(n){const{inputs:e,backend:t,attrs:r}=n,{dy:i,filter:s}=e,{strides:a,dilations:o,pad:c,dimRoundingMode:l,inputShape:u}=r,h=Ar(u,s.shape,a,o,c,l,!0),d=new k8(h);return t.runWebGLProgram(d,[i,s],"float32")}const V8={kernelName:W1,backendName:"webgl",kernelFunc:B8};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class z8{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G8(n){const{inputs:e,backend:t}=n,{x:r}=e,i=[...r.shape,...r.shape],s=Ae(r.shape),a=ke({inputs:{x:r},backend:t,attrs:{shape:[s]}}),o=new z8(s),c=t.runWebGLProgram(o,[a],a.dtype),l=ke({inputs:{x:c},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(c),l}const W8={kernelName:H1,backendName:"webgl",kernelFunc:G8};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class H8{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:r,padInfo:i,strideHeight:s,strideWidth:a,filterHeight:o,filterWidth:c,dilationHeight:l,dilationWidth:u}=e,{top:h,left:d}=i;this.userCode=`
      const ivec2 strides = ivec2(${s}, ${a});
      const ivec2 pads = ivec2(${h}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${o}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${c}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${r}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X8(n){const{inputs:e,backend:t,attrs:r}=n,{x:i,filter:s}=e,{strides:a,pad:o,dilations:c}=r,l=Nx(i.shape,s.shape,a,o,"NHWC",c);let u;const h=new H8(l);u=t.runWebGLProgram(h,[i,s],"float32");const d=ke({inputs:{x:u},backend:t,attrs:{shape:l.outShape}});return t.disposeIntermediateTensorInfo(u),d}const j8={kernelName:X1,backendName:"webgl",kernelFunc:X8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q8(n){const{inputs:e,backend:t,attrs:r}=n,{equation:i}=r,s=e,{allDims:a,summedDims:o,idDims:c}=nv(i,s.length);iv(a.length,c,s);const{path:l,steps:u}=sv(o,c),h=u.length;let d=null,f=a.length;const p=[];for(let x=0;x<h;++x){for(const g of u[x]){const{permutationIndices:m,expandDims:_}=rv(f,c[g]);let b;av(m)?b=s[g]:(b=Kn({inputs:{x:s[g]},backend:t,attrs:{perm:m}}),p.push(b));const w=b.shape.slice();for(let I=0;I<_.length;++I)w.splice(_[I],0,1);fn(b.shape,w)||(b=ke({inputs:{x:b},backend:t,attrs:{shape:w}}),p.push(b)),d===null?d=b:(d=Mf({inputs:{a:b,b:d},backend:t}),p.push(d))}x<h-1&&(l[x]>=0&&(d=Au({inputs:{x:d},backend:t,attrs:{axis:l[x]-(a.length-f),keepDims:!1}}),p.push(d)),f--)}for(const x of p)x!==d&&t.disposeIntermediateTensorInfo(x);return d}const K8={kernelName:q1,backendName:"webgl",kernelFunc:q8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y8="return (x >= 0.0) ? x : (exp(x) - 1.0);",Z8=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,J8=zt({opSnippet:Y8,packedOpSnippet:Z8}),Q8={kernelName:K1,backendName:"webgl",kernelFunc:J8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e7="return (b >= 0.0) ? a : a * (b + 1.0);",t7=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,n7=n=>{const{inputs:e,backend:t}=n,{dy:r,y:i}=e,s=te().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $o(t7,r.shape,i.shape):new ga(e7,r.shape,i.shape);return t.runWebGLProgram(s,[r,i],r.dtype)},r7={kernelName:CT,backendName:"webgl",kernelFunc:n7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i7=`
  return vec4(equal(a, b));
`,s7="return float(a == b);",a7=$n({opSnippet:s7,packedOpSnippet:i7,dtype:"bool",cpuKernelImpl:FF}),o7={kernelName:Z1,backendName:"webgl",kernelFunc:a7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c7=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${Yy};
  float a1 = ${Zy};
  float a2 = ${Jy};
  float a3 = ${Qy};
  float a4 = ${ev};
  float a5 = ${tv};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,l7=zt({opSnippet:c7}),u7={kernelName:Y1,backendName:"webgl",kernelFunc:l7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h7=Lo+`
  return exp(x);
`,d7=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,s3=zt({opSnippet:h7,packedOpSnippet:d7,cpuKernelImpl:UF,dtype:"float32"}),f7={kernelName:J1,backendName:"webgl",kernelFunc:s3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yd(n){const{inputs:e,attrs:t,backend:r}=n,{dim:i}=t,{input:s}=e,a=s.shape.length,o=s.shape.slice();let c=i;return i<0&&(k(-(a+1)<=i,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),c=a+i+1),o.splice(c,0,1),ke({inputs:{x:s},backend:r,attrs:{shape:o}})}const p7={kernelName:Q1,backendName:"webgl",kernelFunc:yd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ym="return exp(x) - 1.0;",m7=zt({opSnippet:Ym,packedOpSnippet:Ym,cpuKernelImpl:BF}),g7={kernelName:e0,backendName:"webgl",kernelFunc:m7};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zm{constructor(e,t,r){this.variableNames=["real","imag"];const i=t[1];this.outputShape=t;const s=r?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=r?`${i}.0`:"1.0";let o;if(e==="real")o="return real * expR - imag * expI;";else if(e==="imag")o="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${s};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${o}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${i});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${i}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a3(n,e,t){const r=t.texData.get(n.dataId),i=Ae(n.shape),s=n.shape[n.shape.length-1],a=i/s,o=ke({inputs:{x:n},backend:t,attrs:{shape:[a,s]}}),c=o.shape,l=new Zm("real",c,e),u=new Zm("imag",c,e),h=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:c},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:c}],d=t.runWebGLProgram(l,h,"float32"),f=t.runWebGLProgram(u,h,"float32"),p=Rs({inputs:{real:d,imag:f},backend:t});t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f);const x=ke({inputs:{x:p},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(p),x}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x7(n){const{inputs:e,backend:t}=n,{input:r}=e;return a3(r,!1,t)}const y7={kernelName:t0,backendName:"webgl",kernelFunc:x7};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class v7{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kc(n){const{backend:e,attrs:t}=n,{shape:r,value:i}=t;let{dtype:s}=t;if(s=s||Ac(i),s==="string"){const a=En(s,Ae(r));return a.fill(i),e.makeTensorInfo(r,s,a)}else{const a=new v7(r,i),o=[[i]];return e.runWebGLProgram(a,[],s,o)}}const _7={kernelName:n0,backendName:"webgl",kernelFunc:kc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class b7{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S7={kernelName:r0,backendName:"webgl",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,r=e,i=new b7(t.shape);return r.runWebGLProgram(i,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jm="return floor(x);",w7=zt({opSnippet:Jm,packedOpSnippet:Jm,cpuKernelImpl:VF}),E7={kernelName:i0,backendName:"webgl",kernelFunc:w7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T7=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,C7=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,A7=$n({opSnippet:T7,packedOpSnippet:C7,dtype:"int32"}),R7={kernelName:s0,backendName:"webgl",kernelFunc:A7};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class N7{constructor(e){this.variableNames=["A"];const t=Yn(),[r,i]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${i}.0, ${r}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class M7{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=Yn(),[r,i]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${i}.0, ${r}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I7={kernelName:Hh,backendName:"webgl",kernelFunc:D7};let qa,bh=te().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function D7(n){const{inputs:e,backend:t,attrs:r}=n;let{pixels:i}=e;const{numChannels:s}=r,a=typeof HTMLVideoElement<"u"&&i instanceof HTMLVideoElement,o=typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement,[c,l]=a?[i.videoWidth,i.videoHeight]:[i.width,i.height],u=[l,c],h=[l,c,s];if(o||a){const x=te().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(qa==null||x!==bh)&&(bh=x,qa=document.createElement("canvas").getContext("2d",{willReadFrequently:bh})),qa.canvas.width=c,qa.canvas.height=l,qa.drawImage(i,0,0,c,l),i=qa.canvas}const d=t.makeTensorInfo(u,"int32");t.texData.get(d.dataId).usage=Sr.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(d.dataId),i);const f=te().getBool("WEBGL_PACK")?new M7(h):new N7(h),p=t.runWebGLProgram(f,[d],"int32");return t.disposeData(d.dataId),p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P7(n){const{inputs:e,backend:t,attrs:r}=n,{x:i,filter:s,bias:a,preluActivationWeights:o}=e,{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:p}=r,x=Ao(u),g=Ar(i.shape,s.shape,c,h,l,d,!1,x);let m;const _=[],b=a!=null,w=o!=null,I=f==="leakyrelu",M=()=>{const F=[i,s],N=(A,B)=>{if(B==="NCHW"&&A.shape.length===1&&A.shape[0]!==1){const J=ke({inputs:{x:A},backend:t,attrs:{shape:[A.shape[0],1,1]}});return _.push(J),J}return A};if(b&&F.push(N(a,u)),w&&F.push(N(o,u)),I){const A=t.makeTensorInfo([],"float32",Co(p,"float32"));F.push(A),_.push(A)}return F};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))m=e3({x:i,filter:s,convInfo:g,backend:t,bias:a,activation:f,preluActivationWeights:o,leakyreluAlpha:p});else if(g.strideWidth<=2&&x==="channelsLast"&&te().getBool("WEBGL_EXP_CONV")){const F=f?_c(f,!0):null,N=new Qv(g,b,F,w,I),A=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],B=M();m=t.runWebGLProgram(N,B,"float32",A)}else if(te().getBool("WEBGL_CONV_IM2COL"))m=t3({x:i,filter:s,convInfo:g,backend:t,bias:a,activation:f,preluActivationWeights:o,leakyreluAlpha:p});else{const F=f?_c(f,!1):null,N=new Jv(g,b,F,w,I),A=M();m=t.runWebGLProgram(N,A,"float32")}const D=ke({inputs:{x:m},backend:t,attrs:{shape:g.outShape}});return _.push(m),_.forEach(F=>t.disposeIntermediateTensorInfo(F)),D}const O7={kernelName:jh,backendName:"webgl",kernelFunc:P7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $7(n){const{inputs:e,backend:t,attrs:r}=n,{x:i,filter:s,bias:a,preluActivationWeights:o}=e,{strides:c,pad:l,dilations:u,dimRoundingMode:h,activation:d,leakyreluAlpha:f}=r,p=[];let x=u;x==null&&(x=[1,1]),k(xr(c,x),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${c} and dilations '${x}'`);const g=Ar(i.shape,s.shape,c,x,l,h,!0),m=te().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,_=d?_c(d,m):null,b=[i,s],w=a!=null,I=o!=null,M=d==="leakyrelu";if(w&&b.push(a),I&&b.push(o),M){const A=t.makeTensorInfo([],"float32",Co(f,"float32"));b.push(A),p.push(A)}let D;m?D=new i3(g,w,_,I,M):D=new r3(g,w,_,I,M);const F=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],N=t.runWebGLProgram(D,b,"float32",F);return p.forEach(A=>t.disposeIntermediateTensorInfo(A)),N}const L7={kernelName:qh,backendName:"webgl",kernelFunc:$7};class k7{constructor(e,t,r,i){this.sliceDim=e,this.strides=t,this.paramsShape=i,this.variableNames=["x","indices"],this.outputShape=r;const s=Jt(r.length);let a=`
    int index;`;for(let o=0;o<this.sliceDim;o++)a+=`
          index = round(getIndices(coords[0], ${o}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[o]};
          flattenIndex += index * ${this.strides[o]};`;this.userCode=`
         void main() {
          ${s} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${a}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F7(n){const{inputs:e,backend:t}=n,{params:r,indices:i}=e,s=i.shape,a=s[s.length-1],o=Ae(r.shape),[c,l,u,h]=Ay(r,i),d=ke({inputs:{x:i},backend:t,attrs:{shape:[l,a]}}),f=ke({inputs:{x:r},backend:t,attrs:{shape:[Ae(r.shape)/u,u]}});if(t.shouldExecuteOnCPU([r,i])||r.dtype==="string"){const m=t.readSync(i.dataId),_=t.bufferSync(r),b=zF(m,_,r.dtype,l,a,u,h,r.shape,o);return t.makeTensorInfo(c,r.dtype,b.values)}const p=new k7(a,h,[l,u],r.shape),x=t.runWebGLProgram(p,[f,d],f.dtype),g=ke({inputs:{x},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(x),g}const U7={kernelName:c0,backendName:"webgl",kernelFunc:F7};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class B7{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const r=Jt(this.rank),i=V7(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${i}));
      }
    `}}function V7(n,e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let i=0;i<n.length;i++)i===2?r.push("index"):r.push(`${t[i]}`);return r.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o3(n){const{inputs:e,backend:t,attrs:r}=n,{x:i,indices:s}=e,{axis:a,batchDims:o}=r,c=Rn(a,i.shape)[0];if(te().get("DEBUG")){const _=t.readSync(s.dataId),b=i.shape[c];for(let w=0;w<_.length;++w){const I=_[w];k(I<=b-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${b-1}]`)}}const l=bv(i,s,c,o),u=Ae(s.shape),h=[],d=ke({inputs:{x:i},backend:t,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),f=ke({inputs:{x:s},backend:t,attrs:{shape:[l.batchSize,u/l.batchSize]}});h.push(d),h.push(f);const p=[l.batchSize,l.outerSize,u/l.batchSize,l.sliceSize];if(t.shouldExecuteOnCPU([i,s])||i.dtype==="string"){const _=t.bufferSync(f),b=t.bufferSync(d),w=GF(b,_,p);return h.forEach(I=>t.disposeIntermediateTensorInfo(I)),t.makeTensorInfo(l.outputShape,w.dtype,w.values)}const x=new B7(d.shape,p),g=t.runWebGLProgram(x,[d,f],d.dtype);h.push(g);const m=ke({inputs:{x:g},backend:t,attrs:{shape:l.outputShape}});return h.forEach(_=>t.disposeIntermediateTensorInfo(_)),m}const z7={kernelName:o0,backendName:"webgl",kernelFunc:o3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G7="return float(a > b);",W7=`
  return vec4(greaterThan(a, b));
`,H7=$n({opSnippet:G7,packedOpSnippet:W7,cpuKernelImpl:WF,dtype:"bool"}),X7={kernelName:l0,backendName:"webgl",kernelFunc:H7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j7="return float(a >= b);",q7=`
  return vec4(greaterThanEqual(a, b));
`,K7=$n({opSnippet:j7,packedOpSnippet:q7,dtype:"bool",cpuKernelImpl:HF}),Y7={kernelName:u0,backendName:"webgl",kernelFunc:K7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z7(n){const{inputs:e,backend:t}=n,{input:r}=e;return a3(r,!0,t)}const J7={kernelName:h0,backendName:"webgl",kernelFunc:Z7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q7="return float(!isnan(x) && !isinf(x));",e9=zt({opSnippet:Q7,dtype:"bool"}),t9={kernelName:f0,backendName:"webgl",kernelFunc:e9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n9="return float(isinf(x));",r9=zt({opSnippet:n9,dtype:"bool"}),i9={kernelName:p0,backendName:"webgl",kernelFunc:r9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s9="return float(isnan(x));",a9=zt({opSnippet:s9,dtype:"bool"}),o9={kernelName:m0,backendName:"webgl",kernelFunc:a9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c9="return float(a < b);",l9=`
  return vec4(lessThan(a, b));
`,u9=$n({opSnippet:c9,packedOpSnippet:l9,cpuKernelImpl:XF,dtype:"bool"}),h9={kernelName:x0,backendName:"webgl",kernelFunc:u9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d9="return float(a <= b);",f9=`
  return vec4(lessThanEqual(a, b));
`,p9=$n({opSnippet:d9,packedOpSnippet:f9,cpuKernelImpl:jF,dtype:"bool"}),m9={kernelName:y0,backendName:"webgl",kernelFunc:p9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g9(n){const{backend:e,attrs:t}=n,{start:r,stop:i,num:s}=t,a=qF(r,i,s);return e.makeTensorInfo([a.length],"float32",a)}const x9={kernelName:v0,backendName:"webgl",kernelFunc:g9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y9=Lo+`
  return x < 0.0 ? 0./0. : log(x);
`,v9=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,_9=zt({opSnippet:y9,packedOpSnippet:v9,cpuKernelImpl:KF}),b9={kernelName:_0,backendName:"webgl",kernelFunc:_9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S9=Lo+`
  return log(1.0 + x);
`,w9=zt({opSnippet:S9}),E9={kernelName:b0,backendName:"webgl",kernelFunc:w9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T9="return float(a >= 1.0 && b >= 1.0);",C9=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,A9=$n({opSnippet:T9,packedOpSnippet:C9,dtype:"bool"}),R9={kernelName:S0,backendName:"webgl",kernelFunc:A9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N9="return float(!(x >= 1.0));",M9=zt({opSnippet:N9}),I9={kernelName:w0,backendName:"webgl",kernelFunc:M9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D9="return float(a >= 1.0 || b >= 1.0);",P9=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,O9=$n({opSnippet:D9,packedOpSnippet:P9,dtype:"bool"}),$9={kernelName:E0,backendName:"webgl",kernelFunc:O9};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class L9{constructor(e,t,r,i,s){this.variableNames=["x"],this.outputShape=[];const a=t,o=e[3]-1;this.outputShape=e;let c;const l=`float(${r}) + float(${i}) * sum`;s===.5?c=`inversesqrt(${l})`:s===1?c=`1.0/(${l})`:c=`exp(log(${l}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${o}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${c};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class k9{constructor(e,t,r,i,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,o=e[3]-1;this.outputShape=e;let c;const l=`float(${r}) + float(${i}) * sum`;s===.5?c=`inversesqrt(${l})`:s===1?c=`1.0/(${l})`:c=`exp(log(${l}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${c};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F9=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:i}=e,{depthRadius:s,bias:a,alpha:o,beta:c}=r,l=te().getBool("WEBGL_PACK_NORMALIZATION")?new k9(i.shape,s,a,o,c):new L9(i.shape,s,a,o,c);return t.runWebGLProgram(l,[i],i.dtype)},U9={kernelName:T0,backendName:"webgl",kernelFunc:F9};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class B9{constructor(e,t,r,i,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=r,this.alpha=i,this.beta=s,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${i}) * norm + float(${r});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${i})
                * float(${s})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${s});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V9=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:i,y:s,dy:a}=e,{depthRadius:o,bias:c,alpha:l,beta:u}=r,h=new B9(i.shape,o,c,l,u);return t.runWebGLProgram(h,[i,s,a],i.dtype)},z9={kernelName:AT,backendName:"webgl",kernelFunc:V9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G9(n,e,t,r){const i=Ae(e),a=Ae(n.shape)/i,o=ke({inputs:{x:n},attrs:{shape:[a,i]},backend:r}),c=Aa(o,n.dtype,"max",r),l=ke({inputs:{x:c},attrs:{shape:t},backend:r});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(c),l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c3(n){const{inputs:e,backend:t,attrs:r}=n,{x:i}=e,{reductionIndices:s,keepDims:a}=r,o=i.shape.length,c=Rn(s,i.shape);let l=c;const u=Xr(l,o),h=u!=null,d=t.shouldExecuteOnCPU([i]);let f=i;if(h){if(d){const b=t.texData.get(f.dataId).values,w=new Array(o);for(let D=0;D<w.length;D++)w[D]=i.shape[u[D]];const I=Rf(b,i.shape,i.dtype,u,w);f=t.makeTensorInfo(w,i.dtype);const M=t.texData.get(f.dataId);M.values=I}else f=Cu(i,u,t);l=jr(l.length,o)}li("max",l,o);const[p,x]=wi(f.shape,l);let g=p;a&&(g=Rr(p,c));let m;if(d){const b=t.texData.get(f.dataId).values,w=YF(b,Ae(x),g,i.dtype);m=t.makeTensorInfo(g,i.dtype);const I=t.texData.get(m.dataId);I.values=w}else m=G9(f,x,g,t);return h&&t.disposeIntermediateTensorInfo(f),m}const W9={kernelName:C0,backendName:"webgl",kernelFunc:c3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H9=Nf+`
  return max(a, b);
`,X9=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Ca+`
  return result;
`,j9=$n({opSnippet:H9,packedOpSnippet:X9,cpuKernelImpl:ZF}),q9={kernelName:A0,backendName:"webgl",kernelFunc:j9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K9(n){const{inputs:e,backend:t,attrs:r}=n,{x:i}=e;Oc(i,"maxPool");const{filterSize:s,strides:a,pad:o,dimRoundingMode:c}=r,l=1;k(xr(a,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);const u=_a(i.shape,s,a,l,o,c);if(u.filterWidth===1&&u.filterHeight===1&&fn(u.inShape,u.outShape))return mr({inputs:{x:i},backend:t});const h=new bc(u,"max",!1);return t.runWebGLProgram(h,[i],i.dtype)}const Y9={kernelName:R0,backendName:"webgl",kernelFunc:K9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z9(n){const{inputs:e,backend:t,attrs:r}=n,{x:i}=e,{filterSize:s,strides:a,pad:o,dataFormat:c,dimRoundingMode:l}=r,u=[1,1,1],h=Nc(i.shape,s,a,u,o,l,c),d=new If(h,"max",!1);return t.runWebGLProgram(d,[i],i.dtype)}const J9={kernelName:N0,backendName:"webgl",kernelFunc:Z9};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Q9{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,r=e.strideWidth,i=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,o=s-1-e.padInfo.top,c=a-1-e.padInfo.left,l=s*a-1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${s};
          wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class eB{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,r=e.strideHeight,i=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,o=e.dilationWidth,c=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,h=c-1-e.padInfo.front,d=l-1-e.padInfo.top,f=u-1-e.padInfo.left,p=c*l*u-1;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${d}, ${f});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${c};
           wD += ${s}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${r}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${o}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${p} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tB(n){const{inputs:e,backend:t,attrs:r}=n,{dy:i,input:s}=e,a=s,{filterSize:o,strides:c,pad:l,dimRoundingMode:u}=r,h=[1,1,1],d=Nc(a.shape,o,c,h,l,u),f=new If(d,"max",!0),p=t.runWebGLProgram(f,[a],a.dtype),x=new eB(d),g=t.runWebGLProgram(x,[i,p],a.dtype);return t.disposeIntermediateTensorInfo(p),g}const nB={kernelName:NT,backendName:"webgl",kernelFunc:tB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rB(n){const{inputs:e,backend:t,attrs:r}=n,{dy:i,input:s,output:a}=e,o=s;Oc([s,a],"maxPoolGrad");const{filterSize:c,strides:l,pad:u,dimRoundingMode:h}=r,d=_a(o.shape,c,l,1,u,h),f=!0,p=new bc(d,"max",f),x=t.runWebGLProgram(p,[o],o.dtype),g=new Q9(d),m=t.runWebGLProgram(g,[i,x],o.dtype);return t.disposeIntermediateTensorInfo(x),m}const iB={kernelName:RT,backendName:"webgl",kernelFunc:rB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sB(n,e,t,r){let i=new bc(t,"max",!1);const s=r.runWebGLProgram(i,[n],"float32");i=new bc(t,"max",!0,!0,e);const a=r.runWebGLProgram(i,[n],"float32");return[s,a]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aB={kernelName:M0,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:r}=n,{filterSize:i,strides:s,pad:a,includeBatchInIndex:o}=e,c=t;k(r.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const l=[1,1];k(xr(s,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${l}'`);const u=_a(r.shape,i,s,l,a),[h,d]=sB(r,o,u,c);return[h,d]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oB(n,e,t,r){const i=Ae(e),a=Ae(n.shape)/i,o=ke({inputs:{x:n},attrs:{shape:[a,i]},backend:r}),c=Aa(o,"float32","mean",r),l=ke({inputs:{x:c},attrs:{shape:t},backend:r});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(c),l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cB={kernelName:I0,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:r}=n,{keepDims:i,axis:s}=e,a=t,o=r.shape.length,c=Rn(s,r.shape);let l=c;const u=Xr(l,o),h=u!=null,d=a.shouldExecuteOnCPU([r]),f=[];let p=r;if(h){if(d){const w=a.texData.get(p.dataId).values,I=new Array(o);for(let F=0;F<I.length;F++)I[F]=r.shape[u[F]];const M=Rf(w,r.shape,r.dtype,u,I);p=a.makeTensorInfo(I,r.dtype);const D=a.texData.get(p.dataId);D.values=M}else p=Cu(r,u,a);f.push(p),l=jr(l.length,o)}li("sum",l,o);const[x,g]=wi(p.shape,l);let m=x;i&&(m=Rr(x,c));const _=oB(p,g,m,a);for(const b of f)a.disposeIntermediateTensorInfo(b);return _}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lB(n){const{inputs:e,backend:t,attrs:r}=n,{x:i}=e,{axis:s,keepDims:a}=r,o=i.shape.length,c=Rn(s,i.shape);let l=c;const u=Xr(l,o);let h=i;u!=null&&(h=Kn({inputs:{x:i},backend:t,attrs:{perm:u}}),l=jr(l.length,i.shape.length)),li("min",l,o);const[d,f]=wi(h.shape,l),p=Ae(f),x=ke({inputs:{x:h},backend:t,attrs:{shape:[-1,p]}}),g=Aa(x,x.dtype,"min",t);let m;if(a){const _=Rr(d,c);m=ke({inputs:{x:g},backend:t,attrs:{shape:_}})}else m=ke({inputs:{x:g},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(g),u!=null&&t.disposeIntermediateTensorInfo(h),m}const uB={kernelName:D0,backendName:"webgl",kernelFunc:lB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hB=Nf+`
  return min(a, b);
`,dB=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Ca+`
  return result;
`,fB=$n({opSnippet:hB,packedOpSnippet:dB,cpuKernelImpl:JF}),pB={kernelName:P0,backendName:"webgl",kernelFunc:fB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mB{constructor(e,t,r){this.variableNames=["x"],this.outputShape=t.map((u,h)=>u[0]+e[h]+u[1]);const i=e.length,s=Jt(i),a=t.map(u=>u[0]).join(","),o=t.map((u,h)=>u[0]+e[h]).join(","),c=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,i),l=r==="reflect"?0:1;if(i===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${a});
      ${s} end = ${s}(${o});

      void main() {
        ${s} outC = getOutputCoords();
        for (int i = 0; i < ${i}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${s} coords = outC - start;
        setOutput(getX(${c}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gB{constructor(e,t,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((p,x)=>p[0]+e[x]+p[1]);const i=e.length,s=Jt(i),a=t.map(p=>p[0]).join(","),o=t.map((p,x)=>p[0]+e[x]).join(","),c=qn("rc",i),l=qn("source",i),u=`${c[i-1]} < ${this.outputShape[i-1]}`,h=i===1?"source":`vec2(${l.slice(-2).join()})`,d=r==="reflect"?0:1;let f="";if(i===1){const p=`
        ${s} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;f=`
        ${s} rc = outputLoc;
        ${p}
        result[0] = getChannel(getX(${l.join()}), ${h});
        ${c[i-1]} += 1;
        if(${u}) {
          ${p}
          result[1] = getChannel(getX(${l.join()}), ${h});
        }
      `}else{const p=`
        ${s} source = rc;
        ${s} lt = ${s}(lessThan(source, start));
        ${s} gte = ${s}(greaterThanEqual(source, end));
        ${s} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;f=`
        ${s} rc = outputLoc;
        ${p}
        result[0] = getChannel(getX(${l.join()}), ${h});
        ${c[i-1]} += 1;
        if(${u}) {
          ${p}
          result[1] = getChannel(getX(${l.join()}), ${h});
        }
        rc = outputLoc;
        ${c[i-2]} += 1;
        if(${c[i-2]} < ${this.outputShape[i-2]}) {
          ${p}
          result[2] = getChannel(getX(${l.join()}), ${h});
          ${c[i-1]} += 1;
          if(${u}) {
            ${p}
            result[3] = getChannel(getX(${l.join()}), ${h});
          }
        }
      `}this.userCode=`
      const ${s} start = ${s}(${a});
      const ${s} end = ${s}(${o});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xB=({inputs:n,backend:e,attrs:t})=>{const{x:r}=n,{paddings:i,mode:s}=t,a=te().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new gB(r.shape,i,s):new mB(r.shape,i,s);return e.runWebGLProgram(a,[r],r.dtype)},yB={kernelName:O0,backendName:"webgl",kernelFunc:xB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vB=`if (b == 0.0) return NAN;
  return mod(a, b);`,_B=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Ca+`
  return result;
`,bB=$n({opSnippet:vB,packedOpSnippet:_B}),SB={kernelName:$0,backendName:"webgl",kernelFunc:bB};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wB{constructor(e,t,r){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,r],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EB=`
if (a == b) {
  return 1.0;
};
return a / b;`,TB=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,l3=$n({opSnippet:EB,packedOpSnippet:TB,checkOutOfBounds:!0}),CB={kernelName:j1,backendName:"webgl",kernelFunc:l3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qm="return a - b;",u3=$n({opSnippet:Qm,packedOpSnippet:Qm,supportsComplex:!0,cpuKernelImpl:v6}),AB={kernelName:k2,backendName:"webgl",kernelFunc:u3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h3(n){const{inputs:e,backend:t,attrs:r}=n,{logits:i}=e,{dim:s}=r,a=Rn([s],i.shape),o=c3({inputs:{x:i},backend:t,attrs:{reductionIndices:a,keepDims:!1}}),c=Rr(o.shape,a),l=ke({inputs:{x:o},backend:t,attrs:{shape:c}}),u=u3({inputs:{a:i,b:l},backend:t}),h=s3({inputs:{x:u},backend:t}),d=Au({inputs:{x:h},backend:t,attrs:{axis:a,keepDims:!1}}),f=ke({inputs:{x:d},backend:t,attrs:{shape:c}}),p=l3({inputs:{a:h,b:f},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),p}const RB={kernelName:T2,backendName:"webgl",kernelFunc:h3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NB(n){const{inputs:e,backend:t,attrs:r}=n,{logits:i}=e,{numSamples:s,seed:a,normalized:o}=r,c=o?i:h3({inputs:{logits:i},backend:t,attrs:{dim:i.shape.length-1}}),l=c.shape[0],u=c.shape[1],h=new wB(l,u,s),d=[[a]],f=t.runWebGLProgram(h,[c],"int32",d);return o||t.disposeIntermediateTensorInfo(c),f}const MB={kernelName:L0,backendName:"webgl",kernelFunc:NB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IB=qr+`
  return -x;
`,DB=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function PB(n){const{inputs:e,backend:t}=n,{x:r}=e;if(t.shouldExecuteOnCPU([r])){const s=t.texData.get(r.dataId),[a,o]=e6(s.values,r.shape,r.dtype);return t.makeTensorInfo(o,r.dtype,a)}let i;return te().getBool("WEBGL_PACK_UNARY_OPERATIONS")?i=new ls(r.shape,DB):i=new xi(r.shape,IB),t.runWebGLProgram(i,[r],r.dtype)}const OB={kernelName:F0,backendName:"webgl",kernelFunc:PB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $B=my;function LB(n){ri("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:r}=n,{boxes:i,scores:s}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:c}=r,l=t.readSync(i.dataId),u=t.readSync(s.dataId),{selectedIndices:h}=$B(l,u,a,o,c);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}const kB={kernelName:B0,backendName:"webgl",kernelFunc:LB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FB=gy;function UB(n){ri("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:r}=n,{boxes:i,scores:s}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:c,padToMaxOutputSize:l}=r,u=t.readSync(i.dataId),h=t.readSync(s.dataId),{selectedIndices:d,validOutputs:f}=FB(u,h,a,o,c,l);return[t.makeTensorInfo([d.length],"int32",new Int32Array(d)),t.makeTensorInfo([],"int32",new Int32Array([f]))]}const BB={kernelName:V0,backendName:"webgl",kernelFunc:UB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VB=xy;function zB(n){ri("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:r}=n,{boxes:i,scores:s}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:c,softNmsSigma:l}=r,u=t.readSync(i.dataId),h=t.readSync(s.dataId),d=a,f=o,p=c,x=l,{selectedIndices:g,selectedScores:m}=VB(u,h,d,f,p,x);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([m.length],"float32",new Float32Array(m))]}const GB={kernelName:z0,backendName:"webgl",kernelFunc:zB};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WB{constructor(e,t,r,i){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${i}), float(${r}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HB=n=>{const{inputs:e,backend:t,attrs:r}=n,{indices:i}=e,{dtype:s,depth:a,onValue:o,offValue:c}=r,l=Ae(i.shape),u=new WB(l,a,o,c),h=ke({inputs:{x:i},backend:t,attrs:{shape:[l]}}),d=t.runWebGLProgram(u,[h],s);t.disposeIntermediateTensorInfo(h);const f=[...i.shape,a],p=ke({inputs:{x:d},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(d),p},XB={kernelName:W0,backendName:"webgl",kernelFunc:HB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zl(n){const{inputs:e,backend:t}=n,{x:r}=e;if(r.dtype==="complex64"){const i=Lc({inputs:{input:r},backend:t}),s=Zl({inputs:{x:i},backend:t}),a=Ru({inputs:{input:r},backend:t}),o=Zl({inputs:{x:a},backend:t}),c=Rs({inputs:{real:s,imag:o},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(o),c}else return kc({attrs:{shape:r.shape,dtype:r.dtype,value:r.dtype==="string"?"":0},backend:t})}const jB={kernelName:H2,backendName:"webgl",kernelFunc:Zl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d3(n){const{inputs:e,backend:t}=n,{x:r}=e;if(r.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(r.dtype==="complex64"){const i=Lc({inputs:{input:r},backend:t}),s=d3({inputs:{x:i},backend:t}),a=Ru({inputs:{input:r},backend:t}),o=Zl({inputs:{x:a},backend:t}),c=Rs({inputs:{real:s,imag:o},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(o),c}else return kc({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:t})}const qB={kernelName:G0,backendName:"webgl",kernelFunc:d3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KB(n){const{inputs:e,backend:t,attrs:r}=n,{axis:i}=r;if(e.length===1)return yd({inputs:{input:e[0]},backend:t,attrs:{dim:i}});const s=e[0].shape,a=e[0].dtype;e.forEach(u=>{Tr(s,u.shape,"All tensors passed to stack must have matching shapes"),k(a===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],c=e.map(u=>{const h=yd({inputs:{input:u},backend:t,attrs:{dim:i}});return o.push(h),h}),l=Zv({inputs:c,backend:t,attrs:{axis:i}});return o.forEach(u=>t.disposeIntermediateTensorInfo(u)),l}const YB={kernelName:H0,backendName:"webgl",kernelFunc:KB};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZB{constructor(e,t,r){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((l,u)=>l[0]+e[u]+l[1]);const i=e.length,s=Jt(i),a=t.map(l=>l[0]).join(","),o=t.map((l,u)=>l[0]+e[u]).join(","),c=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,i);if(i===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${a});
      ${s} end = ${s}(${o});

      void main() {
        ${s} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${s} coords = outC - start;
          setOutput(getX(${c}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JB{constructor(e,t,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((x,g)=>x[0]+e[g]+x[1]);const i=e.length,s=Jt(i),a=t.map(x=>x[0]).join(","),o=t.map((x,g)=>x[0]+e[g]).join(","),c=qn("rc",i),l=qn("source",i),u=`${c[i-1]} < ${this.outputShape[i-1]}`,h=i===1?"source":`vec2(${l.slice(-2).join()})`,d=[`${s} rc = outputLoc;`,`${c[i-1]} += 1;
       if(${u}) {
      `,i===1?"":`}
       rc = outputLoc;
       ${c[i-2]} += 1;
       if(${c[i-2]} < ${this.outputShape[i-2]}) {`,i===1?"":`  ${c[i-1]} += 1;
         if(${u}) {`],f=i===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let x=0,g=i===1?2:4;x<g;x++)p+=`
        ${d[x]}
        if (${f}) {
          result[${x}] = float(value);
        } else {
          ${s} source = rc - start;
          result[${x}] = getChannel(getX(${l.join()}), ${h});
        }
      `;p+=i===1?"} ":"}}",this.userCode=`
      const ${s} start = ${s}(${a});
      const ${s} end = ${s}(${o});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f3=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:i}=e,{paddings:s,constantValue:a}=r;if(Ae(i.shape)===0){const l=s.map((u,h)=>u[0]+i.shape[h]+u[1]);return kc({backend:t,attrs:{shape:l,value:a,dtype:i.dtype}})}const o=te().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new JB(i.shape,s,a):new ZB(i.shape,s,a),c=[[a]];return t.runWebGLProgram(o,[i],i.dtype,c)},QB={kernelName:X0,backendName:"webgl",kernelFunc:f3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eV=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,tV=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Ca+`
  return result;
`,nV=$n({opSnippet:eV,packedOpSnippet:tV}),rV={kernelName:j0,backendName:"webgl",kernelFunc:nV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iV(n){const{inputs:e,backend:t,attrs:r}=n,{x:i}=e,{axis:s,keepDims:a}=r,o=i.shape.length,c=[],l=Rn(s,i.shape);let u=l;const h=Xr(u,o);let d=i;h!=null&&(d=Kn({inputs:{x:i},backend:t,attrs:{perm:h}}),u=jr(u.length,o),c.push(d)),li("prod",u,o);let f;if(t.shouldExecuteOnCPU([d])){const p=t.texData.get(d.dataId).values,{outVals:x,outShape:g,outDtype:m}=n6(d.shape,d.dtype,p,u);f=t.makeTensorInfo(g,m,x)}else{const[p,x]=wi(d.shape,u),g=Ae(x),m=ke({inputs:{x:d},backend:t,attrs:{shape:[-1,g]}}),_=Xd(i.dtype),b=Aa(m,_,"prod",t);f=ke({inputs:{x:b},backend:t,attrs:{shape:p}}),c.push(m),c.push(b)}if(a){c.push(f);const p=Rr(f.shape,l);f=ke({inputs:{x:f},backend:t,attrs:{shape:p}})}return c.forEach(p=>t.disposeIntermediateTensorInfo(p)),f}const sV={kernelName:K0,backendName:"webgl",kernelFunc:iV};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aV(n){const{inputs:e,backend:t,attrs:r}=n,{paramsNestedSplits:i,paramsDenseValues:s,indices:a}=e,{outputRaggedRank:o}=r,c=i.map(m=>t.readSync(m.dataId)),l=i.map(m=>m.shape),u=t.readSync(s.dataId),h=t.readSync(a.dataId),[d,f,p]=r6(c,l,u,s.shape,s.dtype,h,a.shape,o),x=d.map(m=>t.makeTensorInfo([m.length],"int32",m)),g=t.makeTensorInfo(p,s.dtype,f);return x.concat([g])}const oV={kernelName:Y0,backendName:"webgl",kernelFunc:aV};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cV(n){const{inputs:e,backend:t}=n,{starts:r,limits:i,deltas:s}=e,a=t.readSync(r.dataId),o=t.readSync(i.dataId),c=t.readSync(s.dataId),[l,u]=i6(a,r.shape,r.dtype,o,i.shape,c,s.shape),h=t.makeTensorInfo([l.length],"int32",l),d=t.makeTensorInfo([u.length],r.dtype,u);return[h,d]}const lV={kernelName:Z0,backendName:"webgl",kernelFunc:cV};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uV(n){const{inputs:e,backend:t,attrs:r}=n,{shape:i,values:s,defaultValue:a,rowPartitionTensors:o}=e,{rowPartitionTypes:c}=r,l=t.readSync(i.dataId),u=t.readSync(s.dataId),h=t.readSync(a.dataId),d=o.map(g=>t.readSync(g.dataId)),f=o.map(g=>g.shape),[p,x]=s6(l,i.shape,u,s.shape,s.dtype,h,a.shape,d,f,c);return t.makeTensorInfo(p,s.dtype,x)}const hV={kernelName:J0,backendName:"webgl",kernelFunc:uV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p3=n=>{const{backend:e,attrs:t}=n,{start:r,stop:i,step:s,dtype:a}=t,o=a6(r,i,s,a);return e.makeTensorInfo([o.length],a,o)},dV={kernelName:Q0,backendName:"webgl",kernelFunc:p3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fV="return 1.0 / x;",pV=zt({opSnippet:fV}),mV={kernelName:t2,backendName:"webgl",kernelFunc:pV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gV=qr+`
  return (x < 0.0) ? 0.0 : x;
`,xV=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,yV=zt({opSnippet:gV,packedOpSnippet:xV}),vV={kernelName:n2,backendName:"webgl",kernelFunc:yV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _V=qr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,bV=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,SV=zt({opSnippet:_V,packedOpSnippet:bV}),wV={kernelName:a2,backendName:"webgl",kernelFunc:SV};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EV{constructor(e,t,r,i,s){this.variableNames=["A"],this.outputShape=[];const[a,o,c,l]=e;this.outputShape=[a,t,r,l];const u=[i&&t>1?o-1:o,i&&r>1?c-1:c],h=[i&&t>1?t-1:t,i&&r>1?r-1:r];let d;s?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/h[0]},
          ${u[1]/h[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${c}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TV{constructor(e,t,r,i,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,o,c,l]=e;this.outputShape=[a,t,r,l];const u=[i&&t>1?o-1:o,i&&r>1?c-1:c],h=[i&&t>1?t-1:t,i&&r>1?r-1:r];let d;s?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/h[0]},
          ${u[1]/h[1]},
          ${u[1]/h[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${c}.0,
                                     ${c}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${r-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CV(n){const{inputs:e,backend:t,attrs:r}=n,{images:i}=e,{alignCorners:s,halfPixelCenters:a,size:o}=r,[c,l]=o,u=te().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new TV(i.shape,c,l,s,a):new EV(i.shape,c,l,s,a);return t.runWebGLProgram(u,[i],"float32")}const AV={kernelName:s2,backendName:"webgl",kernelFunc:CV};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RV{constructor(e,t,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,i,s]=t,[,a,o]=e,c=[r&&a>1?i-1:i,r&&o>1?s-1:s],l=[r&&a>1?a-1:a,r&&o>1?o-1:o],u=c[0]/l[0],h=c[1]/l[1],d=1/u,f=1/h,p=Math.ceil(d)*2+2,x=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${f});

        const int winHeight = int(${p});
        const int winWidth = int(${x});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${i-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NV(n){const{inputs:e,backend:t,attrs:r}=n,{images:i,dy:s}=e,{alignCorners:a}=r,o=new RV(s.shape,i.shape,a);return t.runWebGLProgram(o,[s],s.dtype)}const MV={kernelName:IT,backendName:"webgl",kernelFunc:NV};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IV{constructor(e,t,r,i,s){this.variableNames=["A"],this.outputShape=[];const[a,o,c,l]=e;this.outputShape=[a,t,r,l];const u=[i&&t>1?o-1:o,i&&r>1?c-1:c],h=[i&&t>1?t-1:t,i&&r>1?r-1:r],d=i?"0.5":"0.0";let f;s?f="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":f="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/h[0]},
          ${u[1]/h[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${c}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DV{constructor(e,t,r,i,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,o,c,l]=e;this.outputShape=[a,t,r,l];const u=[i&&t>1?o-1:o,i&&r>1?c-1:c],h=[i&&t>1?t-1:t,i&&r>1?r-1:r],d=i?"0.5":"0.0";let f;s?f="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":f="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/h[0]},
          ${u[1]/h[1]},
          ${u[1]/h[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${c}.0,
                                     ${c}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${r-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PV(n){const{inputs:e,backend:t,attrs:r}=n,{images:i}=e,{alignCorners:s,halfPixelCenters:a,size:o}=r,[c,l]=o,u=te().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new DV(i.shape,c,l,s,a):new IV(i.shape,c,l,s,a);return t.runWebGLProgram(u,[i],i.dtype)}const OV={kernelName:i2,backendName:"webgl",kernelFunc:PV};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $V{constructor(e,t,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,i,s]=t,[,a,o]=e,c=[r&&a>1?i-1:i,r&&o>1?s-1:s],l=[r&&a>1?a-1:a,r&&o>1?o-1:o],u=c[0]/l[0],h=c[1]/l[1],d=1/u,f=1/h,p=Math.ceil(d)*2+2,x=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${f});

        const int winHeight = int(${p});
        const int winWidth = int(${x});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float sourceFracRow =
              float(${c[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${c[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${i}) - 1),
                ${r} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${s}) - 1),
                ${r} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LV(n){const{inputs:e,backend:t,attrs:r}=n,{images:i,dy:s}=e,{alignCorners:a}=r,o=new $V(s.shape,i.shape,a);return t.runWebGLProgram(o,[s],s.dtype)}const kV={kernelName:MT,backendName:"webgl",kernelFunc:LV};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FV{constructor(e,t){this.variableNames=["x"];const r=e.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);if(this.outputShape=e,r===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const i=o=>t.indexOf(o)!==-1&&e[o]!==1?`${e[o]} - coords[${o}] - 1`:`coords[${o}]`,s=e.map((o,c)=>i(c)).join(","),a=Jt(r);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${s}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UV{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const r=e.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);this.outputShape=e;const i=qn("rc",r),s=`${i[r-1]} + 1 < ${this.outputShape[r-1]}`,a=`${i[r-2]} + 1 < ${this.outputShape[r-2]}`,o=Jt(r);r===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${s}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${o} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${c(i.slice())};
          if(${s}){
            result.g = ${l(i.slice())};
          }
          if(${a}) {
            result.b = ${u(i.slice())};
            if(${s}) {
              result.a = ${h(i.slice())};
            }
          }
          setOutput(result);
        }
    `;function c(p){return d(p)}function l(p){return p[r-1]="("+p[r-1]+" + 1)",d(p)}function u(p){return p[r-2]="("+p[r-2]+" + 1)",d(p)}function h(p){return p[r-1]="("+p[r-1]+" + 1)",p[r-2]="("+p[r-2]+" + 1)",d(p)}function d(p){const x=e.map((_,b)=>f(b,p)),g=x.join(","),m=x.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${m}))`}function f(p,x){return t.indexOf(p)!==-1&&e[p]!==1?`${e[p]} - ${x[p]} - 1`:`${x[p]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BV(n){const{inputs:e,backend:t,attrs:r}=n,{x:i}=e,{dims:s}=r,a=i.shape.length,o=Rn(s,i.shape);if(a===0)return mr({inputs:{x:i},backend:t});const c=te().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new UV(i.shape,o):new FV(i.shape,o);return t.runWebGLProgram(c,[i],i.dtype)}const VV={kernelName:o2,backendName:"webgl",kernelFunc:BV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zV{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const r=e[1],i=e[2];this.outputShape=e;let s="";typeof t=="number"?s=`float outputValue = ${t.toFixed(2)};`:s=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${s}
          if(coordX >= 0 && coordX < ${i} && coordY >= 0 && coordY < ${r}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GV={kernelName:j2,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:r}=n,{radians:i,fillValue:s,center:a}=e,o=t,c=new zV(r.shape,s),[l,u]=Hy(a,r.shape[1],r.shape[2]),h=[[l,u,Math.sin(i),Math.cos(i)]];return o.runWebGLProgram(c,[r],r.dtype,h)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WV=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,HV=zt({opSnippet:WV}),XV={kernelName:c2,backendName:"webgl",kernelFunc:HV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jV="return inversesqrt(x);",qV=zt({opSnippet:jV,cpuKernelImpl:o6}),KV={kernelName:l2,backendName:"webgl",kernelFunc:qV};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Df{constructor(e,t,r,i,s,a,o=!0,c=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const l=Jt(s.length),u=Jt(a.length);let h="";r===1?h="i":r===2&&(h="i, j");const d=`getIndices(${h})`;let f="";i===1?f="i":i===2&&(f="i, coords[1]");const p=`getUpdates(${f})`;let x="";c&&(x="coords[0], coords[1]");const g=`getDefaultValue(${x})`,m=t>1?"strides[j]":"strides";this.userCode=`
        ${l} strides = ${l}(${s});

        void main() {
          ${u} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${m};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${p};
              found = true;
            }
          }
          setOutput(mix(${g}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YV{constructor(e,t,r,i,s,a,o=!0,c=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a;const l=Jt(s.length),u=Jt(a.length);let h="";r===1?h="i":r===2&&(h="i, j");const d=`getIndices(${h})`;let f="";i===1?f="i":i===2&&(f="i, coords[1]");const p=`getUpdates(${f})`;let x="";c&&(x="coords[0], coords[1]");const g=`getDefaultValue(${x})`,m=t>1?"strides[j]":"strides",_=t>1?"strides[j + 1]":"strides";this.userCode=`
        ${l} strides = ${l}(${s});

        void main() {
          ${u} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${d});
              flattenedIndex += index.xz * ${m};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${_};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${p};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${g}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZV(n){const{inputs:e,backend:t,attrs:r}=n,{indices:i,updates:s}=e,{shape:a}=r,{sliceRank:o,numUpdates:c,sliceSize:l,strides:u,outputSize:h}=yu(s,i,a),d=[h/l,l];if(h===0)return t.makeTensorInfo(a,i.dtype);const f=ke({inputs:{x:i},backend:t,attrs:{shape:[c,o]}}),p=ke({inputs:{x:s},backend:t,attrs:{shape:[c,l]}}),x=t.makeTensorInfo([],"float32",new Float32Array([0]));let g;te().getBool("WEBGL_PACK")?g=new YV(c,o,f.shape.length,p.shape.length,u,d):g=new Df(c,o,f.shape.length,p.shape.length,u,d);const m=t.runWebGLProgram(g,[p,f,x],p.dtype),_=ke({inputs:{x:m},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(x),_}const JV={kernelName:u2,backendName:"webgl",kernelFunc:ZV};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QV{constructor(e,t,r,i){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,r];const s="while (left < right) {",a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,o=te().getNumber("WEBGL_VERSION")===2?s:a,c=i==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${o}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${c} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ez(n){const{inputs:e,backend:t,attrs:r}=n,{sortedSequence:i,values:s}=e,{side:a}=r,o=new QV(i.shape[0],i.shape[1],s.shape[1],a),c=[[i.shape[1]]];return t.runWebGLProgram(o,[i,s],"int32",c)}const tz={kernelName:d2,backendName:"webgl",kernelFunc:ez};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nz{constructor(e,t,r){this.variableNames=["c","a","b"],this.outputShape=t;let i,s;if(r>4)throw Error(`Where for rank ${r} is not yet supported`);if(r===1)s="resRC",i="resRC";else{const o=["resRC.x","resRC.y","resRC.z","resRC.w"],c=[],l=[];for(let u=0;u<t.length;u++)l.push(`${o[u]}`),u<e&&c.push(`${o[u]}`);i=c.join(),s=l.join()}const a=Jt(r);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${i});
        if (cVal >= 1.0) {
          setOutput(getA(${s}));
        } else {
          setOutput(getB(${s}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rz(n){const{inputs:e,backend:t}=n,{condition:r,t:i,e:s}=e,a=new nz(r.shape.length,i.shape,i.shape.length);return t.runWebGLProgram(a,[r,i,s],Si(i.dtype,s.dtype))}const iz={kernelName:f2,backendName:"webgl",kernelFunc:rz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sz=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${qy};
  float scale = ${Ky};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,az=zt({opSnippet:sz}),oz={kernelName:p2,backendName:"webgl",kernelFunc:az};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cz=Lo+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,lz=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,uz=zt({opSnippet:cz,packedOpSnippet:lz,cpuKernelImpl:l6}),hz={kernelName:v2,backendName:"webgl",kernelFunc:uz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dz=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,fz=zt({opSnippet:dz}),pz={kernelName:y2,backendName:"webgl",kernelFunc:fz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mz=Lo+`
  return sin(x);
`,gz=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${Ca}
  return result;
`,xz=zt({opSnippet:mz,packedOpSnippet:gz}),yz={kernelName:g2,backendName:"webgl",kernelFunc:xz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vz=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,_z=zt({opSnippet:vz}),bz={kernelName:x2,backendName:"webgl",kernelFunc:_z};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sz=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,wz=zt({opSnippet:Sz}),Ez={kernelName:_2,backendName:"webgl",kernelFunc:wz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tz=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:i}=e,{blockShape:s,paddings:a}=r;k(i.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const o=s.reduce((m,_)=>m*_),c=[[0,0]];c.push(...a);for(let m=1+s.length;m<i.shape.length;++m)c.push([0,0]);const l=[],u=f3({inputs:{x:i},backend:t,attrs:{paddings:c,constantValue:0}}),h=bf(u.shape,s,o,!1),d=Sf(h.length,s.length,!1),f=wf(u.shape,s,o,!1),p=ke({inputs:{x:u},backend:t,attrs:{shape:h}}),x=Kn({inputs:{x:p},backend:t,attrs:{perm:d}}),g=ke({inputs:{x},backend:t,attrs:{shape:f}});return l.push(u),l.push(p),l.push(x),l.forEach(m=>t.disposeIntermediateTensorInfo(m)),g},Cz={kernelName:w2,backendName:"webgl",kernelFunc:Tz};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Az(n){const{inputs:e,backend:t}=n,{indices:r,values:i,denseShape:s,defaultValue:a}=e;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${s.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${r.shape}`);if(i.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${i.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);const o=t.readSync(r.dataId),c=t.readSync(i.dataId),l=t.readSync(s.dataId),u=t.readSync(a.dataId)[0],[h,d,f,p,x]=h6(o,r.shape,r.dtype,c,i.dtype,l,u);return[t.makeTensorInfo(d,r.dtype,h),t.makeTensorInfo([d[0]],i.dtype,f),t.makeTensorInfo([p.length],"bool",new Uint8Array(p.map(g=>Number(g)))),t.makeTensorInfo([x.length],r.dtype,new Int32Array(x))]}const Rz={kernelName:C2,backendName:"webgl",kernelFunc:Az};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nz(n){const{inputs:e,backend:t}=n,{inputIndices:r,inputShape:i,newShape:s}=e;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(i.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${i.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const a=Array.from(t.readSync(i.dataId)),o=t.readSync(r.dataId),c=Array.from(t.readSync(s.dataId)),[l,u,h]=d6(o,r.shape,r.dtype,a,c);return[t.makeTensorInfo(u,r.dtype,l),t.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}const Mz={kernelName:A2,backendName:"webgl",kernelFunc:Nz};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iz(n){const{inputs:e,backend:t}=n,{data:r,indices:i,segmentIds:s}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${i.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${s.shape}`);const a=t.readSync(r.dataId),o=t.readSync(i.dataId),c=t.readSync(s.dataId),[l,u]=Fv(a,r.shape,r.dtype,o,c,!0);return t.makeTensorInfo(u,r.dtype,l)}const Dz={kernelName:R2,backendName:"webgl",kernelFunc:Iz};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pz(n){const{inputs:e,backend:t}=n,{data:r,indices:i,segmentIds:s}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${i.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${s.shape}`);const a=t.readSync(r.dataId),o=t.readSync(i.dataId),c=t.readSync(s.dataId),[l,u]=Fv(a,r.shape,r.dtype,o,c);return t.makeTensorInfo(u,r.dtype,l)}const Oz={kernelName:N2,backendName:"webgl",kernelFunc:Pz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $z(n){const{inputs:e,backend:t,attrs:r}=n,{sparseIndices:i,sparseValues:s,defaultValue:a}=e,{outputShape:o}=r,{sliceRank:c,numUpdates:l,sliceSize:u,strides:h,outputSize:d}=yu(s,i,o),f=!1;if(s.dtype==="string"){const m=t.bufferSync(i),_=t.bufferSync(s),b=go(t.readSync(a.dataId)[0]),w=c6(m,_,o,d,u,l,c,h,b,f);return t.makeTensorInfo(o,w.dtype,w.values)}const p=new Df(l,c,i.shape.length,s.shape.length,h,[d,1],f),x=t.runWebGLProgram(p,[s,i,a],s.dtype),g=ke({inputs:{x},backend:t,attrs:{shape:o}});return t.disposeIntermediateTensorInfo(x),g}const Lz={kernelName:M2,backendName:"webgl",kernelFunc:$z};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kz(n){const{inputs:e,backend:t,attrs:r}=n,{x:i}=e,{numOrSizeSplits:s,axis:a}=r,o=Rn(a,i.shape)[0],c=ov(i,s,o),l=i.shape.length,u=new Array(l).fill(0),h=i.shape.slice();return c.map(d=>{const f=[...h];f[o]=d;const p=ko({inputs:{x:i},backend:t,attrs:{begin:u,size:f}});return u[o]+=d,p})}const Fz={kernelName:E2,backendName:"webgl",kernelFunc:kz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eg="return sqrt(x);",Uz=zt({opSnippet:eg,packedOpSnippet:eg,cpuKernelImpl:f6}),Bz={kernelName:b2,backendName:"webgl",kernelFunc:Uz};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vz="return x * x;",zz=zt({opSnippet:Vz}),Gz={kernelName:DT,backendName:"webgl",kernelFunc:zz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tg="return (a - b) * (a - b);",Wz=$n({opSnippet:tg,packedOpSnippet:tg}),Hz={kernelName:I2,backendName:"webgl",kernelFunc:Wz};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xz(n){const{inputs:e,backend:t,attrs:r}=n,{x:i}=e;if(i.dtype!=="string")throw new Error("Input must be of datatype string");const s=t.readSync(i.dataId),a=vo(s),o=p6(a,"string",r);return t.makeTensorInfo(i.shape,"string",o)}const jz={kernelName:D2,backendName:"webgl",kernelFunc:Xz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qz({inputs:n,attrs:e,backend:t}){const{x:r}=n,i=qr+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,s=new xi(r.shape,i);return t.runWebGLProgram(s,[r],r.dtype)}const Kz={kernelName:X2,backendName:"webgl",kernelFunc:qz};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yz{constructor(e,t,r){this.variableNames=["x"],this.outputShape=r;const i=r.length,s=Jt(r.length),a=Jt(r.length);let o="";if(i===1)o="coords * strides + begin";else{let c=0;o=r.map((l,u)=>(c++,r.length===1?`coords * strides[${u}] + begin[${u}]`:`coords[${c-1}] * strides[${u}] + begin[${u}]`)).join(",")}this.userCode=`
      ${s} begin = ${s}(${e});
      ${s} strides = ${s}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zz(n){const{inputs:e,backend:t,attrs:r}=n,{x:i}=e,{begin:s,end:a,strides:o,beginMask:c,endMask:l,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=r,{finalShapeSparse:f,finalShape:p,isIdentity:x,sliceDim0:g,isSimpleSlice:m,begin:_,end:b,strides:w}=Uy(i.shape,s,a,o,c,l,u,h,d);let I;if(x)I=ke({inputs:{x:i},backend:t,attrs:{shape:p}});else if(g||m){k(i.shape.length>=1,()=>`Input must have rank at least 1, got: ${i.shape.length}`);const D=Ny(_,b,w),F=ko({inputs:{x:i},backend:t,attrs:{begin:_,size:D}});I=ke({inputs:{x:F},backend:t,attrs:{shape:p}}),t.disposeIntermediateTensorInfo(F)}else if(t.shouldExecuteOnCPU([i])){const F=t.readSync(i.dataId),N=pn(i.shape,i.dtype,F),A=m6(f,N,w,_);I=t.makeTensorInfo(p,i.dtype,A.values)}else{const F=new Yz(_,w,f);I=t.runWebGLProgram(F,[i],i.dtype)}const M=ke({inputs:{x:I},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(I),M}const Jz={kernelName:P2,backendName:"webgl",kernelFunc:Zz};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qz(n){const{inputs:e,backend:t,attrs:r}=n,{separator:i,nGramWidths:s,leftPad:a,rightPad:o,padWidth:c,preserveShortSequences:l}=r,{data:u,dataSplits:h}=e,d=t.readSync(u.dataId),f=t.readSync(h.dataId),[p,x]=g6(d,f,i,s,a,o,c,l);return[t.makeTensorInfo([p.length],"string",p),t.makeTensorInfo(h.shape,"int32",x)]}const eG={kernelName:O2,backendName:"webgl",kernelFunc:Qz};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tG(n){const{inputs:e,backend:t,attrs:r}=n,{skipEmpty:i}=r,{input:s,delimiter:a}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const o=t.readSync(s.dataId),c=t.readSync(a.dataId)[0],[l,u,h]=x6(o,c,i),d=u.length;return[t.makeTensorInfo([d,2],"int32",l),t.makeTensorInfo([d],"string",u),t.makeTensorInfo([2],"int32",new Int32Array(h))]}const nG={kernelName:$2,backendName:"webgl",kernelFunc:tG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rG(n){const{inputs:e,backend:t,attrs:r}=n,{numBuckets:i}=r,{input:s}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(i<=0)throw new Error("Number of buckets must be at least 1");const a=t.readSync(s.dataId),o=y6(a,i);return t.makeTensorInfo(s.shape,"int32",o)}const iG={kernelName:L2,backendName:"webgl",kernelFunc:rG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sG="return tan(x);",aG=zt({opSnippet:sG}),oG={kernelName:F2,backendName:"webgl",kernelFunc:aG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cG=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,lG=zt({opSnippet:cG}),uG={kernelName:U2,backendName:"webgl",kernelFunc:lG};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hG(n){const{inputs:e,backend:t,attrs:r}=n,{tensor:i,indices:s,updates:a}=e,{sliceRank:o,numUpdates:c,sliceSize:l,strides:u,outputSize:h}=yu(a,s,i.shape),d=[h/l,l];if(h===0)return t.makeTensorInfo(i.shape,s.dtype);const f=ke({inputs:{x:s},backend:t,attrs:{shape:[c,o]}}),p=ke({inputs:{x:a},backend:t,attrs:{shape:[c,l]}}),x=ke({inputs:{x:i},backend:t,attrs:{shape:d}}),g=new Df(c,o,f.shape.length,p.shape.length,u,d,!1,!0),m=t.runWebGLProgram(g,[p,f,x],x.dtype),_=ke({inputs:{x:m},backend:t,attrs:{shape:i.shape}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(m),_}const dG={kernelName:h2,backendName:"webgl",kernelFunc:hG};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fG{constructor(e,t){this.variableNames=["A"];const r=new Array(e.length);for(let a=0;a<r.length;a++)r[a]=e[a]*t[a];this.outputShape=r,this.rank=r.length;const i=Jt(this.rank),s=pG(e);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        setOutput(getA(${s}));
      }
    `}}function pG(n){const e=n.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${n[0]})`;const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let i=0;i<n.length;i++)r.push(`imod(${t[i]}, ${n[i]})`);return r.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m3(n){const{inputs:e,backend:t,attrs:r}=n,{x:i}=e,{reps:s}=r;if(i.dtype==="string"||i.shape.length>5){const c=t.readSync(i.dataId),l=i.dtype==="string"?c.map(d=>go(d)):c,u=pn(i.shape,i.dtype,l),h=_6(u,s);return t.makeTensorInfo(h.shape,h.dtype,h.values)}const a=new fG(i.shape,s);return t.runWebGLProgram(a,[i],i.dtype)}const mG={kernelName:Wd,backendName:"webgl",kernelFunc:m3};class gG{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class xG{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Us(n,e){e!==null&&n.disposeIntermediateTensorInfo(e)}function ng(n){let e=1;for(;e<n;)e*=2;return e}function yG(n){const{inputs:e,backend:t,attrs:r}=n,{x:i}=e,{k:s,sorted:a}=r,o=te().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),c=te().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=i.shape,u=l[l.length-1];if(t.shouldExecuteOnCPU([i])||u<o||s>c){const A=t.readSync(i.dataId),[B,J]=b6(A,l,i.dtype,s,a);return[t.makeTensorInfo(B.shape,B.dtype,B.values),t.makeTensorInfo(J.shape,J.dtype,J.values)]}if(s===0)return l[l.length-1]=0,[t.makeTensorInfo(l,i.dtype,[]),t.makeTensorInfo(l,"int32",[])];if(u===1)return[i,kc({attrs:{shape:l,dtype:"int32",value:0},backend:t})];const h=t.texData.get(i.dataId),d=h!==null&&h.isPacked,f=d?t.unpackTensor(i):i,x=Ae(l)/u,g=ke({inputs:{x:f},attrs:{shape:[x,u]},backend:t});d&&Us(t,f);const m=ng(s),_=ng(u);let b=null;const w=()=>b===null?[g,g]:[g,b],I=(A,B,J)=>{const Y=w(),ae=new gG(J),he=[[u],[b===null?1:0],[Number.NEGATIVE_INFINITY],[A],[B]],de=b;b=t.runWebGLProgram(ae,Y,"int32",he),Us(t,de)};for(let A=1;A<m;A*=2){const B=A*2;for(let J=A;J>=1;J/=2)I(B,J,[x,_])}for(let A=_;A>m;A/=2){const B=w(),J=new xG([x,A/2]),ae=[[u],[b===null?1:0],[m]],le=b;b=t.runWebGLProgram(J,B,"int32",ae),Us(t,le);const he=m/2,de=he*2;for(let oe=he;oe>=1;oe/=2)I(de,oe,b.shape)}let M=b;b=ko({inputs:{x:b},backend:t,attrs:{begin:0,size:[x,s]}}),Us(t,M);let D=o3({inputs:{x:g,indices:b},backend:t,attrs:{axis:1,batchDims:1}});Us(t,g);const F=l.slice(0,-1);F.push(s),M=b,b=ke({inputs:{x:b},attrs:{shape:F},backend:t}),Us(t,M);const N=D;return D=ke({inputs:{x:D},attrs:{shape:F},backend:t}),Us(t,N),[D,b]}const vG={kernelName:B2,backendName:"webgl",kernelFunc:yG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _G{constructor(e,t,r,i,s,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const o=r==="nearest"?1:2;let c;switch(i){case"constant":c=1;break;case"reflect":c=2;break;case"wrap":c=3;break;case"nearest":c=4;break;default:c=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${c} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${c} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${c} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${s});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${s});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${o} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bG(n){const{inputs:e,backend:t,attrs:r}=n,{image:i,transforms:s}=e,{interpolation:a,fillMode:o,fillValue:c,outputShape:l}=r,[u,h,d,f]=i.shape,[p,x]=l??[h,d],g=[u,p,x,f],m=new _G(h,d,a,o,c,g);return t.runWebGLProgram(m,[i,s],"float32")}const SG={kernelName:V2,backendName:"webgl",kernelFunc:bG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wG(n){const{inputs:e,attrs:t,backend:r}=n,{axis:i}=t,{x:s}=e;Oc(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=r.readSync(s.dataId),{outputValues:o,outputShape:c,indices:l}=S6(a,i,s.shape,s.dtype);return[r.makeTensorInfo(c,s.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}const EG={kernelName:z2,backendName:"webgl",kernelFunc:wG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TG(n){const{inputs:e,backend:t,attrs:r}=n,{value:i}=e;let{axis:s}=r;s<0&&(s+=i.shape.length);const a=i,o=a.shape.length,c=i.shape[s],l=new Array(o-1);let u=0;for(let x=0;x<o;x++)x!==s&&(l[u++]=a.shape[x]);const h=[],d=new Array(o).fill(0),f=a.shape.slice();f[s]=1;const p=new Array(c);for(let x=0;x<p.length;x++){d[s]=x;const g=ko({inputs:{x:a},backend:t,attrs:{begin:d,size:f}}),m=ke({inputs:{x:g},backend:t,attrs:{shape:l}});p[x]=m,h.push(g)}return h.forEach(x=>t.disposeIntermediateTensorInfo(x)),p}const CG={kernelName:G2,backendName:"webgl",kernelFunc:TG};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AG{constructor(e,t){this.variableNames=["x","segmentIds"];const r=e.windowSize,i=e.batchSize,s=e.inSize,a=e.numSegments,o=a*Math.ceil(s/r);this.outputShape=[i,o];const c="0.0",l="sumValue",u=Math.floor(r/4)*4,h=r%4,d=`
        sumValue += dot(values, segFilter);
    `;let f="";s%r>0&&(f=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `);let p="";s%r>0&&(p=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${c};

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${p}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${r}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${u};
        if (${h===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${h===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${h===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${l});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RG(n){const{inputs:e,backend:t,attrs:r}=n,{x:i,segmentIds:s}=e,{numSegments:a}=r,o=i.shape.length,c=[];let l=0;const u=Xr([l],o);let h=i;u!=null&&(h=Kn({inputs:{x:i},backend:t,attrs:{perm:u}}),c.push(h),l=jr(1,o)[0]);const d=_v(h.shape,l,a),f=Ae([h.shape[l]]),p=ke({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}});c.push(p);const x=Xd(i.dtype),g=(w,I,M,D,F)=>{const N=w.shape[0],A=w.shape[1],B=vv(A,F),J={windowSize:B,inSize:A,batchSize:N,numSegments:F},Y=new AG(J,I),ae=t.compileAndRun(Y,[w,M],D);if(c.push(ae),ae.shape[1]===F)return ae;const le=p3({backend:t,attrs:{start:0,stop:F,step:1,dtype:"float32"}}),he=m3({inputs:{x:le},backend:t,attrs:{reps:[A/B]}});return c.push(le),c.push(he),g(ae,I,he,D,F)},m=g(p,"unsortedSegmentSum",s,x,a),_=ke({inputs:{x:m},backend:t,attrs:{shape:d}});let b=_;if(u!=null){c.push(_);const w=Jd(u);b=Kn({inputs:{x:b},backend:t,attrs:{perm:w}})}return c.forEach(w=>t.disposeIntermediateTensorInfo(w)),b}const NG={kernelName:W2,backendName:"webgl",kernelFunc:RG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MG=[f5,m5,y5,b5,w5,C5,R5,M5,O5,L5,U5,z5,H5,K5,J5,eU,nU,aU,cU,uU,pU,bU,wU,AU,NU,$U,kU,VU,Y6,WU,KU,QU,s8,c8,u8,d8,p8,y8,b8,E8,C8,R8,M8,P8,$8,U8,V8,W8,j8,K8,Q8,r7,o7,u7,f7,p7,g7,y7,_7,S7,E7,R7,I7,O7,L7,U7,z7,X7,Y7,K6,J7,jU,t9,i9,o9,J6,h9,m9,x9,b9,E9,R9,I9,$9,U9,z9,W9,q9,Y9,J9,nB,iB,aB,cB,uB,pB,yB,SB,MB,t5,OB,kB,BB,GB,IU,XB,qB,YB,QB,rV,e5,sV,oV,lV,hV,dV,DU,CB,mV,vV,wV,r5,AV,MV,OV,kV,VV,GV,XV,KV,JV,tz,iz,oz,hz,pz,yz,bz,vU,RB,Ez,Cz,Rz,Mz,Dz,Oz,Lz,Fz,Bz,Gz,Hz,jz,Kz,Jz,eG,nG,iG,AB,u5,oG,uG,dG,mG,vG,SG,h5,EG,CG,NG,jB];for(const n of MG)$T(n);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IG=te();IG.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var ur;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(ur||(ur={}));var rg;(function(n){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(rg||(rg={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DG={};function g3(n){return DG[n]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S(n,e,t,r,i){const s=e.inputParams[n];if(s&&s.inputIndexStart!==void 0){const o=s.inputIndexStart,c=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?o+1:s.inputIndexEnd,l=o<0?e.inputNames.length+o:o;if(s.type==="tensor")return Dn(e.inputNames[l],t,r,i);if(s.type==="tensors"){const d=e.inputs.slice(o,c);return e.inputNames.slice(o,c).filter((p,x)=>{var g;return((g=d[x])===null||g===void 0?void 0:g.op)!=="NoOp"}).map(p=>Dn(p,t,r,i))}const u=Dn(e.inputNames[l],t,r,i),h=u.dataSync();return s.type==="number"?h[0]:Gh(u.shape,h)}const a=e.attrParams[n];return a&&a.value}function Dn(n,e,t,r){const[i,s]=hr(n,t);if(r!=null){const o=r.getHashTableHandleByName(i);if(o!=null)return o}const a=t.currentContextIds.find(o=>!!e[Jl(i,o)]);return a!==void 0?e[Jl(i,a)][s]:void 0}function ig(n,e,t){return e[Jl(n,t.currentContextId)]}function Di(n,e){const[t,r,i]=hr(n,e);return[Jl(t,e&&e.currentContextId),r,i]}function Jl(n,e){return e?`${n}-${e}`:n}function hr(n,e){if(n==="")return["",0,void 0];const t=e!=null&&e.parseNodeNameCache!=null;if(t){const s=e.parseNodeNameCache.get(n);if(s!=null)return s}const r=n.split(":");let i;if(r.length===1)i=[n,0,void 0];else{const s=r[0],a=r.length===3?r[1]:void 0,o=Number(r[r.length-1]);i=[s,o,a]}return t&&e.parseNodeNameCache.set(n,i),i}function Cl(n,e,t){let r=S("pad",n,e,t);if(r==="explicit"){r=S("explicitPaddings",n,e,t);const i=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)i[s][0]=r[s*2],i[s][1]=r[s*2+1];return i}return r}function Pi(n){return n.kept?n:fs(n)}/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PG=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],OG=Object.freeze(Object.defineProperty({__proto__:null,json:PG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $G=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],LG=Object.freeze(Object.defineProperty({__proto__:null,json:$G},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kG=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],FG=Object.freeze(Object.defineProperty({__proto__:null,json:kG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UG=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],BG=Object.freeze(Object.defineProperty({__proto__:null,json:UG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VG=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],zG=Object.freeze(Object.defineProperty({__proto__:null,json:VG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GG=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],WG=Object.freeze(Object.defineProperty({__proto__:null,json:GG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HG=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],XG=Object.freeze(Object.defineProperty({__proto__:null,json:HG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jG=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],qG=Object.freeze(Object.defineProperty({__proto__:null,json:jG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KG=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],YG=Object.freeze(Object.defineProperty({__proto__:null,json:KG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZG=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],JG=Object.freeze(Object.defineProperty({__proto__:null,json:ZG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QG=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],eW=Object.freeze(Object.defineProperty({__proto__:null,json:QG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tW=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],nW=Object.freeze(Object.defineProperty({__proto__:null,json:tW},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rW=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],iW=Object.freeze(Object.defineProperty({__proto__:null,json:rW},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sW=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],aW=Object.freeze(Object.defineProperty({__proto__:null,json:sW},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oW=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],cW=Object.freeze(Object.defineProperty({__proto__:null,json:oW},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lW=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],uW=Object.freeze(Object.defineProperty({__proto__:null,json:lW},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hW=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],dW=Object.freeze(Object.defineProperty({__proto__:null,json:hW},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fW=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],pW=Object.freeze(Object.defineProperty({__proto__:null,json:fW},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mW=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],gW=Object.freeze(Object.defineProperty({__proto__:null,json:mW},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sg{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[OG,LG,FG,BG,zG,WG,XG,qG,YG,JG,eW,nW,iW,aW,cW,uW,dW,pW,gW],t=[].concat(...e.map(r=>r.json));this.opMappers=t.reduce((r,i)=>(r[i.tfOpName]=i,r),{})}transformGraph(e,t={}){const r=e.node,i=[],s=[],a=[],o=r.reduce((x,g)=>(x[g.name]=this.mapNode(g),g.op.startsWith("Placeholder")?i.push(x[g.name]):g.op==="Const"?s.push(x[g.name]):(g.input==null||g.input.length===0)&&a.push(x[g.name]),x),{});let c=[];const l=[];let u={},h={};t!=null&&(u=this.mapSignatureEntries(t.inputs),h=this.mapSignatureEntries(t.outputs));const d=Object.keys(o);d.forEach(x=>{const g=o[x];g.inputNames.forEach((m,_)=>{const[b,,w]=Di(m),I=o[b];if(I.outputs!=null){const M=I.outputs.indexOf(w);if(M!==-1){const D=`${b}:${M}`;g.inputNames[_]=D}}g.inputs.push(I),I.children.push(g)})}),Object.keys(h).length===0?d.forEach(x=>{const g=o[x];g.children.length===0&&l.push(g)}):Object.keys(h).forEach(x=>{const[g]=Di(x),m=o[g];m!=null&&(m.signatureKey=h[x],l.push(m))}),Object.keys(u).length>0?Object.keys(u).forEach(x=>{const[g]=Di(x),m=o[g];m&&(m.signatureKey=u[x],c.push(m))}):c=i;let f={};e.library!=null&&e.library.function!=null&&(f=e.library.function.reduce((x,g)=>(x[g.signature.name]=this.mapFunction(g),x),{}));const p={nodes:o,inputs:c,outputs:l,weights:s,placeholders:i,signature:t,functions:f};return a.length>0&&(p.initNodes=a),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,r)=>(t[e[r].name]=r,t),{})}mapNode(e){const t=g3(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});const r={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(i=>i.startsWith("^")?i.slice(1):i),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(r.inputParams=t.inputs.reduce((i,s)=>(i[s.name]={type:s.type,inputIndexStart:s.start,inputIndexEnd:s.end},i),{})),t.attrs!=null&&(r.attrParams=t.attrs.reduce((i,s)=>{const a=s.type;let o;switch(s.type){case"string":o=vd(e.attr,s.tfName,s.defaultValue),o===void 0&&s.tfDeprecatedName&&(o=vd(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"string[]":o=Cd(e.attr,s.tfName,s.defaultValue),o===void 0&&s.tfDeprecatedName&&(o=Cd(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number":o=bd(e.attr,s.tfName,s.defaultValue||0),o===void 0&&s.tfDeprecatedName&&(o=bd(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number[]":o=Td(e.attr,s.tfName,s.defaultValue),o===void 0&&s.tfDeprecatedName&&(o=Td(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool":o=_d(e.attr,s.tfName,s.defaultValue),o===void 0&&s.tfDeprecatedName&&(o=_d(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool[]":o=Rd(e.attr,s.tfName,s.defaultValue),o===void 0&&s.tfDeprecatedName&&(o=Rd(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape":o=Ed(e.attr,s.tfName,s.defaultValue),o===void 0&&s.tfDeprecatedName&&(o=Ed(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape[]":o=Ad(e.attr,s.tfName,s.defaultValue),o===void 0&&s.tfDeprecatedName&&(o=Ad(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype":o=Sd(e.attr,s.tfName,s.defaultValue),o===void 0&&s.tfDeprecatedName&&(o=Sd(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype[]":o=wd(e.attr,s.tfName,s.defaultValue),o===void 0&&s.tfDeprecatedName&&(o=wd(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"func":o=ag(e.attr,s.tfName,s.defaultValue),o===void 0&&s.tfDeprecatedName&&(o=ag(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${s.type} for op: ${e.op}`)}return i[s.name]={value:o,type:a},i},{})),r}mapFunction(e){const t=e.nodeDef,r=[],i=[];let s={};t!=null&&(s=t.reduce((h,d)=>(h[d.name]=this.mapNode(d),d.op==="Const"&&i.push(h[d.name]),h),{}));const a=[],o=[];e.signature.inputArg.forEach(h=>{const[d]=Di(h.name),f={name:d,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Pf(h.type),type:"dtype"}},children:[]};f.signatureKey=h.name,a.push(f),s[d]=f}),Object.keys(s).forEach(h=>{const d=s[h];d.inputNames.forEach((f,p)=>{const[x,,g]=Di(f),m=s[x];if(m.outputs!=null){const _=m.outputs.indexOf(g);if(_!==-1){const b=`${x}:${_}`;d.inputNames[p]=b}}d.inputs.push(m),m.children.push(d)})});const l=e.ret;e.signature.outputArg.forEach(h=>{const[d,f]=Di(l[h.name]),p=s[d];p!=null&&(p.defaultOutput=f,o.push(p))});const u=this.mapArgsToSignature(e);return{nodes:s,inputs:a,outputs:o,weights:i,placeholders:r,signature:u}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,r)=>(t[r.name]=this.mapArgToTensorInfo(r),t),{}),outputs:e.signature.outputArg.reduce((t,r)=>(t[r.name]=this.mapArgToTensorInfo(r,e.ret),t),{})}}mapArgToTensorInfo(e,t){let r=e.name;return t!=null&&(r=t[r]),{name:r,dtype:e.type}}}function xW(n){const e=te().global;if(typeof e.atob<"u")return e.atob(n);if(typeof Buffer<"u")return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function x3(n,e){const t=Array.isArray(n)?String.fromCharCode.apply(null,n):xW(n);return e?t:t.toLowerCase()}function vd(n,e,t,r=!1){const i=n[e];return i!=null?x3(i.s,r):t}function _d(n,e,t){const r=n[e];return r?r.b:t}function bd(n,e,t){const r=n[e]||{},i=r.i!=null?r.i:r.f!=null?r.f:t;return typeof i=="number"?i:parseInt(i,10)}function Pf(n){switch(typeof n=="string"&&(n=ur[n]),n){case ur.DT_FLOAT:case ur.DT_HALF:return"float32";case ur.DT_INT32:case ur.DT_INT64:case ur.DT_INT8:case ur.DT_UINT8:return"int32";case ur.DT_BOOL:return"bool";case ur.DT_DOUBLE:return"float32";case ur.DT_STRING:return"string";case ur.DT_COMPLEX64:case ur.DT_COMPLEX128:return"complex64";default:return null}}function ag(n,e,t){const r=n[e];return r&&r.func?r.func.name:t}function Sd(n,e,t){const r=n[e];return r&&r.type?Pf(r.type):t}function wd(n,e,t){const r=n[e];return r&&r.list&&r.list.type?r.list.type.map(i=>Pf(i)):t}function y3(n){if(!n.unknownRank)return n.dim!=null?n.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function Ed(n,e,t){const r=n[e];return r&&r.shape?y3(r.shape):t}function Td(n,e,t){const r=n[e];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(i=>typeof i=="number"?i:parseInt(i,10)):t}function Cd(n,e,t,r=!1){const i=n[e];return i&&i.list&&i.list.s?i.list.s.map(s=>x3(s,r)):t}function Ad(n,e,t){const r=n[e];return r&&r.list&&r.list.shape?r.list.shape.map(i=>y3(i)):t}function Rd(n,e,t){const r=n[e];return r&&r.list&&r.list.b?r.list.b:t}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yW{constructor(e,t,r){this.node=e,this.tensorMap=t,this.context=r,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(i=>this.getInput(i)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((i,s)=>(i[s]=this.getAttr(s),i),{}))}getInput(e){return Dn(e,this.tensorMap,this.context)}getAttr(e,t){const r=this.node.rawAttrs[e];if(r.tensor!=null)return Dn(e,this.tensorMap,this.context);if(r.i!=null||r.f!=null)return bd(this.node.rawAttrs,e,t);if(r.s!=null)return vd(this.node.rawAttrs,e,t);if(r.b!=null)return _d(this.node.rawAttrs,e,t);if(r.shape!=null)return Ed(this.node.rawAttrs,e,t);if(r.type!=null)return Sd(this.node.rawAttrs,e,t);if(r.list!=null){if(r.list.i!=null||r.list.f!=null)return Td(this.node.rawAttrs,e,t);if(r.list.s!=null)return Cd(this.node.rawAttrs,e,t);if(r.list.shape!=null)return Ad(this.node.rawAttrs,e,t);if(r.list.b!=null)return Rd(this.node.rawAttrs,e,t);if(r.list.type!=null)return wd(this.node.rawAttrs,e,t)}return t}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ln=Object.freeze(Object.defineProperty({__proto__:null,OP_SCOPE_SUFFIX:px,abs:br,acos:JC,acosh:eA,add:ct,addN:nA,all:iA,any:aA,argMax:cA,argMin:uA,asin:dA,asinh:pA,atan:gA,atan2:yA,atanh:_A,avgPool:Mx,avgPool3d:RA,basicLSTMCell:$A,batchNorm:du,batchNorm2d:BA,batchNorm3d:zA,batchNorm4d:WA,batchToSpaceND:Ix,bincount:Dx,bitwiseAnd:jA,booleanMaskAsync:ID,broadcastArgs:KA,broadcastTo:oc,buffer:pn,cast:cn,ceil:JA,clipByValue:Px,clone:fs,complex:bs,concat:On,concat1d:tR,concat2d:rR,concat3d:sR,concat4d:oR,conv1d:uR,conv2d:fu,conv2dTranspose:fR,conv3d:mR,conv3dTranspose:vR,cos:bR,cosh:wR,cosineWindow:pf,cumprod:TR,cumsum:AR,denseBincount:NR,depthToSpace:IR,depthwiseConv2d:Yd,diag:OR,dilation2d:LR,div:Lt,divNoNan:VR,dot:GR,dropout:WD,einsum:Za,elu:kx,enclosingPowerOfTwo:dy,ensureShape:jR,equal:Lx,erf:KR,euclideanNorm:iN,exp:Bi,expandDims:kr,expm1:cN,eye:Bx,fft:hf,fill:Ic,floor:Vx,floorDiv:Rx,fused:sP,gather:zx,gatherND:VD,greater:mu,greaterEqual:Gx,ifft:Xl,imag:gu,image:No,inTopKAsync:XD,irfft:sy,isFinite:xN,isInf:vN,isNaN:bN,leakyRelu:Wx,less:ld,lessEqual:Qd,linalg:FO,linspace:TN,localResponseNormalization:AN,log:mc,log1p:Hx,logSigmoid:ON,logSoftmax:kN,logSumExp:jx,logicalAnd:Gl,logicalNot:qx,logicalOr:Kx,logicalXor:GN,losses:UO,lowerBound:HN,matMul:Zt,max:ao,maxPool:Yx,maxPool3d:qN,maxPoolWithArgmax:YN,maximum:Zx,mean:Wl,meshgrid:QN,min:cd,minimum:Hl,mirrorPad:nM,mod:iM,moments:aM,movingAverage:OD,mul:Oe,multiRNNCell:cM,multinomial:uM,neg:bi,norm:pu,notEqual:Jx,oneHot:fM,ones:ea,onesLike:mM,op:H,outerProduct:xM,pad:Dc,pad1d:_M,pad2d:SM,pad3d:EM,pad4d:CM,pool:IM,pow:pc,prelu:ey,print:Ax,prod:OM,raggedGather:LM,raggedRange:FM,raggedTensorToTensor:BM,rand:zM,randomGamma:cI,randomNormal:ny,randomStandardNormal:hI,randomUniform:uf,randomUniformInt:pI,range:gc,real:xc,reciprocal:xI,relu:xu,relu6:ry,reshape:ge,reverse:fa,reverse1d:SI,reverse2d:EI,reverse3d:CI,reverse4d:RI,rfft:df,round:iy,rsqrt:II,scalar:Bt,scatterND:LD,searchSorted:ef,selu:PI,separableConv2d:$I,setdiff1dAsync:kI,sigmoid:ra,sign:UI,signal:kO,sin:VI,sinh:GI,slice:Nt,slice1d:HI,slice2d:jI,slice3d:KI,slice4d:ZI,softmax:QI,softplus:Xx,spaceToBatchND:Qx,sparse:BO,sparseToDense:UD,spectral:LO,split:yc,sqrt:Ui,square:ii,squaredDifference:ay,squeeze:Sn,stack:zi,step:oy,stridedSlice:uD,string:VO,sub:Mt,sum:sn,tan:dD,tanh:od,tensor:_i,tensor1d:zn,tensor2d:ms,tensor3d:cy,tensor4d:fD,tensor5d:pD,tensor6d:mD,tensorScatterUpdate:xD,tile:cc,topk:vD,transpose:ud,truncatedNormal:bD,unique:wD,unsortedSegmentSum:TD,unstack:Sa,upperBound:AD,variable:RD,where:ps,whereAsync:hy,zeros:da,zerosLike:Er},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vW=(n,e,t,r=Ln)=>{switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(S("a",n,e,t),S("b",n,e,t))];case"AddN":return[r.addN(S("tensors",n,e,t))];case"FloorMod":case"Mod":return[r.mod(S("a",n,e,t),S("b",n,e,t))];case"Mul":return[r.mul(S("a",n,e,t),S("b",n,e,t))];case"RealDiv":case"Div":return[r.div(S("a",n,e,t),S("b",n,e,t))];case"DivNoNan":return[r.divNoNan(S("a",n,e,t),S("b",n,e,t))];case"FloorDiv":return[r.floorDiv(S("a",n,e,t),S("b",n,e,t))];case"Sub":return[r.sub(S("a",n,e,t),S("b",n,e,t))];case"Minimum":return[r.minimum(S("a",n,e,t),S("b",n,e,t))];case"Maximum":return[r.maximum(S("a",n,e,t),S("b",n,e,t))];case"Pow":return[r.pow(S("a",n,e,t),S("b",n,e,t))];case"SquaredDifference":return[r.squaredDifference(S("a",n,e,t),S("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _W=(n,e,t,r=Ln)=>{switch(n.op){case"Abs":case"ComplexAbs":return[r.abs(S("x",n,e,t))];case"Acos":return[r.acos(S("x",n,e,t))];case"Acosh":return[r.acosh(S("x",n,e,t))];case"Asin":return[r.asin(S("x",n,e,t))];case"Asinh":return[r.asinh(S("x",n,e,t))];case"Atan":return[r.atan(S("x",n,e,t))];case"Atan2":return[r.atan2(S("x",n,e,t),S("y",n,e,t))];case"Atanh":return[r.atanh(S("x",n,e,t))];case"Ceil":return[r.ceil(S("x",n,e,t))];case"Complex":return[r.complex(S("real",n,e,t),S("imag",n,e,t))];case"Cos":return[r.cos(S("x",n,e,t))];case"Cosh":return[r.cosh(S("x",n,e,t))];case"Elu":return[r.elu(S("x",n,e,t))];case"Erf":return[r.erf(S("x",n,e,t))];case"Exp":return[r.exp(S("x",n,e,t))];case"Expm1":return[r.expm1(S("x",n,e,t))];case"Floor":return[r.floor(S("x",n,e,t))];case"Log":return[r.log(S("x",n,e,t))];case"Log1p":return[r.log1p(S("x",n,e,t))];case"Imag":return[r.imag(S("x",n,e,t))];case"Neg":return[r.neg(S("x",n,e,t))];case"Reciprocal":return[r.reciprocal(S("x",n,e,t))];case"Real":return[r.real(S("x",n,e,t))];case"Relu":return[r.relu(S("x",n,e,t))];case"Round":return[r.round(S("x",n,e,t))];case"Selu":return[r.selu(S("x",n,e,t))];case"Sigmoid":return[r.sigmoid(S("x",n,e,t))];case"Sin":return[r.sin(S("x",n,e,t))];case"Sign":return[r.sign(S("x",n,e,t))];case"Sinh":return[r.sinh(S("x",n,e,t))];case"Softplus":return[r.softplus(S("x",n,e,t))];case"Sqrt":return[r.sqrt(S("x",n,e,t))];case"Square":return[r.square(S("x",n,e,t))];case"Tanh":return[r.tanh(S("x",n,e,t))];case"Tan":return[r.tan(S("x",n,e,t))];case"ClipByValue":return[r.clipByValue(S("x",n,e,t),S("clipValueMin",n,e,t),S("clipValueMax",n,e,t))];case"Relu6":return[r.relu6(S("x",n,e,t))];case"Rsqrt":return[r.rsqrt(Dn(n.inputNames[0],e,t))];case"LeakyRelu":return[r.leakyRelu(S("x",n,e,t),S("alpha",n,e,t))];case"Prelu":return[r.prelu(S("x",n,e,t),S("alpha",n,e,t))];case"IsNan":return[r.isNaN(Dn(n.inputNames[0],e,t))];case"IsInf":return[r.isInf(Dn(n.inputNames[0],e,t))];case"IsFinite":return[r.isFinite(Dn(n.inputNames[0],e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $r(n,e,t=""){if(!(typeof n=="number"||typeof e=="number")){k(n.length===e.length,()=>t+` Shapes ${n} and ${e} must match`);for(let r=0;r<n.length;r++){const i=n[r],s=e[r];k(i<0||s<0||i===s,()=>t+` Shapes ${n} and ${e} must match`)}}}function og(n){return!(typeof n=="number"||n.some(e=>e<0))}function ec(n,e,t){let r=Nd(n,t);const i=!og(r);if(i&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(i&&e.forEach(s=>{r=Nd(s.shape,r)}),!og(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function Nd(n,e){if(typeof n=="number")return e;if(typeof e=="number")return n;if(n.length!==e.length)throw new Error(`Incompatible ranks during merge: ${n} vs. ${e}`);const t=[];for(let r=0;r<n.length;++r){const i=n[r],s=e[r];if(i>=0&&s>=0&&i!==s)throw new Error(`Incompatible shape during merge: ${n} vs. ${e}`);t[r]=i>=0?i:s}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bW{constructor(e,t,r,i,s,a,o){this.name=e,this.dtype=t,this.maxSize=r,this.elementShape=i,this.identicalElementShapes=s,this.dynamicSize=a,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=Bt(0),gi(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const r=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),$r(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),r.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(r.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);r.tensor=t,gi(t),r.written=!0,this.tensors[e]=r}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((r,i)=>this.write(r,t[i]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let i=0;i<this.size();i++)e.push(i)}if(e.length===0)return _i([],[0].concat(this.elementShape));const r=this.readMany(e);return $r(this.elementShape,r[0].shape,"TensorArray shape mismatch: "),zi(r,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return _i([],[0].concat(this.elementShape));const t=[];for(let i=0;i<this.size();i++)t.push(i);const r=this.readMany(t);return $r(this.elementShape,r[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${r[0].shape})`),On(r,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const r=Math.max(...e);if(!this.dynamicSize&&r>=this.maxSize)throw new Error(`Max index must be < array size (${r}  vs. ${this.maxSize})`);this.writeMany(e,Sa(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let r=0;const i=e.map(c=>(r+=c,r));if(r!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const s=r===0?0:t.size/r,a=[];Ct(()=>{t=ge(t,[1,r,s]);for(let c=0;c<e.length;++c){const u=[0,c===0?0:i[c-1],0],h=[1,e[c],s];a[c]=ge(Nt(t,u,h),this.elementShape)}return a});const o=[];for(let c=0;c<e.length;c++)o[c]=c;this.writeMany(o,a)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xa{get id(){return this.idTensor.id}constructor(e,t,r,i=-1){this.tensors=e,this.elementShape=t,this.elementDtype=r,e!=null&&e.forEach(s=>{if(r!==s.dtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${s.dtype}`);$r(t,s.shape,"TensorList shape mismatch: "),gi(s)}),this.idTensor=Bt(0),this.maxNumElements=i,gi(this.idTensor)}copy(){return new xa([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,r=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(r!==-1&&this.tensors.length!==r)throw new Error(`Operation expected a list with ${r} elements but got a list with ${this.tensors.length} elements.`);$r(e,this.elementShape,"TensorList shape mismatch: ");const i=ec(this.elementShape,this.tensors,e);return Ct(()=>{const s=this.tensors.map(a=>ge(a,i));return zi(s,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const r=ec(this.elementShape,this.tensors,e),i=this.tensors.pop();return i.kept=!1,$r(i.shape,e,"TensorList shape mismatch: "),ge(i,r)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if($r(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");gi(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new xa([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let r=0;r<Math.min(this.tensors.length,e);++r)t.tensors[r]=this.tensors[r];return t}getItem(e,t,r){if(r!==this.elementDtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);$r(this.tensors[e].shape,t,"TensorList shape mismatch: ");const i=ec(this.elementShape,this.tensors,t);return ge(this.tensors[e],i)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);$r(this.elementShape,t.shape,"TensorList shape mismatch: "),gi(t),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,r){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);$r(this.elementShape,r,"TensorList shape mismatch: "),e=e.slice(0,this.size());const i=ec(this.elementShape,this.tensors,r);return e.length===0?_i([],[0].concat(i)):Ct(()=>{const s=e.map(a=>ge(this.tensors[a],i));return zi(s,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);$r(this.elementShape,t,"TensorList shape mismatch: ");const r=ec(this.elementShape,this.tensors,t);return this.size()===0?_i([],[0].concat(r)):Ct(()=>{const i=this.tensors.map(s=>ge(s,r));return On(i,0)})}}function SW(n,e,t){const r=n.dtype;if(n.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${n.shape}`);if(n.dtype!==t)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${t}`);const i=n.shape.slice(1);$r(i,e,"TensorList shape mismatch: ");const s=Sa(n);return new xa(s,e,r)}function wW(n,e,t,r){return new xa([],n,e,r)}function EW(n,e,t,r){if(e.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${n.shape[0]}`);const i=Math.max(...e);if(r!=null&&r!==-1&&i>=r)throw new Error(`Max index must be < array size (${i}  vs. ${r})`);const s=new xa([],t,n.dtype,r),a=Sa(n,0);return e.forEach((o,c)=>{s.setItem(o,a[c])}),s}function TW(n,e,t){let r=0;const i=e.map(u=>(r+=u,r));if(r!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${n.shape}`);const s=n.shape.slice(1),a=Nd(s,t),o=r===0?0:n.size/r,c=Ct(()=>{const u=[];n=ge(n,[1,r,o]);for(let h=0;h<e.length;++h){const f=[0,h===0?0:i[h-1],0],p=[1,e[h],o];u[h]=ge(Nt(n,f,p),a)}return n.dispose(),u}),l=new xa([],t,n.dtype,e.length);for(let u=0;u<c.length;u++)l.setItem(u,c[u]);return l}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CW=async(n,e,t)=>{switch(n.op){case"If":case"StatelessIf":{const r=S("thenBranch",n,e,t),i=S("elseBranch",n,e,t),s=S("cond",n,e,t),a=S("args",n,e,t);return(await s.data())[0]?t.functionMap[r].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap):t.functionMap[i].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{const r=S("body",n,e,t),i=S("cond",n,e,t),s=S("args",n,e,t),a=await t.functionMap[i].executeFunctionAsync(s,t.tensorArrayMap,t.tensorListMap),o=s.map(u=>u.id);let c=await a[0].data();a.forEach(u=>{!u.kept&&o.indexOf(u.id)===-1&&u.dispose()});let l=s;for(;c[0];){const u=l;l=await t.functionMap[r].executeFunctionAsync(l,t.tensorArrayMap,t.tensorListMap);const h=l.map(f=>f.id);u.forEach(f=>{!f.kept&&o.indexOf(f.id)===-1&&h.indexOf(f.id)===-1&&f.dispose()});const d=await t.functionMap[i].executeFunctionAsync(l,t.tensorArrayMap,t.tensorListMap);c=await d[0].data(),d.forEach(f=>{!f.kept&&o.indexOf(f.id)===-1&&h.indexOf(f.id)===-1&&f.dispose()})}return l}case"LoopCond":{const r=S("pred",n,e,t);return[Pi(r)]}case"Switch":{const r=S("pred",n,e,t);let i=S("data",n,e,t);return i.kept||(i=Pi(i)),(await r.data())[0]?[void 0,i]:[i,void 0]}case"Merge":{const r=n.inputNames.find(i=>Dn(i,e,t)!==void 0);if(r){const i=Dn(r,e,t);return[Pi(i)]}return}case"Enter":{const r=S("frameName",n,e,t),i=S("tensor",n,e,t);return t.enterFrame(r),[Pi(i)]}case"Exit":{const r=S("tensor",n,e,t);return t.exitFrame(),[Pi(r)]}case"NextIteration":{const r=S("tensor",n,e,t);return t.nextIteration(),[Pi(r)]}case"TensorArrayV3":{const r=S("size",n,e,t),i=S("dtype",n,e,t),s=S("elementShape",n,e,t),a=S("dynamicSize",n,e,t),o=S("clearAfterRead",n,e,t),c=S("identicalElementShapes",n,e,t),l=S("name",n,e,t),u=new bW(l,i,r,s,c,a,o);return t.addTensorArray(u),[u.idTensor,Bt(1)]}case"TensorArrayWriteV3":{const r=S("tensorArrayId",n,e,t),i=S("index",n,e,t),s=S("tensor",n,e,t),a=t.getTensorArray(r.id);return a.write(i,s),[a.idTensor]}case"TensorArrayReadV3":{const r=S("tensorArrayId",n,e,t),i=S("index",n,e,t);return[t.getTensorArray(r.id).read(i)]}case"TensorArrayGatherV3":{const r=S("tensorArrayId",n,e,t),i=S("indices",n,e,t),s=S("dtype",n,e,t);return[t.getTensorArray(r.id).gather(i,s)]}case"TensorArrayScatterV3":{const r=S("tensorArrayId",n,e,t),i=S("indices",n,e,t),s=S("tensor",n,e,t),a=t.getTensorArray(r.id);return a.scatter(i,s),[a.idTensor]}case"TensorArrayConcatV3":{const r=S("tensorArrayId",n,e,t),i=t.getTensorArray(r.id),s=S("dtype",n,e,t);return[i.concat(s)]}case"TensorArraySplitV3":{const r=S("tensorArrayId",n,e,t),i=S("tensor",n,e,t),s=S("lengths",n,e,t),a=t.getTensorArray(r.id);return a.split(s,i),[a.idTensor]}case"TensorArraySizeV3":{const r=S("tensorArrayId",n,e,t),i=t.getTensorArray(r.id);return[Bt(i.size(),"int32")]}case"TensorArrayCloseV3":{const r=S("tensorArrayId",n,e,t),i=t.getTensorArray(r.id);return i.clearAndClose(),[i.idTensor]}case"TensorListSetItem":{const r=S("tensorListId",n,e,t),i=S("index",n,e,t),s=S("tensor",n,e,t),a=t.getTensorList(r.id);return a.setItem(i,s),[a.idTensor]}case"TensorListGetItem":{const r=S("tensorListId",n,e,t),i=S("index",n,e,t),s=S("elementShape",n,e,t),a=S("elementDType",n,e,t);return[t.getTensorList(r.id).getItem(i,s,a)]}case"TensorListScatterV2":case"TensorListScatter":{const r=S("indices",n,e,t),i=S("tensor",n,e,t),s=S("elementShape",n,e,t),a=S("numElements",n,e,t),o=EW(i,r,s,a);return t.addTensorList(o),[o.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=S("elementShape",n,e,t),i=S("elementDType",n,e,t);let s;n.op==="TensorListReserve"?s="numElements":s="maxNumElements";const a=S(s,n,e,t),o=n.op==="TensorListReserve"?-1:a,c=wW(r,i,a,o);return t.addTensorList(c),[c.idTensor]}case"TensorListGather":{const r=S("tensorListId",n,e,t),i=S("indices",n,e,t),s=S("elementShape",n,e,t),a=S("elementDType",n,e,t);return[t.getTensorList(r.id).gather(i,a,s)]}case"TensorListStack":{const r=S("tensorListId",n,e,t),i=S("elementShape",n,e,t),s=S("elementDType",n,e,t),a=S("numElements",n,e,t);return[t.getTensorList(r.id).stack(i,s,a)]}case"TensorListFromTensor":{const r=S("tensor",n,e,t),i=S("elementShape",n,e,t),s=S("elementDType",n,e,t),a=SW(r,i,s);return t.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=S("tensorListId",n,e,t),i=t.getTensorList(r.id),s=S("dtype",n,e,t),a=S("elementShape",n,e,t);return[i.concat(s,a)]}case"TensorListPushBack":{const r=S("tensorListId",n,e,t),i=S("tensor",n,e,t),s=t.getTensorList(r.id);return s.pushBack(i),[s.idTensor]}case"TensorListPopBack":{const r=S("tensorListId",n,e,t),i=S("elementShape",n,e,t),s=S("elementDType",n,e,t);return[t.getTensorList(r.id).popBack(i,s)]}case"TensorListSplit":{const r=S("tensor",n,e,t),i=S("elementShape",n,e,t),s=S("lengths",n,e,t),a=TW(r,s,i);return t.addTensorList(a),[a.idTensor]}case"TensorListLength":{const r=S("tensorListId",n,e,t),i=t.getTensorList(r.id);return[Bt(i.size(),"int32")]}case"TensorListResize":{const r=S("tensorListId",n,e,t),i=S("size",n,e,t),a=t.getTensorList(r.id).resize(i);return t.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cg(n,e,t){const[r,i]=S("fusedOps",n,e,t),s=r==="biasadd",a=!s,o=i==="prelu",c=r==="fusedbatchnorm",l=S("numArgs",n,e,t);if(s){if(o&&l!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&l!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(c)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const u=S("strides",n,e,t),h=Cl(n,e,t),d=S("dataFormat",n,e,t).toUpperCase(),f=S("dilations",n,e,t);let[p,x]=S("args",n,e,t);a&&(x=p,p=void 0);const g=S("leakyreluAlpha",n,e,t);return{stride:u,pad:h,dataFormat:d,dilations:f,biasArg:p,preluArg:x,activationFunc:i,leakyreluAlpha:g}}const AW=(n,e,t,r=Ln)=>{switch(n.op){case"Conv1D":{const i=S("stride",n,e,t),s=S("pad",n,e,t),a=S("dataFormat",n,e,t).toUpperCase(),o=S("dilation",n,e,t);return[r.conv1d(S("x",n,e,t),S("filter",n,e,t),i,s,a,o)]}case"Conv2D":{const i=S("strides",n,e,t),s=Cl(n,e,t),a=S("dataFormat",n,e,t).toUpperCase(),o=S("dilations",n,e,t);return[r.conv2d(S("x",n,e,t),S("filter",n,e,t),[i[1],i[2]],s,a,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:i,pad:s,dataFormat:a,dilations:o,biasArg:c,preluArg:l,activationFunc:u,leakyreluAlpha:h}=cg(n,e,t);return[r.fused.conv2d({x:S("x",n,e,t),filter:S("filter",n,e,t),strides:[i[1],i[2]],pad:s,dataFormat:a,dilations:[o[1],o[2]],bias:c,activation:u,preluActivationWeights:l,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:i,pad:s,dataFormat:a,dilations:o,biasArg:c,preluArg:l,activationFunc:u,leakyreluAlpha:h}=cg(n,e,t);return[r.fused.depthwiseConv2d({x:S("x",n,e,t),filter:S("filter",n,e,t),strides:[i[1],i[2]],pad:s,dataFormat:a,dilations:[o[1],o[2]],bias:c,activation:u,preluActivationWeights:l,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const i=S("outputShape",n,e,t),s=S("strides",n,e,t),a=Cl(n,e,t);return[r.conv2dTranspose(S("x",n,e,t),S("filter",n,e,t),i,[s[1],s[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const i=S("strides",n,e,t),s=Cl(n,e,t),a=S("dilations",n,e,t),o=S("dataFormat",n,e,t).toUpperCase();return[r.depthwiseConv2d(S("input",n,e,t),S("filter",n,e,t),[i[1],i[2]],s,o,[a[1],a[2]])]}case"Conv3D":{const i=S("strides",n,e,t),s=S("pad",n,e,t),a=S("dataFormat",n,e,t).toUpperCase(),o=S("dilations",n,e,t);return[r.conv3d(S("x",n,e,t),S("filter",n,e,t),[i[1],i[2],i[3]],s,a,[o[1],o[2],o[3]])]}case"AvgPool":{const i=S("strides",n,e,t),s=S("pad",n,e,t),a=S("kernelSize",n,e,t);return[r.avgPool(S("x",n,e,t),[a[1],a[2]],[i[1],i[2]],s)]}case"MaxPool":{const i=S("strides",n,e,t),s=S("pad",n,e,t),a=S("kernelSize",n,e,t);return[r.maxPool(S("x",n,e,t),[a[1],a[2]],[i[1],i[2]],s)]}case"MaxPoolWithArgmax":{const i=S("strides",n,e,t),s=S("pad",n,e,t),a=S("kernelSize",n,e,t),o=S("includeBatchInIndex",n,e,t),{result:c,indexes:l}=r.maxPoolWithArgmax(S("x",n,e,t),[a[1],a[2]],[i[1],i[2]],s,o);return[c,l]}case"AvgPool3D":{const i=S("strides",n,e,t),s=S("pad",n,e,t),a=S("kernelSize",n,e,t);return[r.avgPool3d(S("x",n,e,t),[a[1],a[2],a[3]],[i[1],i[2],i[3]],s)]}case"MaxPool3D":{const i=S("strides",n,e,t),s=S("pad",n,e,t),a=S("kernelSize",n,e,t);return[r.maxPool3d(S("x",n,e,t),[a[1],a[2],a[3]],[i[1],i[2],i[3]],s)]}case"Dilation2D":{const i=S("strides",n,e,t),s=S("pad",n,e,t),a=S("dilations",n,e,t),o=i[1],c=i[2],l=a[1],u=a[2];return[r.dilation2d(S("x",n,e,t),S("filter",n,e,t),[o,c],s,[l,u],"NHWC")]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RW=(n,e,t,r=Ln)=>{switch(n.op){case"Fill":{const i=S("shape",n,e,t),s=S("dtype",n,e,t),a=S("value",n,e,t);return[r.fill(i,a,s)]}case"LinSpace":{const i=S("start",n,e,t),s=S("stop",n,e,t),a=S("num",n,e,t);return[r.linspace(i,s,a)]}case"Multinomial":{const i=S("logits",n,e,t),s=S("numSamples",n,e,t),a=S("seed",n,e,t);return[r.multinomial(i,s,a)]}case"OneHot":{const i=S("indices",n,e,t),s=S("depth",n,e,t),a=S("onValue",n,e,t),o=S("offValue",n,e,t),c=S("dtype",n,e,t);return[r.oneHot(i,s,a,o,c)]}case"Ones":return[r.ones(S("shape",n,e,t),S("dtype",n,e,t))];case"OnesLike":return[r.onesLike(S("x",n,e,t))];case"RandomStandardNormal":return[r.randomStandardNormal(S("shape",n,e,t),S("dtype",n,e,t),S("seed",n,e,t))];case"RandomUniform":return[r.randomUniform(S("shape",n,e,t),S("minval",n,e,t),S("maxval",n,e,t),S("dtype",n,e,t))];case"RandomUniformInt":return[r.randomUniformInt(S("shape",n,e,t),S("minval",n,e,t),S("maxval",n,e,t),S("seed",n,e,t))];case"Range":{const i=S("start",n,e,t),s=S("stop",n,e,t),a=S("step",n,e,t);return[r.range(i,s,a,S("dtype",n,e,t))]}case"TruncatedNormal":{const i=S("shape",n,e,t),s=S("mean",n,e,t),a=S("stdDev",n,e,t),o=S("seed",n,e,t);return[r.truncatedNormal(i,s,a,S("dtype",n,e,t),o)]}case"Zeros":return[r.zeros(S("shape",n,e,t),S("dtype",n,e,t))];case"ZerosLike":return[r.zerosLike(S("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sh(n,e,t){const r=S("boxes",n,e,t),i=S("scores",n,e,t),s=S("maxOutputSize",n,e,t),a=S("iouThreshold",n,e,t),o=S("scoreThreshold",n,e,t),c=S("softNmsSigma",n,e,t);return{boxes:r,scores:i,maxOutputSize:s,iouThreshold:a,scoreThreshold:o,softNmsSigma:c}}const NW=async(n,e,t,r,i=Ln)=>{switch(n.op){case"NonMaxSuppressionV5":{const{boxes:s,scores:a,maxOutputSize:o,iouThreshold:c,scoreThreshold:l,softNmsSigma:u}=Sh(n,e,t),h=await i.image.nonMaxSuppressionWithScoreAsync(s,a,o,c,l,u);return[h.selectedIndices,h.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:s,scores:a,maxOutputSize:o,iouThreshold:c,scoreThreshold:l}=Sh(n,e,t),u=S("padToMaxOutputSize",n,e,t),h=await i.image.nonMaxSuppressionPaddedAsync(s,a,o,c,l,u);return[h.selectedIndices,h.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:s,scores:a,maxOutputSize:o,iouThreshold:c,scoreThreshold:l}=Sh(n,e,t);return[await i.image.nonMaxSuppressionAsync(s,a,o,c,l)]}case"Where":{const s=i.cast(S("condition",n,e,t),"bool"),a=[await i.whereAsync(s)];return s.dispose(),a}case"ListDiff":return i.setdiff1dAsync(S("x",n,e,t),S("y",n,e,t));default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MW=(n,e,t,r=Ln)=>{switch(n.op){case"LowerBound":{const i=S("sortedSequence",n,e,t),s=S("values",n,e,t);return[r.lowerBound(i,s)]}case"TopKV2":{const i=S("x",n,e,t),s=S("k",n,e,t),a=S("sorted",n,e,t),o=r.topk(i,s,a);return[o.values,o.indices]}case"UpperBound":{const i=S("sortedSequence",n,e,t),s=S("values",n,e,t);return[r.upperBound(i,s)]}case"Unique":{const i=S("x",n,e,t),s=r.unique(i);return[s.values,s.indices]}case"UniqueV2":{const i=S("x",n,e,t),s=S("axis",n,e,t),a=r.unique(i,s);return[a.values,a.indices]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IW=(n,e,t,r=Ln)=>{switch(n.op){case"Const":return e[n.name];case"PlaceholderWithDefault":const i=S("default",n,e,t);return[Dn(n.name,e,t)||i];case"Placeholder":return[Dn(n.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const u=S("x",n,e,t);return[Pi(u)]}case"IdentityN":return S("x",n,e,t).map(u=>Pi(u));case"Snapshot":const s=S("x",n,e,t);return[Pi(s)];case"Shape":return[r.tensor1d(S("x",n,e,t).shape,"int32")];case"ShapeN":return S("x",n,e,t).map(u=>r.tensor1d(u.shape));case"Size":return[r.scalar(S("x",n,e,t).size,"int32")];case"Rank":return[r.scalar(S("x",n,e,t).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const a=S("x",n,e,t),o=S("data",n,e,t),c=S("message",n,e,t),l=S("summarize",n,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(c);for(let u=0;u<o.length;u++)console.log(Array.prototype.slice.call(o[u].dataSync()).slice(0,l));return[a];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DW{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Bt(0),this.tensorMap=new Map,gi(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Bt(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const r=await e.data();return this.tensorMap.forEach(i=>i.dispose()),this.tensorMap.clear(),Ct(()=>{const i=Sa(t),s=r.length,a=i.length;k(s===a,()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${a} elements.`);for(let o=0;o<s;o++){const c=r[o],l=i[o];gi(l),this.tensorMap.set(c,l)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const r=await e.data();return Ct(()=>{const i=[];for(let s=0;s<r.length;s++){const a=r[s],o=this.findWithDefault(a,t);i.push(o)}return zi(i)})}findWithDefault(e,t){const r=this.tensorMap.get(e);return r??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PW=async(n,e,t,r)=>{switch(n.op){case"HashTable":case"HashTableV2":{const i=r.getHashTableHandleByName(n.name);if(i!=null)return[i];{const s=S("keyDType",n,e,t),a=S("valueDType",n,e,t),o=new DW(s,a);return r.addHashTable(n.name,o),[o.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const i=S("tableHandle",n,e,t,r),s=S("keys",n,e,t),a=S("values",n,e,t);return[await r.getHashTableById(i.id).import(s,a)]}case"LookupTableFind":case"LookupTableFindV2":{const i=S("tableHandle",n,e,t,r),s=S("keys",n,e,t),a=S("defaultValue",n,e,t);return[await r.getHashTableById(i.id).find(s,a)]}case"LookupTableSize":case"LookupTableSizeV2":{const i=S("tableHandle",n,e,t,r);return[r.getHashTableById(i.id).tensorSize()]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OW=(n,e,t,r=Ln)=>{switch(n.op){case"ResizeBilinear":{const i=S("images",n,e,t),s=S("size",n,e,t),a=S("alignCorners",n,e,t),o=S("halfPixelCenters",n,e,t);return[r.image.resizeBilinear(i,[s[0],s[1]],a,o)]}case"ResizeNearestNeighbor":{const i=S("images",n,e,t),s=S("size",n,e,t),a=S("alignCorners",n,e,t),o=S("halfPixelCenters",n,e,t);return[r.image.resizeNearestNeighbor(i,[s[0],s[1]],a,o)]}case"CropAndResize":{const i=S("image",n,e,t),s=S("boxes",n,e,t),a=S("boxInd",n,e,t),o=S("cropSize",n,e,t),c=S("method",n,e,t),l=S("extrapolationValue",n,e,t);return[r.image.cropAndResize(i,s,a,o,c,l)]}case"ImageProjectiveTransformV3":{const i=S("images",n,e,t),s=S("transforms",n,e,t),a=S("outputShape",n,e,t),o=S("fillValue",n,e,t),c=S("interpolation",n,e,t),l=S("fillMode",n,e,t);return[r.image.transform(i,s,c.toLowerCase(),l.toLowerCase(),o,a)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $W=(n,e,t,r=Ln)=>{switch(n.op){case"Equal":return[r.equal(S("a",n,e,t),S("b",n,e,t))];case"NotEqual":return[r.notEqual(S("a",n,e,t),S("b",n,e,t))];case"Greater":return[r.greater(S("a",n,e,t),S("b",n,e,t))];case"GreaterEqual":return[r.greaterEqual(S("a",n,e,t),S("b",n,e,t))];case"Less":return[r.less(S("a",n,e,t),S("b",n,e,t))];case"LessEqual":return[r.lessEqual(S("a",n,e,t),S("b",n,e,t))];case"LogicalAnd":return[r.logicalAnd(S("a",n,e,t),S("b",n,e,t))];case"LogicalNot":return[r.logicalNot(S("a",n,e,t))];case"LogicalOr":return[r.logicalOr(S("a",n,e,t),S("b",n,e,t))];case"Select":case"SelectV2":return[r.where(S("condition",n,e,t),S("a",n,e,t),S("b",n,e,t))];case"BitwiseAnd":return[r.bitwiseAnd(S("a",n,e,t),S("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LW=(n,e,t,r=Ln)=>{switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(S("a",n,e,t),S("b",n,e,t),S("transposeA",n,e,t),S("transposeB",n,e,t))];case"Einsum":return[r.einsum(S("equation",n,e,t),...S("tensors",n,e,t))];case"Transpose":return[r.transpose(S("x",n,e,t),S("perm",n,e,t))];case"_FusedMatMul":const[i,s]=S("fusedOps",n,e,t),a=i==="biasadd",o=s==="prelu",c=S("numArgs",n,e,t),l=S("leakyreluAlpha",n,e,t);if(a){if(o&&c!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&c!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,h]=S("args",n,e,t);return[r.fused.matMul({a:S("a",n,e,t),b:S("b",n,e,t),transposeA:S("transposeA",n,e,t),transposeB:S("transposeB",n,e,t),bias:u,activation:s,preluActivationWeights:h,leakyreluAlpha:l})];case"MatrixBandPart":return[r.linalg.bandPart(S("a",n,e,t),S("numLower",n,e,t),S("numUpper",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kW=(n,e,t,r=Ln)=>{switch(n.op){case"EuclideanNorm":return[r.euclideanNorm(S("x",n,e,t),S("axis",n,e,t),S("keepDims",n,e,t))];case"FusedBatchNorm":case"FusedBatchNormV2":return[r.batchNorm(S("x",n,e,t),S("mean",n,e,t),S("variance",n,e,t),S("offset",n,e,t),S("scale",n,e,t),S("epsilon",n,e,t))];case"FusedBatchNormV3":return[r.batchNorm(S("x",n,e,t),S("mean",n,e,t),S("variance",n,e,t),S("offset",n,e,t),S("scale",n,e,t),S("epsilon",n,e,t))];case"LRN":return[r.localResponseNormalization(S("x",n,e,t),S("radius",n,e,t),S("bias",n,e,t),S("alpha",n,e,t),S("beta",n,e,t))];case"Softmax":return[r.softmax(S("x",n,e,t))];case"LogSoftmax":return[r.logSoftmax(S("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FW=(n,e,t,r=Ln)=>{switch(n.op){case"RaggedGather":{const{outputNestedSplits:i,outputDenseValues:s}=r.raggedGather(S("paramsNestedSplits",n,e,t),S("paramsDenseValues",n,e,t),S("indices",n,e,t),S("outputRaggedRank",n,e,t));return i.concat(s)}case"RaggedRange":{const{rtNestedSplits:i,rtDenseValues:s}=r.raggedRange(S("starts",n,e,t),S("limits",n,e,t),S("splits",n,e,t));return[i,s]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(S("shape",n,e,t),S("values",n,e,t),S("defaultValue",n,e,t),S("rowPartitionTensors",n,e,t),S("rowPartitionTypes",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UW=(n,e,t,r=Ln)=>{switch(n.op){case"Max":{const o=S("axis",n,e,t),c=S("keepDims",n,e,t);return[r.max(S("x",n,e,t),o,c)]}case"Mean":{const o=S("axis",n,e,t),c=S("keepDims",n,e,t);return[r.mean(S("x",n,e,t),o,c)]}case"Min":{const o=S("axis",n,e,t),c=S("keepDims",n,e,t);return[r.min(S("x",n,e,t),o,c)]}case"Sum":{const o=S("axis",n,e,t),c=S("keepDims",n,e,t);return[r.sum(S("x",n,e,t),o,c)]}case"All":{const o=S("axis",n,e,t),c=S("keepDims",n,e,t);return[r.all(S("x",n,e,t),o,c)]}case"Any":{const o=S("axis",n,e,t),c=S("keepDims",n,e,t);return[r.any(S("x",n,e,t),o,c)]}case"ArgMax":{const o=S("axis",n,e,t);return[r.argMax(S("x",n,e,t),o)]}case"ArgMin":{const o=S("axis",n,e,t);return[r.argMin(S("x",n,e,t),o)]}case"Prod":{const o=S("axis",n,e,t),c=S("keepDims",n,e,t);return[r.prod(S("x",n,e,t),o,c)]}case"Cumprod":{const o=S("axis",n,e,t),c=S("exclusive",n,e,t),l=S("reverse",n,e,t);return[r.cumprod(S("x",n,e,t),o,c,l)]}case"Cumsum":{const o=S("axis",n,e,t),c=S("exclusive",n,e,t),l=S("reverse",n,e,t);return[r.cumsum(S("x",n,e,t),o,c,l)]}case"Bincount":const i=S("x",n,e,t),s=S("weights",n,e,t),a=S("size",n,e,t);return[r.bincount(i,s,a)];case"DenseBincount":{const o=S("x",n,e,t),c=S("weights",n,e,t),l=S("size",n,e,t),u=S("binaryOutput",n,e,t);return[r.denseBincount(o,c,l,u)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BW=(n,e,t,r=Ln)=>{switch(n.op){case"ConcatV2":case"Concat":{const i=S("n",n,e,t),s=S("axis",n,e,t);let a=S("tensors",n,e,t);return a=a.slice(0,i),[r.concat(a,s)]}case"Gather":{const i=S("x",n,e,t),s=S("indices",n,e,t);return[r.gather(i,r.cast(s,"int32"),0)]}case"GatherV2":{const i=S("axis",n,e,t),s=S("batchDims",n,e,t),a=S("x",n,e,t),o=S("indices",n,e,t);return[r.gather(a,r.cast(o,"int32"),i,s)]}case"Reverse":{const i=S("dims",n,e,t),s=[];for(let o=0;o<i.length;o++)i[o]&&s.push(o);const a=S("x",n,e,t);return[r.reverse(a,s)]}case"ReverseV2":{const i=S("axis",n,e,t),s=S("x",n,e,t);return[r.reverse(s,i)]}case"Slice":{const i=S("begin",n,e,t),s=S("size",n,e,t);return[r.slice(S("x",n,e,t),i,s)]}case"StridedSlice":{const i=S("begin",n,e,t),s=S("end",n,e,t),a=S("strides",n,e,t),o=S("beginMask",n,e,t),c=S("endMask",n,e,t),l=S("ellipsisMask",n,e,t),u=S("newAxisMask",n,e,t),h=S("shrinkAxisMask",n,e,t),d=S("x",n,e,t);return[r.stridedSlice(d,i,s,a,o,c,l,u,h)]}case"Pack":return Ct(()=>{const i=S("axis",n,e,t),s=S("tensors",n,e,t),a=s[0].shape,o=r.squeeze(s[0]).shape,c=s.map(l=>{const u=fn(l.shape,a);if(!u&&!fn(r.squeeze(l).shape,o))throw new Error("the input tensors shape does not match");return u?l:r.reshape(l,a)});return[r.stack(c,i)]});case"Unpack":{const i=S("axis",n,e,t),s=S("tensor",n,e,t);return r.unstack(s,i)}case"Tile":{const i=S("reps",n,e,t);return[r.tile(S("x",n,e,t),i)]}case"Split":case"SplitV":{const i=S("axis",n,e,t),s=S("numOrSizeSplits",n,e,t),a=S("x",n,e,t);return r.split(a,s,i)}case"ScatterNd":{const i=S("indices",n,e,t),s=S("values",n,e,t),a=S("shape",n,e,t);return[r.scatterND(i,s,a)]}case"GatherNd":{const i=S("x",n,e,t),s=S("indices",n,e,t);return[r.gatherND(i,s)]}case"SparseToDense":{const i=S("sparseIndices",n,e,t),s=S("outputShape",n,e,t),a=S("sparseValues",n,e,t),o=S("defaultValue",n,e,t);return[r.sparseToDense(i,a,s,a.dtype===o.dtype?o:r.cast(o,a.dtype))]}case"TensorScatterUpdate":{const i=S("indices",n,e,t),s=S("values",n,e,t),a=S("tensor",n,e,t);return[r.tensorScatterUpdate(a,i,s)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VW=(n,e,t,r=Ln)=>{switch(n.op){case"SparseFillEmptyRows":{const{outputIndices:i,outputValues:s,emptyRowIndicator:a,reverseIndexMap:o}=r.sparse.sparseFillEmptyRows(S("indices",n,e,t),S("values",n,e,t),S("denseShape",n,e,t),S("defaultValue",n,e,t));return[i,s,a,o]}case"SparseReshape":{const{outputIndices:i,outputShape:s}=r.sparse.sparseReshape(S("inputIndices",n,e,t),S("inputShape",n,e,t),S("newShape",n,e,t));return[i,s]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(S("data",n,e,t),S("indices",n,e,t),S("segmentIds",n,e,t))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(S("data",n,e,t),S("indices",n,e,t),S("segmentIds",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zW=(n,e,t,r=Ln)=>{switch(n.op){case"FFT":return[r.fft(S("x",n,e,t))];case"IFFT":return[r.ifft(S("x",n,e,t))];case"RFFT":return[r.rfft(S("x",n,e,t))];case"IRFFT":return[r.irfft(S("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GW=(n,e,t,r=Ln)=>{switch(n.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(S("input",n,e,t),S("pattern",n,e,t),S("rewrite",n,e,t),S("replaceGlobal",n,e,t))];case"StringNGrams":{const{nGrams:i,nGramsSplits:s}=r.string.stringNGrams(S("data",n,e,t),S("dataSplits",n,e,t),S("separator",n,e,t),S("nGramWidths",n,e,t),S("leftPad",n,e,t),S("rightPad",n,e,t),S("padWidth",n,e,t),S("preserveShortSequences",n,e,t));return[i,s]}case"StringSplit":{const{indices:i,values:s,shape:a}=r.string.stringSplit(S("input",n,e,t),S("delimiter",n,e,t),S("skipEmpty",n,e,t));return[i,s,a]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(S("input",n,e,t),S("numBuckets",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WW=(n,e,t,r=Ln)=>{switch(n.op){case"Cast":return[r.cast(S("x",n,e,t),S("dtype",n,e,t))];case"ExpandDims":{const i=S("axis",n,e,t);return[r.expandDims(S("x",n,e,t),i)]}case"Squeeze":{const i=S("axis",n,e,t);return[r.squeeze(S("x",n,e,t),i)]}case"Reshape":return[r.reshape(S("x",n,e,t),S("shape",n,e,t))];case"EnsureShape":return[r.ensureShape(S("x",n,e,t),S("shape",n,e,t))];case"MirrorPad":return[r.mirrorPad(S("x",n,e,t),S("padding",n,e,t),S("mode",n,e,t))];case"PadV2":case"Pad":return[r.pad(S("x",n,e,t),S("padding",n,e,t),S("constantValue",n,e,t))];case"SpaceToBatchND":{const i=S("blockShape",n,e,t),s=S("paddings",n,e,t);return[r.spaceToBatchND(S("x",n,e,t),i,s)]}case"BatchToSpaceND":{const i=S("blockShape",n,e,t),s=S("crops",n,e,t);return[r.batchToSpaceND(S("x",n,e,t),i,s)]}case"DepthToSpace":{const i=S("blockSize",n,e,t),s=S("dataFormat",n,e,t).toUpperCase();return[r.depthToSpace(S("x",n,e,t),i,s)]}case"BroadcastTo":return[r.broadcastTo(S("x",n,e,t),S("shape",n,e,t))];case"BroadcastArgs":return[r.broadcastArgs(S("s0",n,e,t),S("s1",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lg(n,e,t,r,i=Ct){const s=((a,o,c)=>{switch(a.category){case"arithmetic":return i(()=>vW(a,o,c));case"basic_math":return i(()=>_W(a,o,c));case"control":return CW(a,o,c);case"convolution":return i(()=>AW(a,o,c));case"creation":return i(()=>RW(a,o,c));case"dynamic":return NW(a,o,c);case"evaluation":return i(()=>MW(a,o,c));case"image":return i(()=>OW(a,o,c));case"graph":return i(()=>IW(a,o,c));case"logical":return i(()=>$W(a,o,c));case"matrices":return i(()=>LW(a,o,c));case"normalization":return i(()=>kW(a,o,c));case"ragged":return i(()=>FW(a,o,c));case"reduction":return i(()=>UW(a,o,c));case"slice_join":return i(()=>BW(a,o,c));case"sparse":return i(()=>VW(a,o,c));case"spectral":return i(()=>zW(a,o,c));case"string":return i(()=>GW(a,o,c));case"transformation":return i(()=>WW(a,o,c));case"hash_table":return PW(a,o,c,r);case"custom":const l=g3(a.op);if(l&&l.customExecutor)return l.customExecutor(new yW(a,o,c));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,e,t);return aa(s)?s.then(a=>[].concat(a)):[].concat(s)}class ug{constructor(e={},t={},r={},i={},s){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=r,this.functionMap=i,this.parseNodeNameCache=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const r=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(r))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hg(n,e,t,r){const i=new Set,s=[];let a=null,o=null;const c=new Set,l=new Set(Object.keys(n).map(d=>hr(d)[0]));r=r||[];const u=new Set(r.map(d=>hr(d.name)[0])),h=[...e];for(;h.length>0;){const d=h.pop();if((Ks(d)||JW(d)||QW(d))&&a==null&&(a=d,o=a.children.map(f=>f.name).filter(f=>i.has(f))),i.add(d.name),t[d.name]==null&&!l.has(d.name)&&!u.has(d.name)){if(d.inputs.length===0){s.push(d.name);continue}d.inputs.forEach(f=>{c.has(f.name)||(c.add(f.name),h.push(f))})}}return{inputs:n,outputs:e,usedNodes:i,missingInputs:s,dynamicNode:a,syncInputs:o}}function HW(n,e){const{usedNodes:t,inputs:r}=e,i=Object.keys(r).map(g=>hr(g)[0]).map(g=>n.nodes[g]),s=n.initNodes||[],a=g=>t.has(typeof g=="string"?g:g.name);function o(g){return[...new Map(g.map(m=>[m.name,m])).values()]}const c=o([...i,...n.weights,...s]).filter(a),l=o([...c,...Object.values(n.nodes)]).filter(a),u=new Map(l.map(g=>[g.name,g])),h={};for(const g of l){h[g.name]=h[g.name]||0;for(const m of g.children)a(m)||(h[m.name]=Number.POSITIVE_INFINITY),h[m.name]=(h[m.name]||0)+1}const d=Object.entries(h).filter(([,g])=>g===0).map(([g])=>g),f=[...d];for(;d.length>0;){const g=d.pop(),m=u.get(g);for(const _ of m.children.filter(a))--h[_.name]===0&&(f.push(_.name),d.push(_.name))}const p=f.map(g=>u.get(g)),x=XW(p,c);return jW(x,c),x}function XW(n,e){const t=new Map(n.map(a=>[a.name,a])),r=e.map(a=>a.name),i=new Set(r);for(;r.length>0;){const a=r.pop(),o=t.get(a);for(const c of o.children)!t.has(c.name)||i.has(c.name)||(i.add(c.name),r.push(c.name))}return n.filter(a=>i.has(a.name))}class _l extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}function jW(n,e){const t=new Map(n.map((o,c)=>[o.name,c])),r=new Set(e.map(o=>o.name)),i=o=>r.has(typeof o=="string"?o:o.name),s=new Set(n.map(o=>o.name)),a=o=>s.has(typeof o=="string"?o:o.name);for(const o of n){for(const c of o.children.filter(a)){if(!t.has(c.name))throw new _l(`Child ${c.name} of node ${o.name} is unreachable.`);if(t.get(o.name)>t.get(c.name))throw new _l(`Node ${o.name} is scheduled to run after its child ${c.name}.`)}if(!i(o))for(const c of o.inputs){if(!t.has(c.name))throw new _l(`Input ${c.name} of node ${o.name} is unreachable.`);if(t.get(c.name)>t.get(o.name))throw new _l(`Node ${o.name} is scheduled to run before its input ${c.name}.`)}}}function qW(n){const e=new Map(n.map((o,c)=>[o.name,c])),t=Number.MAX_SAFE_INTEGER,r=n.map((o,c)=>Ks(o)?t:c),i=o=>{const c=r[e.get(o.name)];return c??-1},s=n.map((o,c)=>o.children.map(i).reduce((l,u)=>Math.max(l,u),r[c])),a=new Map;for(let o=0;o<n.length;++o){const c=s[o];if(c===t)continue;const l=n[o],u=n[c];a.has(u.name)||a.set(u.name,[]),a.get(u.name).push(l)}return a}const KW=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),YW=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),ZW=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function Ks(n){return KW.has(n.op)}function JW(n){return YW.has(n.op)}function QW(n){return ZW.has(n.op)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ql{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(r=>e[r].map(i=>i.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(r=>{this._functionExecutorMap[r]=new Ql(e.functions[r],this)})}getCompilationKey(e,t){const r=e.map(s=>s.name).sort(),i=t.map(s=>s.name).sort();return r.join(this.SEPARATOR)+"--"+i.join(this.SEPARATOR)}compile(e,t){const r=hg(e,t,this.weightMap,this._initNodes),{missingInputs:i,dynamicNode:s,syncInputs:a}=r;if(s!=null)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(i.length>0){const l=t.map(h=>h.name),u=Object.keys(e);throw new Error(`Cannot compute the outputs [${l}] from the provided inputs [${u}]. Missing the following inputs: [${i}]`)}const o=HW(this.graph,r),c=qW(o);return{orderedNodes:o,nodeLiveUntilMap:c}}cloneAndKeepTensor(e){if(e==null)return null;const t=e.clone();return gi(t),t}cloneTensorList(e){return e?e.map(r=>this.cloneAndKeepTensor(r)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([t,r])=>[t,this.cloneTensorList(r)]))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const r=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const i=r.map(d=>this.graph.nodes[hr(d)[0]]),s=t.map(d=>hr(d)[0]),a=new Set(s);let o=s.map(d=>this.graph.nodes[d]);o.length===0&&(o=this._outputs);const c=this.getCompilationKey(i,o);let l=this.compiledMap.get(c);l==null&&(l=this.compile(e,o),this.compiledMap.set(c,l));try{this.keepIntermediateTensors=te().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const u={},h={};return Ct(()=>{const d=new ug(this.weightMap,u,h,this.functionExecutorMap,this.parseNodeNameCache),f=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(m=>{const[_,b]=hr(m,d),w=[];w[b]=e[m],f[_]=w,this.keepIntermediateTensors&&(this.clonedTensorsMap[_]=this.cloneTensorList(w))});const p=this.getFrozenTensorIds(f),{orderedNodes:x,nodeLiveUntilMap:g}=l;for(const m of x){if(f[m.name])continue;const _=lg(m,f,d,this._resourceManager);if(aa(_))throw new Error(`The execution of the op '${m.op}' returned a promise. Please use model.executeAsync() instead.`);f[m.name]=_,this.keepIntermediateTensors&&(this.clonedTensorsMap[m.name]=this.cloneTensorList(_)),this.checkTensorForDisposalWithNodeLiveUntilInfo(m,f,d,p,a,g.get(m.name))}return this.parent==null&&d.dispose(p),t.map(m=>Dn(m,f,d))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(r=>e[r]).map(r=>r.map(i=>i.id)));return new Set(t)}checkTensorForDisposal(e,t,r,i,s,a,o){if(!(Ks(t)||a.has(e))){for(const c of r[e])c!=null&&(o[c.id]=(o[c.id]||0)+t.children.length);for(const c of t.inputs){if(Ks(c))continue;const l=ig(c.name,r,i);if(l!=null)for(const u of l){if(!u||u.kept||s.has(u.id))continue;const h=o[u.id];h===1?(u.dispose(),delete o[u.id]):h!=null&&o[u.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,r,i,s,a){function o(c){return Ks(c)||s.has(c.name)}if(!(Ks(e)||a==null))for(const c of a){if(o(c))continue;const l=ig(c.name,t,r);for(const u of l)!u||u.kept||i.has(u.id)||u.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,r=!1,i={},s={}){this.disposeIntermediateTensors(),r||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=te().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const a=new ug(this.weightMap,i,s,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const o=await this.executeWithControlFlow(e,a,t,r),c=t.map(d=>Dn(d,o,a)),l=c.map(d=>d.id),u=Object.keys(e).map(d=>e[d].id),h=new Set([...l,...u,...this.weightIds]);return Object.values(o).forEach(d=>{d.forEach(f=>{f&&!f.isDisposed&&!h.has(f.id)&&f.dispose()})}),this.parent==null&&a.dispose(h),c}async executeFunctionAsync(e,t,r){const i=e.reduce((s,a,o)=>(s[this.inputs[o].name]=a,s),{});return this._executeAsync(i,this.outputNodes,!0,t,r)}async executeWithControlFlow(e,t,r,i){const s=Object.keys(e),a=s.map(w=>this.graph.nodes[hr(w)[0]]),o=r.map(w=>hr(w)[0]),c=new Set(o);let l=o.map(w=>this.graph.nodes[w]);l.length===0&&(l=this._outputs);const{usedNodes:u,missingInputs:h,dynamicNode:d,syncInputs:f}=hg(e,l,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map(w=>({node:w,contexts:t.currentContext})),x=Object.assign({},this.weightMap);Object.keys(e).forEach(w=>{const[I,M]=hr(w),D=[];D[M]=e[w],x[I]=D});const g={},m=this.getFrozenTensorIds(x),_={};for(;p.length>0;){const w=this.processStack(a,p,t,x,_,m,c,g,u);await Promise.all(w)}d==null&&!i&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=l.filter(w=>!Ks(w)&&!Dn(w.name,x,t)).map(w=>w.name);if(b.length>0){let w="";throw d!=null&&(w=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${f}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${s}]. Consider providing the following inputs: [${h}]. ${w}`)}return x}processStack(e,t,r,i,s,a,o,c,l){const u=[];for(;t.length>0;){const h=t.pop();r.currentContext=h.contexts;let d="";if(h.node.op==="Enter"&&S("isConstant",h.node,i,r)&&([d]=Di(h.node.name,r)),i[h.node.name]==null){const f=lg(h.node,i,r,this._resourceManager);d||([d]=Di(h.node.name,r));const p=r.currentContext;aa(f)?u.push(f.then(x=>(i[d]=x,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(x)),r.currentContext=p,this.checkTensorForDisposal(d,h.node,i,r,a,o,c),this.processChildNodes(h.node,t,r,i,s,l),x))):(i[d]=f,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(f)),this.checkTensorForDisposal(d,h.node,i,r,a,o,c),this.processChildNodes(h.node,t,r,i,s,l))}else this.processChildNodes(h.node,t,r,i,s,l)}return u}processChildNodes(e,t,r,i,s,a){e.children.forEach(o=>{const[c]=Di(o.name,r);s[c]||!a.has(o.name)||(o.op==="Merge"?o.inputNames.some(l=>!!Dn(l,i,r))&&(s[c]=!0,t.push({contexts:r.currentContext,node:o})):o.inputNames.every(l=>!!Dn(l,i,r))&&(s[c]=!0,t.push({contexts:r.currentContext,node:o})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const r=e[t],[i]=hr(t),s=this.graph.nodes[i];if(s.attrParams.shape&&s.attrParams.shape.value){const a=s.attrParams.shape.value,o=a.length===r.shape.length&&r.shape.every((c,l)=>a[l]===-1||a[l]===c);k(o,()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${a}], but was [${r.shape}]`)}s.attrParams.dtype&&s.attrParams.dtype.value&&k(r.dtype===s.attrParams.dtype.value,()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${r.dtype}`)})}mapInputs(e){var t,r;const i={};for(const s in e){const a=(r=(t=this._signature)===null||t===void 0?void 0:t.inputs)===null||r===void 0?void 0:r[s];a!=null?i[a.name]=e[s]:i[s]=e[s]}return i}checkInputs(e){const t=Object.keys(e).filter(r=>{const[i]=hr(r);return this.graph.nodes[i]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>{var r,i;const s=(i=(r=this._signature)===null||r===void 0?void 0:r.outputs)===null||i===void 0?void 0:i[t];return s!=null?s.name:t},{})}checkOutputs(e){e.forEach(t=>{const[r]=hr(t);if(!this.graph.nodes[r])throw new Error(`The output '${t}' is not found in the graph`)})}}class eH{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tH="?tfjs-format=file",nH="model.json";class rH{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},r=Ey){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=r,t==null&&(this.loadOptions={}),this.resourceManager=new eH}findIOHandler(){const e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return aa(e)?e.then(t=>t.getWeightStream==null?this.loadSync(t):this.loadStreaming(t)):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(e.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");const t=await xx(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const r=this.artifacts.modelTopology;let i=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const s=this.artifacts.userDefinedMetadata;s.signature!=null&&(i=s.signature),s.structuredOutputKeys!=null&&(this.structuredOutputKeys=s.structuredOutputKeys)}if(this.signature=i,this.version=`${r.versions.producer}.${r.versions.minConsumer}`,this.executor=new Ql(sg.Instance.transformGraph(r,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){const s=sg.Instance.transformGraph(e.modelInitializer);this.initializer=new Ql(s),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if(typeof e=="string"){const r=this.io.getSaveHandlers(e);if(r.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(r.length>1)throw new Error(`Found more than one (${r.length}) save handlers for URL '${e}'`);e=r[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof mn?[e]:e,r={};return t.forEach((i,s)=>r[this.structuredOutputKeys[s]]=i),r}return e}predict(e,t){const r=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(r)}async predictAsync(e,t){const r=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(r)}normalizeInputs(e){var t;if(!(e instanceof mn)&&!Array.isArray(e)){const s=(t=this.signature)===null||t===void 0?void 0:t.inputs;if(s!=null)for(const a in s){const o=s[a];o.resourceId!=null&&(e[a]=this.resourceIdToCapturedInput[o.resourceId])}return e}e=Array.isArray(e)?e:[e];const r=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+r!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-r} non-resource placeholders, while there are ${e.length} input tensors provided.`);let i=0;return this.inputNodes.reduce((s,a)=>{var o,c,l;const u=(l=(c=(o=this.signature)===null||o===void 0?void 0:o.inputs)===null||c===void 0?void 0:c[a])===null||l===void 0?void 0:l.resourceId;return u!=null?s[a]=this.resourceIdToCapturedInput[u]:s[a]=e[i++],s},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,r=Object.keys(t);for(let i=0;i<r.length;i++){const s=r[i],a=t[s];this.resourceIdToCapturedInput[a.resourceId]=e[i]}}}execute(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const r=this.executor.execute(e,t);return r.length>1?r:r[0]}async executeAsync(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const r=await this.executor.executeAsync(e,t);return r.length>1?r:r[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,r)=>(t[r]=[e[r]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&dn(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function v3(n,e={},t=Ey){if(n==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof n=="string"&&(n=iH(n));const r=new rH(n,e,t);return await r.load(),r}function iH(n){return n.endsWith("/")||(n=n+"/"),`${n}${nH}${tH}`}/**
    * @license
    * Copyright 2023 Google LLC. All Rights Reserved.
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    * http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    * =============================================================================
    */var si=function(){return si=Object.assign||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var i in e=arguments[t])Object.prototype.hasOwnProperty.call(e,i)&&(n[i]=e[i]);return n},si.apply(this,arguments)};function Li(n,e,t,r){return new(t||(t=Promise))(function(i,s){function a(l){try{c(r.next(l))}catch(u){s(u)}}function o(l){try{c(r.throw(l))}catch(u){s(u)}}function c(l){var u;l.done?i(l.value):(u=l.value,u instanceof t?u:new t(function(h){h(u)})).then(a,o)}c((r=r.apply(n,[])).next())})}function ki(n,e){var t,r,i,s,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return s={next:o(0),throw:o(1),return:o(2)},typeof Symbol=="function"&&(s[Symbol.iterator]=function(){return this}),s;function o(c){return function(l){return function(u){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(i=2&u[0]?r.return:u[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,u[1])).done)return i;switch(r=0,i&&(u=[2&u[0],i.value]),u[0]){case 0:case 1:i=u;break;case 4:return a.label++,{value:u[1],done:!1};case 5:a.label++,r=u[1],u=[0];continue;case 7:u=a.ops.pop(),a.trys.pop();continue;default:if(i=a.trys,!((i=i.length>0&&i[i.length-1])||u[0]!==6&&u[0]!==2)){a=0;continue}if(u[0]===3&&(!i||u[1]>i[0]&&u[1]<i[3])){a.label=u[1];break}if(u[0]===6&&a.label<i[1]){a.label=i[1],i=u;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(u);break}i[2]&&a.ops.pop(),a.trys.pop();continue}u=e.call(n,a)}catch(h){u=[6,h],r=0}finally{t=i=0}if(5&u[0])throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}([c,l])}}}function is(n){var e=n.map(function(t){return t[0]});return e.push(n[n.length-1][1]),e}var sH={lips:is([[61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]]),leftEye:is([[263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]]),leftEyebrow:is([[276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]]),leftIris:is([[474,475],[475,476],[476,477],[477,474]]),rightEye:is([[33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]]),rightEyebrow:is([[46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]]),rightIris:is([[469,470],[470,471],[471,472],[472,469]]),faceOval:is([[10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]])},aH=Object.entries(sH).map(function(n){var e=n[0];return n[1].map(function(t){return[t,e]})}).flat(),_3=new Map(aH);function Md(n){for(var e={locationData:{relativeKeypoints:[]}},t=Number.MAX_SAFE_INTEGER,r=Number.MIN_SAFE_INTEGER,i=Number.MAX_SAFE_INTEGER,s=Number.MIN_SAFE_INTEGER,a=0;a<n.length;++a){var o=n[a];t=Math.min(t,o.x),r=Math.max(r,o.x),i=Math.min(i,o.y),s=Math.max(s,o.y),e.locationData.relativeKeypoints.push({x:o.x,y:o.y})}return e.locationData.relativeBoundingBox={xMin:t,yMin:i,xMax:r,yMax:s,width:r-t,height:s-i},e}var wh={runtime:"mediapipe",maxFaces:1,refineLandmarks:!1},oH=function(){function n(e){var t=this;this.width=0,this.height=0,this.selfieMode=!1,this.faceMeshSolution=new iT.FaceMesh({locateFile:function(r,i){return e.solutionPath?e.solutionPath.replace(/\/+$/,"")+"/"+r:i+"/"+r}}),this.faceMeshSolution.setOptions({refineLandmarks:e.refineLandmarks,selfieMode:this.selfieMode,maxNumFaces:e.maxFaces}),this.faceMeshSolution.onResults(function(r){if(t.height=r.image.height,t.width=r.image.width,t.faces=[],r.multiFaceLandmarks!==null)for(var i=r.multiFaceLandmarks,s=0;s<i.length;s++){var a=t.translateOutput(i[s]);t.faces.push({keypoints:a,box:Md(a).locationData.relativeBoundingBox})}})}return n.prototype.translateOutput=function(e){var t=this;return e.map(function(r,i){var s={x:r.x*t.width,y:r.y*t.height,z:r.z*t.width},a=_3.get(i);return a!=null&&(s.name=a),s})},n.prototype.estimateFaces=function(e,t){return Li(this,void 0,void 0,function(){var r,i;return ki(this,function(s){switch(s.label){case 0:return t&&t.flipHorizontal&&t.flipHorizontal!==this.selfieMode&&(this.selfieMode=t.flipHorizontal,this.faceMeshSolution.setOptions({selfieMode:this.selfieMode})),e instanceof mn?(i=ImageData.bind,[4,Ty(e)]):[3,2];case 1:return r=new(i.apply(ImageData,[void 0,s.sent(),e.shape[1],e.shape[0]])),[3,3];case 2:r=e,s.label=3;case 3:return e=r,[4,this.faceMeshSolution.send({image:e})];case 4:return s.sent(),[2,this.faces]}})})},n.prototype.dispose=function(){this.faceMeshSolution.close()},n.prototype.reset=function(){this.faceMeshSolution.reset(),this.width=0,this.height=0,this.faces=null,this.selfieMode=!1},n.prototype.initialize=function(){return this.faceMeshSolution.initialize()},n}();function cH(n){return Li(this,void 0,void 0,function(){var e,t;return ki(this,function(r){switch(r.label){case 0:return e=function(i){if(i==null)return si({},wh);var s=si({},i);return s.runtime="mediapipe",s.maxFaces==null&&(s.maxFaces=wh.maxFaces),s.refineLandmarks==null&&(s.refineLandmarks=wh.refineLandmarks),s}(n),[4,(t=new oH(e)).initialize()];case 1:return r.sent(),[2,t]}})})}var Eh=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},lH={};(function(){var n;function e(y){var T=0;return function(){return T<y.length?{done:!1,value:y[T++]}:{done:!0}}}var t=typeof Object.defineProperties=="function"?Object.defineProperty:function(y,T,R){return y==Array.prototype||y==Object.prototype||(y[T]=R.value),y},r=function(y){y=[typeof globalThis=="object"&&globalThis,y,typeof window=="object"&&window,typeof self=="object"&&self,typeof Eh=="object"&&Eh];for(var T=0;T<y.length;++T){var R=y[T];if(R&&R.Math==Math)return R}throw Error("Cannot find global object")}(this);function i(y,T){if(T)e:{var R=r;y=y.split(".");for(var O=0;O<y.length-1;O++){var V=y[O];if(!(V in R))break e;R=R[V]}(T=T(O=R[y=y[y.length-1]]))!=O&&T!=null&&t(R,y,{configurable:!0,writable:!0,value:T})}}function s(y){return(y={next:y})[Symbol.iterator]=function(){return this},y}function a(y){var T=typeof Symbol<"u"&&Symbol.iterator&&y[Symbol.iterator];return T?T.call(y):{next:e(y)}}function o(y){if(!(y instanceof Array)){y=a(y);for(var T,R=[];!(T=y.next()).done;)R.push(T.value);y=R}return y}i("Symbol",function(y){function T(V,U){this.g=V,t(this,"description",{configurable:!0,writable:!0,value:U})}if(y)return y;T.prototype.toString=function(){return this.g};var R="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",O=0;return function V(U){if(this instanceof V)throw new TypeError("Symbol is not a constructor");return new T(R+(U||"")+"_"+O++,U)}}),i("Symbol.iterator",function(y){if(y)return y;y=Symbol("Symbol.iterator");for(var T="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),R=0;R<T.length;R++){var O=r[T[R]];typeof O=="function"&&typeof O.prototype[y]!="function"&&t(O.prototype,y,{configurable:!0,writable:!0,value:function(){return s(e(this))}})}return y});var c,l=typeof Object.create=="function"?Object.create:function(y){function T(){}return T.prototype=y,new T};if(typeof Object.setPrototypeOf=="function")c=Object.setPrototypeOf;else{var u;e:{var h={};try{h.__proto__={a:!0},u=h.a;break e}catch{}u=!1}c=u?function(y,T){if(y.__proto__=T,y.__proto__!==T)throw new TypeError(y+" is not extensible");return y}:null}var d=c;function f(y,T){if(y.prototype=l(T.prototype),y.prototype.constructor=y,d)d(y,T);else for(var R in T)if(R!="prototype")if(Object.defineProperties){var O=Object.getOwnPropertyDescriptor(T,R);O&&Object.defineProperty(y,R,O)}else y[R]=T[R];y.na=T.prototype}function p(){this.l=!1,this.i=null,this.h=void 0,this.g=1,this.u=this.o=0,this.j=null}function x(y){if(y.l)throw new TypeError("Generator is already running");y.l=!0}function g(y,T){y.j={da:T,ea:!0},y.g=y.o||y.u}function m(y,T,R){return y.g=R,{value:T}}function _(y){this.g=new p,this.h=y}function b(y,T,R,O){try{var V=T.call(y.g.i,R);if(!(V instanceof Object))throw new TypeError("Iterator result "+V+" is not an object");if(!V.done)return y.g.l=!1,V;var U=V.value}catch(G){return y.g.i=null,g(y.g,G),w(y)}return y.g.i=null,O.call(y.g,U),w(y)}function w(y){for(;y.g.g;)try{var T=y.h(y.g);if(T)return y.g.l=!1,{value:T.value,done:!1}}catch(R){y.g.h=void 0,g(y.g,R)}if(y.g.l=!1,y.g.j){if(T=y.g.j,y.g.j=null,T.ea)throw T.da;return{value:T.return,done:!0}}return{value:void 0,done:!0}}function I(y){this.next=function(T){return x(y.g),y.g.i?T=b(y,y.g.i.next,T,y.g.s):(y.g.s(T),T=w(y)),T},this.throw=function(T){return x(y.g),y.g.i?T=b(y,y.g.i.throw,T,y.g.s):(g(y.g,T),T=w(y)),T},this.return=function(T){return function(R,O){x(R.g);var V=R.g.i;return V?b(R,"return"in V?V.return:function(U){return{value:U,done:!0}},O,R.g.return):(R.g.return(O),w(R))}(y,T)},this[Symbol.iterator]=function(){return this}}function M(y){return function(T){function R(V){return T.next(V)}function O(V){return T.throw(V)}return new Promise(function(V,U){(function G(X){X.done?V(X.value):Promise.resolve(X.value).then(R,O).then(G,U)})(T.next())})}(new I(new _(y)))}p.prototype.s=function(y){this.h=y},p.prototype.return=function(y){this.j={return:y},this.g=this.u},i("Promise",function(y){function T(G){this.h=0,this.i=void 0,this.g=[],this.s=!1;var X=this.j();try{G(X.resolve,X.reject)}catch(re){X.reject(re)}}function R(){this.g=null}function O(G){return G instanceof T?G:new T(function(X){X(G)})}if(y)return y;R.prototype.h=function(G){if(this.g==null){this.g=[];var X=this;this.i(function(){X.l()})}this.g.push(G)};var V=r.setTimeout;R.prototype.i=function(G){V(G,0)},R.prototype.l=function(){for(;this.g&&this.g.length;){var G=this.g;this.g=[];for(var X=0;X<G.length;++X){var re=G[X];G[X]=null;try{re()}catch(me){this.j(me)}}}this.g=null},R.prototype.j=function(G){this.i(function(){throw G})},T.prototype.j=function(){function G(me){return function(_e){re||(re=!0,me.call(X,_e))}}var X=this,re=!1;return{resolve:G(this.D),reject:G(this.l)}},T.prototype.D=function(G){if(G===this)this.l(new TypeError("A Promise cannot resolve to itself"));else if(G instanceof T)this.H(G);else{e:switch(typeof G){case"object":var X=G!=null;break e;case"function":X=!0;break e;default:X=!1}X?this.A(G):this.o(G)}},T.prototype.A=function(G){var X=void 0;try{X=G.then}catch(re){return void this.l(re)}typeof X=="function"?this.I(X,G):this.o(G)},T.prototype.l=function(G){this.u(2,G)},T.prototype.o=function(G){this.u(1,G)},T.prototype.u=function(G,X){if(this.h!=0)throw Error("Cannot settle("+G+", "+X+"): Promise already settled in state"+this.h);this.h=G,this.i=X,this.h===2&&this.G(),this.B()},T.prototype.G=function(){var G=this;V(function(){if(G.C()){var X=r.console;X!==void 0&&X.error(G.i)}},1)},T.prototype.C=function(){if(this.s)return!1;var G=r.CustomEvent,X=r.Event,re=r.dispatchEvent;return re===void 0||(typeof G=="function"?G=new G("unhandledrejection",{cancelable:!0}):typeof X=="function"?G=new X("unhandledrejection",{cancelable:!0}):(G=r.document.createEvent("CustomEvent")).initCustomEvent("unhandledrejection",!1,!0,G),G.promise=this,G.reason=this.i,re(G))},T.prototype.B=function(){if(this.g!=null){for(var G=0;G<this.g.length;++G)U.h(this.g[G]);this.g=null}};var U=new R;return T.prototype.H=function(G){var X=this.j();G.M(X.resolve,X.reject)},T.prototype.I=function(G,X){var re=this.j();try{G.call(X,re.resolve,re.reject)}catch(me){re.reject(me)}},T.prototype.then=function(G,X){function re(Le,Ve){return typeof Le=="function"?function(yt){try{me(Le(yt))}catch(Rt){_e(Rt)}}:Ve}var me,_e,Ie=new T(function(Le,Ve){me=Le,_e=Ve});return this.M(re(G,me),re(X,_e)),Ie},T.prototype.catch=function(G){return this.then(void 0,G)},T.prototype.M=function(G,X){function re(){switch(me.h){case 1:G(me.i);break;case 2:X(me.i);break;default:throw Error("Unexpected state: "+me.h)}}var me=this;this.g==null?U.h(re):this.g.push(re),this.s=!0},T.resolve=O,T.reject=function(G){return new T(function(X,re){re(G)})},T.race=function(G){return new T(function(X,re){for(var me=a(G),_e=me.next();!_e.done;_e=me.next())O(_e.value).M(X,re)})},T.all=function(G){var X=a(G),re=X.next();return re.done?O([]):new T(function(me,_e){function Ie(yt){return function(Rt){Le[yt]=Rt,--Ve==0&&me(Le)}}var Le=[],Ve=0;do Le.push(void 0),Ve++,O(re.value).M(Ie(Le.length-1),_e),re=X.next();while(!re.done)})},T});var D=typeof Object.assign=="function"?Object.assign:function(y,T){for(var R=1;R<arguments.length;R++){var O=arguments[R];if(O)for(var V in O)Object.prototype.hasOwnProperty.call(O,V)&&(y[V]=O[V])}return y};i("Object.assign",function(y){return y||D}),i("Object.is",function(y){return y||function(T,R){return T===R?T!==0||1/T==1/R:T!=T&&R!=R}}),i("Array.prototype.includes",function(y){return y||function(T,R){var O=this;O instanceof String&&(O=String(O));var V=O.length;for(0>(R=R||0)&&(R=Math.max(R+V,0));R<V;R++){var U=O[R];if(U===T||Object.is(U,T))return!0}return!1}}),i("String.prototype.includes",function(y){return y||function(T,R){if(this==null)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(T instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return this.indexOf(T,R||0)!==-1}}),i("Array.prototype.keys",function(y){return y||function(){return function(T,R){T instanceof String&&(T+="");var O=0,V=!1,U={next:function(){if(!V&&O<T.length){var G=O++;return{value:R(G,T[G]),done:!1}}return V=!0,{done:!0,value:void 0}}};return U[Symbol.iterator]=function(){return U},U}(this,function(T){return T})}});var F=this||self;function N(y,T){y=y.split(".");var R,O=F;for((y[0]in O)||O.execScript===void 0||O.execScript("var "+y[0]);y.length&&(R=y.shift());)y.length||T===void 0?O=O[R]&&O[R]!==Object.prototype[R]?O[R]:O[R]={}:O[R]=T}function A(){throw Error("Invalid UTF8")}function B(y,T){return T=String.fromCharCode.apply(null,T),y==null?T:y+T}var J,Y,ae=typeof TextDecoder<"u",le=typeof TextEncoder<"u",he={},de=null;function oe(y){var T;T===void 0&&(T=0),He(),T=he[T];for(var R=Array(Math.floor(y.length/3)),O=T[64]||"",V=0,U=0;V<y.length-2;V+=3){var G=y[V],X=y[V+1],re=y[V+2],me=T[G>>2];G=T[(3&G)<<4|X>>4],X=T[(15&X)<<2|re>>6],re=T[63&re],R[U++]=me+G+X+re}switch(me=0,re=O,y.length-V){case 2:re=T[(15&(me=y[V+1]))<<2]||O;case 1:y=y[V],R[U]=T[y>>2]+T[(3&y)<<4|me>>4]+re+O}return R.join("")}function $e(y){var T=y.length,R=3*T/4;R%3?R=Math.floor(R):"=.".indexOf(y[T-1])!=-1&&(R="=.".indexOf(y[T-2])!=-1?R-2:R-1);var O=new Uint8Array(R),V=0;return function(U,G){function X(Ve){for(;re<U.length;){var yt=U.charAt(re++),Rt=de[yt];if(Rt!=null)return Rt;if(!/^[\s\xa0]*$/.test(yt))throw Error("Unknown base64 encoding at char: "+yt)}return Ve}He();for(var re=0;;){var me=X(-1),_e=X(0),Ie=X(64),Le=X(64);if(Le===64&&me===-1)break;G(me<<2|_e>>4),Ie!=64&&(G(_e<<4&240|Ie>>2),Le!=64&&G(Ie<<6&192|Le))}}(y,function(U){O[V++]=U}),V!==R?O.subarray(0,V):O}function He(){if(!de){de={};for(var y="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),T=["+/=","+/","-_=","-_.","-_"],R=0;5>R;R++){var O=y.concat(T[R].split(""));he[R]=O;for(var V=0;V<O.length;V++){var U=O[V];de[U]===void 0&&(de[U]=V)}}}}var ze,_t=typeof Uint8Array=="function";function Ot(y){return _t&&y!=null&&y instanceof Uint8Array}function xe(y){if(this.L=y,y!==null&&y.length===0)throw Error("ByteString should be constructed with non-empty values")}var Te=typeof Uint8Array.prototype.slice=="function",Ge=0;function Be(y,T){return Error("Invalid wire type: "+y+" (at position "+T+")")}function bt(){return Error("Failed to read varint, encoding is invalid.")}function ht(y,T){T=(T=T===void 0?{}:T).v!==void 0&&T.v,this.h=null,this.g=this.i=this.j=0,this.v=T,y&&gt(this,y)}function gt(y,T){y.h=function(R,O){if(R.constructor===Uint8Array)return R;if(R.constructor===ArrayBuffer)return new Uint8Array(R);if(R.constructor===Array)return new Uint8Array(R);if(R.constructor===String)return $e(R);if(R.constructor===xe)return!O&&(O=R.L)&&O.constructor===Uint8Array?O:(O=(O=R.L)==null||Ot(O)?O:typeof O=="string"?$e(O):null,(R=R.L=O)?new Uint8Array(R):ze||(ze=new Uint8Array(0)));if(R instanceof Uint8Array)return new Uint8Array(R.buffer,R.byteOffset,R.byteLength);throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, or Array of numbers")}(T,y.v),y.j=0,y.i=y.h.length,y.g=y.j}function j(y){if(y.g>y.i)throw Error("Tried to read past the end of the data "+y.g+" > "+y.i)}function wt(y){var T=y.h,R=T[y.g],O=127&R;if(128>R)return y.g+=1,j(y),O;if(O|=(127&(R=T[y.g+1]))<<7,128>R)return y.g+=2,j(y),O;if(O|=(127&(R=T[y.g+2]))<<14,128>R)return y.g+=3,j(y),O;if(O|=(127&(R=T[y.g+3]))<<21,128>R)return y.g+=4,j(y),O;if(R=T[y.g+4],y.g+=5,O|=(15&R)<<28,128>R)return j(y),O;if(128<=T[y.g++]&&128<=T[y.g++]&&128<=T[y.g++]&&128<=T[y.g++]&&128<=T[y.g++])throw bt();return j(y),O}ht.prototype.reset=function(){this.g=this.j};var Et=[];function qt(){this.g=[]}function rt(y,T){for(;127<T;)y.g.push(127&T|128),T>>>=7;y.g.push(T)}function St(y){var T={},R=T.W!==void 0&&T.W;this.l={v:T.v!==void 0&&T.v},this.W=R,T=this.l,Et.length?(R=Et.pop(),T&&(R.v=T.v),y&&gt(R,y),y=R):y=new ht(y,T),this.g=y,this.j=this.g.g,this.h=this.i=-1}function xt(y){var T=y.g;if(T.g==T.i)return!1;y.j=y.g.g;var R=wt(y.g)>>>0;if(T=R>>>3,!(0<=(R&=7)&&5>=R))throw Be(R,y.j);if(1>T)throw Error("Invalid field number: "+T+" (at position "+y.j+")");return y.i=T,y.h=R,!0}function lt(y){switch(y.h){case 0:if(y.h!=0)lt(y);else e:{for(var T=(y=y.g).g,R=T+10;T<R;)if(!(128&y.h[T++])){y.g=T,j(y);break e}throw bt()}break;case 1:(y=y.g).g+=8,j(y);break;case 2:y.h!=2?lt(y):(T=wt(y.g)>>>0,(y=y.g).g+=T,j(y));break;case 5:(y=y.g).g+=4,j(y);break;case 3:for(T=y.i;;){if(!xt(y))throw Error("Unmatched start-group tag: stream EOF");if(y.h==4){if(y.i!=T)throw Error("Unmatched end-group tag");break}lt(y)}break;default:throw Be(y.h,y.j)}}qt.prototype.length=function(){return this.g.length},qt.prototype.end=function(){var y=this.g;return this.g=[],y},St.prototype.reset=function(){this.g.reset(),this.j=this.g.g,this.h=this.i=-1};var Ht=[];function W(){this.i=[],this.h=0,this.g=new qt}function P(y,T){T.length!==0&&(y.i.push(T),y.h+=T.length)}var ce=typeof Symbol=="function"&&typeof Symbol()=="symbol"?Symbol(void 0):void 0;function be(y,T){Object.isFrozen(y)||(ce?y[ce]|=T:y.N!==void 0?y.N|=T:Object.defineProperties(y,{N:{value:T,configurable:!0,writable:!0,enumerable:!1}}))}function we(y){var T;return(T=ce?y[ce]:y.N)==null?0:T}function Se(y){return be(y,1),y}function Ze(y){return!!Array.isArray(y)&&!!(2&we(y))}function Fe(y){if(!Array.isArray(y))throw Error("cannot mark non-array as immutable");be(y,2)}function De(y){return y!==null&&typeof y=="object"&&!Array.isArray(y)&&y.constructor===Object}var pt=Object.freeze(Se([]));function Ne(y){if(Ze(y.m))throw Error("Cannot mutate an immutable Message")}var et,At=typeof Symbol<"u"&&Symbol.hasInstance!==void 0;function ft(y){return{value:y,configurable:!1,writable:!1,enumerable:!1}}function Me(y,T,R){return T===-1?null:T>=y.i?y.g?y.g[T]:void 0:R!==void 0&&R&&y.g&&(R=y.g[T])!=null?R:y.m[T+y.h]}function tt(y,T,R,O){O=O!==void 0&&O,Ne(y),T<y.i&&!O?y.m[T+y.h]=R:(y.g||(y.g=y.m[y.i+y.h]={}))[T]=R}function at(y,T,R,O){R=R===void 0||R;var V=Me(y,T,O=O!==void 0&&O);return V==null&&(V=pt),Ze(y.m)?R&&(Fe(V),Object.freeze(V)):(V===pt||Ze(V))&&tt(y,T,V=Se(V.slice()),O),V}function kt(y,T,R){return(y=(y=Me(y,T))==null?y:+y)==null?R===void 0?0:R:y}function K(y,T,R,O){y.j||(y.j={});var V=Ze(y.m),U=y.j[R];if(!U){O=at(y,R,!0,O!==void 0&&O),U=[],V=V||Ze(O);for(var G=0;G<O.length;G++)U[G]=new T(O[G]),V&&Fe(U[G].m);V&&(Fe(U),Object.freeze(U)),y.j[R]=U}return U}function Ee(y,T,R,O,V){var U=U!==void 0&&U;return Ne(y),U=K(y,R,T,U),R=O||new R,y=at(y,T),V!=null?(U.splice(V,0,R),y.splice(V,0,R.m)):(U.push(R),y.push(R.m)),R}function fe(y,T){return(y=Me(y,T))==null?0:y}function ve(y,T){return(y=Me(y,T))==null?"":y}function Ce(y){var T=nn;return qe(y,T=T===void 0?ln:T)}function it(y,T){if(y!=null){if(Array.isArray(y))y=qe(y,T);else if(De(y)){var R,O={};for(R in y)O[R]=it(y[R],T);y=O}else y=T(y);return y}}function qe(y,T){for(var R=y.slice(),O=0;O<R.length;O++)R[O]=it(R[O],T);return Array.isArray(y)&&1&we(y)&&Se(R),R}function nn(y){return y&&typeof y=="object"&&y.toJSON?y.toJSON():(y=function(T){switch(typeof T){case"number":return isFinite(T)?T:String(T);case"object":if(T&&!Array.isArray(T)){if(Ot(T))return oe(T);if(T instanceof xe){var R=T.L;return R=R==null||typeof R=="string"?R:_t&&R instanceof Uint8Array?oe(R):null,(T.L=R)||""}}}return T}(y),Array.isArray(y)?Ce(y):y)}function ln(y){return Ot(y)?new Uint8Array(y):y}function Ft(y,T,R){y||(y=et),et=null;var O=this.constructor.h;if(y||(y=O?[O]:[]),this.h=(O?0:-1)-(this.constructor.g||0),this.j=void 0,this.m=y,y=(O=this.m.length)-1,O&&De(O=this.m[y])?(this.i=y-this.h,this.g=O):T!==void 0&&-1<T?(this.i=Math.max(T,y+1-this.h),this.g=void 0):this.i=Number.MAX_VALUE,R)for(T=0;T<R.length;T++)if((y=R[T])<this.i)y+=this.h,(O=this.m[y])?Array.isArray(O)&&Se(O):this.m[y]=pt;else{var V=(O=this.g||(this.g=this.m[this.i+this.h]={}))[y];V?Array.isArray(V)&&Se(V):O[y]=pt}}function Nn(){Ft.apply(this,arguments)}if(Ft.prototype.toJSON=function(){return Ce(this.m)},Ft.prototype.toString=function(){return this.m.toString()},f(Nn,Ft),At){var yn={};Object.defineProperties(Nn,(yn[Symbol.hasInstance]=ft(function(){throw Error("Cannot perform instanceof checks for MutableMessage")}),yn))}function ir(y,T,R){if(R){var O,V={};for(O in R){var U=R[O],G=U.ha;G||(V.F=U.la||U.fa.P,U.aa?(V.U=Ms(U.aa),G=function(X){return function(re,me,_e){return X.F(re,me,_e,X.U)}}(V)):U.ca?(V.T=Ei(U.X.g,U.ca),G=function(X){return function(re,me,_e){return X.F(re,me,_e,X.T)}}(V)):G=V.F,U.ha=G),G(T,y,U.X),V={F:V.F,U:V.U,T:V.T}}}(function(X,re){if(re=re.ba){P(X,X.g.end());for(var me=0;me<re.length;me++)P(X,re[me])}})(T,y)}var kn=Symbol();function yr(y,T,R){return y[kn]||(y[kn]=function(O,V){return T(O,V,R)})}function Ns(y){var T=y[kn];if(!T){var R=Qe(y);T=function(O,V){return ut(O,V,R)},y[kn]=T}return T}function qi(y){var T=function(V){var U=V.aa;return U?Ns(U):(U=V.ka)?yr(V.X.g,U,V.ca):void 0}(y),R=y.X,O=y.fa.O;return T?function(V,U){return O(V,U,R,T)}:function(V,U){return O(V,U,R)}}function vn(y,T,R,O,V,U){var G=0;for((y=y()).length&&typeof y[0]!="number"&&(R(T,y[0]),G++);G<y.length;){R=y[G++];for(var X=G+1;X<y.length&&typeof y[X]!="number";)X++;var re=y[G++];switch(X-=G){case 0:O(T,R,re);break;case 1:O(T,R,re,y[G++]);break;case 2:V(T,R,re,y[G++],y[G++]);break;case 3:X=y[G++];var me=y[G++],_e=y[G++];Array.isArray(_e)?V(T,R,re,X,me,_e):U(T,R,re,X,me,_e);break;case 4:U(T,R,re,y[G++],y[G++],y[G++],y[G++]);break;default:throw Error("unexpected number of binary field arguments: "+X)}}return T}var Zn=Symbol();function Ms(y){var T=y[Zn];if(!T){var R=ie(y);T=function(O,V){return ot(O,V,R)},y[Zn]=T}return T}function Ei(y,T){var R=y[Zn];return R||(R=function(O,V){return ir(O,V,T)},y[Zn]=R),R}var Ra=Symbol();function ui(y,T){y.push(T)}function Fo(y,T,R){y.push(T,R.P)}function L(y,T,R,O,V){var U=Ms(V),G=R.P;y.push(T,function(X,re,me){return G(X,re,me,O,U)})}function Z(y,T,R,O,V,U){var G=Ei(O,U),X=R.P;y.push(T,function(re,me,_e){return X(re,me,_e,O,G)})}function ie(y){var T=y[Ra];return T||vn(y,y[Ra]=[],ui,Fo,L,Z)}var se=Symbol();function Q(y,T){y[0]=T}function Pe(y,T,R,O){var V=R.O;y[T]=O?function(U,G,X){return V(U,G,X,O)}:V}function je(y,T,R,O,V,U){var G=R.O,X=Ns(V);y[T]=function(re,me,_e){return G(re,me,_e,O,X,U)}}function Ye(y,T,R,O,V,U,G){var X=R.O,re=yr(O,V,U);y[T]=function(me,_e,Ie){return X(me,_e,Ie,O,re,G)}}function Qe(y){var T=y[se];return T||vn(y,y[se]={},Q,Pe,je,Ye)}function ut(y,T,R){for(;xt(T)&&T.h!=4;){var O=T.i,V=R[O];if(!V){var U=R[0];U&&(U=U[O])&&(V=R[O]=qi(U))}if(!(V&&V(T,y,O)||(V=T,O=y,U=V.j,lt(V),V.W))){var G=V.g.h;V=U===(V=V.g.g)?ze||(ze=new Uint8Array(0)):Te?G.slice(U,V):new Uint8Array(G.subarray(U,V)),(U=O.ba)?U.push(V):O.ba=[V]}}return y}function dt(y,T,R){if(Ht.length){var O=Ht.pop();y&&(gt(O.g,y),O.i=-1,O.h=-1),y=O}else y=new St(y);try{return ut(new T,y,Qe(R))}finally{(T=y.g).h=null,T.j=0,T.i=0,T.g=0,T.v=!1,y.i=-1,y.h=-1,100>Ht.length&&Ht.push(y)}}function ot(y,T,R){for(var O=R.length,V=O%2==1,U=V?1:0;U<O;U+=2)(0,R[U+1])(T,y,R[U]);ir(y,T,V?R[0]:void 0)}function $t(y,T){var R=new W;ot(y,R,ie(T)),P(R,R.g.end()),y=new Uint8Array(R.h);for(var O=(T=R.i).length,V=0,U=0;U<O;U++){var G=T[U];y.set(G,V),V+=G.length}return R.i=[y],y}function Xt(y,T){return{O:y,P:T}}var Ut=Xt(function(y,T,R){if(y.h!==5)return!1;var O=(y=y.g).h[y.g],V=y.h[y.g+1],U=y.h[y.g+2],G=y.h[y.g+3];return y.g+=4,j(y),y=2*((V=(O<<0|V<<8|U<<16|G<<24)>>>0)>>31)+1,O=V>>>23&255,V&=8388607,tt(T,R,O==255?V?NaN:1/0*y:O==0?y*Math.pow(2,-149)*V:y*Math.pow(2,O-150)*(V+Math.pow(2,23))),!0},function(y,T,R){if((T=Me(T,R))!=null){rt(y.g,8*R+5),y=y.g;var O=T;(O=(R=0>O?1:0)?-O:O)===0?0<1/O?Ge=0:Ge=2147483648:isNaN(O)?Ge=2147483647:34028234663852886e22<O?Ge=(R<<31|2139095040)>>>0:11754943508222875e-54>O?(O=Math.round(O/Math.pow(2,-149)),Ge=(R<<31|O)>>>0):(T=Math.floor(Math.log(O)/Math.LN2),O*=Math.pow(2,-T),16777216<=(O=Math.round(8388608*O))&&++T,Ge=(R<<31|T+127<<23|8388607&O)>>>0),R=Ge,y.g.push(R>>>0&255),y.g.push(R>>>8&255),y.g.push(R>>>16&255),y.g.push(R>>>24&255)}}),Fn=Xt(function(y,T,R){if(y.h!==0)return!1;for(var O=y.g,V=128,U=0,G=y=0;4>G&&128<=V;G++)V=O.h[O.g++],j(O),U|=(127&V)<<7*G;if(128<=V&&(V=O.h[O.g++],j(O),U|=(127&V)<<28,y|=(127&V)>>4),128<=V)for(G=0;5>G&&128<=V;G++)V=O.h[O.g++],j(O),y|=(127&V)<<7*G+3;if(!(128>V))throw bt();return O=U>>>0,(y=2147483648&(V=y>>>0))&&(V=~V>>>0,(O=1+~O>>>0)==0&&(V=V+1>>>0)),O=4294967296*V+(O>>>0),tt(T,R,y?-O:O),!0},function(y,T,R){if((T=Me(T,R))!=null&&T!=null){rt(y.g,8*R),y=y.g;var O=T;for(R=0>O,T=(O=Math.abs(O))>>>0,O=Math.floor((O-T)/4294967296),O>>>=0,R&&(O=~O>>>0,4294967295<(T=1+(~T>>>0))&&(T=0,4294967295<++O&&(O=0))),R=Ge=T,T=O;0<T||127<R;)y.g.push(127&R|128),R=(R>>>7|T<<25)>>>0,T>>>=7;y.g.push(R)}}),Wt=Xt(function(y,T,R){return y.h===0&&(tt(T,R,wt(y.g)),!0)},function(y,T,R){if((T=Me(T,R))!=null&&T!=null)if(rt(y.g,8*R),y=y.g,0<=(R=T))rt(y,R);else{for(T=0;9>T;T++)y.g.push(127&R|128),R>>=7;y.g.push(1)}}),st=Xt(function(y,T,R){if(y.h!==2)return!1;var O,V=wt(y.g)>>>0,U=(y=y.g).g;if(y.g+=V,j(y),y=y.h,ae)(O=J)||(O=J=new TextDecoder("utf-8",{fatal:!0})),O=O.decode(y.subarray(U,U+V));else{V=U+V;for(var G,X,re,me=[],_e=null;U<V;)128>(G=y[U++])?me.push(G):224>G?U>=V?A():(X=y[U++],194>G||(192&X)!=128?(U--,A()):me.push((31&G)<<6|63&X)):240>G?U>=V-1?A():(192&(X=y[U++]))!=128||G===224&&160>X||G===237&&160<=X||(192&(O=y[U++]))!=128?(U--,A()):me.push((15&G)<<12|(63&X)<<6|63&O):244>=G?U>=V-2?A():(192&(X=y[U++]))!=128||X-144+(G<<28)>>30||(192&(O=y[U++]))!=128||(192&(re=y[U++]))!=128?(U--,A()):(G=(7&G)<<18|(63&X)<<12|(63&O)<<6|63&re,G-=65536,me.push(55296+(G>>10&1023),56320+(1023&G))):A(),8192<=me.length&&(_e=B(_e,me),me.length=0);O=B(_e,me)}return tt(T,R,O),!0},function(y,T,R){if((T=Me(T,R))!=null){var O=!1;if(O=O!==void 0&&O,le){if(O&&/(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])/.test(T))throw Error("Found an unpaired surrogate");T=(Y||(Y=new TextEncoder)).encode(T)}else{for(var V=0,U=new Uint8Array(3*T.length),G=0;G<T.length;G++){var X=T.charCodeAt(G);if(128>X)U[V++]=X;else{if(2048>X)U[V++]=X>>6|192;else{if(55296<=X&&57343>=X){if(56319>=X&&G<T.length){var re=T.charCodeAt(++G);if(56320<=re&&57343>=re){X=1024*(X-55296)+re-56320+65536,U[V++]=X>>18|240,U[V++]=X>>12&63|128,U[V++]=X>>6&63|128,U[V++]=63&X|128;continue}G--}if(O)throw Error("Found an unpaired surrogate");X=65533}U[V++]=X>>12|224,U[V++]=X>>6&63|128}U[V++]=63&X|128}}T=U.subarray(0,V)}rt(y.g,8*R+2),rt(y.g,T.length),P(y,y.g.end()),P(y,T)}}),_n=Xt(function(y,T,R,O,V){if(y.h!==2)return!1;T=Ee(T,R,O),R=y.g.i,O=wt(y.g)>>>0;var U=y.g.g+O,G=U-R;if(0>=G&&(y.g.i=U,V(T,y),G=U-y.g.g),G)throw Error("Message parsing ended unexpectedly. Expected to read "+O+" bytes, instead read "+(O-G)+" bytes, either the data ended unexpectedly or the message misreported its own length");return y.g.g=U,y.g.i=R,!0},function(y,T,R,O,V){if((T=K(T,O,R))!=null)for(O=0;O<T.length;O++){var U=y;rt(U.g,8*R+2);var G=U.g.end();P(U,G),G.push(U.h),U=G,V(T[O],y),G=y;var X=U.pop();for(X=G.h+G.g.length()-X;127<X;)U.push(127&X|128),X>>>=7,G.h++;U.push(X),G.h++}});function Tt(){Nn.apply(this,arguments)}if(f(Tt,Nn),At){var sr={};Object.defineProperties(Tt,(sr[Symbol.hasInstance]=ft(Object[Symbol.hasInstance]),sr))}function ar(y){Tt.call(this,y)}function Nr(){return[1,Wt,2,Ut,3,st,4,st]}function Ti(y){Tt.call(this,y,-1,Mr)}function xn(){return[1,_n,ar,Nr]}f(ar,Tt),f(Ti,Tt),Ti.prototype.addClassification=function(y,T){return Ee(this,1,ar,y,T),this};var Mr=[1];function Ir(y){Tt.call(this,y)}function Un(){return[1,Ut,2,Ut,3,Ut,4,Ut,5,Ut]}function Ki(y){Tt.call(this,y,-1,Na)}function Uo(){return[1,_n,Ir,Un]}f(Ir,Tt),f(Ki,Tt);var Na=[1];function Bo(y){Tt.call(this,y)}function Vo(){return[1,Ut,2,Ut,3,Ut,4,Ut,5,Ut,6,Fn]}f(Bo,Tt);var zo=[[61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]],Go=[[263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]],Wo=[[276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]],Ho=[[33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]],Xo=[[46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]],Fc=[[10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]],Uc=[].concat(o(zo),o(Go),o(Wo),o(Ho),o(Xo),o(Fc));function v(y,T,R){if(R=y.createShader(R===0?y.VERTEX_SHADER:y.FRAGMENT_SHADER),y.shaderSource(R,T),y.compileShader(R),!y.getShaderParameter(R,y.COMPILE_STATUS))throw Error(`Could not compile WebGL shader.

`+y.getShaderInfoLog(R));return R}function E(y){return K(y,ar,1).map(function(T){return{index:fe(T,1),ga:kt(T,2),label:Me(T,3)!=null?ve(T,3):void 0,displayName:Me(T,4)!=null?ve(T,4):void 0}})}function C(y){return{x:kt(y,1),y:kt(y,2),z:kt(y,3),visibility:Me(y,4)!=null?kt(y,4):void 0}}function z(y,T){this.h=y,this.g=T,this.l=0}function ee(y,T,R){return function(O,V){var U=O.g;if(O.o===void 0){var G=v(U,`
  attribute vec2 aVertex;
  attribute vec2 aTex;
  varying vec2 vTex;
  void main(void) {
    gl_Position = vec4(aVertex, 0.0, 1.0);
    vTex = aTex;
  }`,0),X=v(U,`
  precision mediump float;
  varying vec2 vTex;
  uniform sampler2D sampler0;
  void main(){
    gl_FragColor = texture2D(sampler0, vTex);
  }`,1),re=U.createProgram();if(U.attachShader(re,G),U.attachShader(re,X),U.linkProgram(re),!U.getProgramParameter(re,U.LINK_STATUS))throw Error(`Could not compile WebGL program.

`+U.getProgramInfoLog(re));G=O.o=re,U.useProgram(G),X=U.getUniformLocation(G,"sampler0"),O.j={K:U.getAttribLocation(G,"aVertex"),J:U.getAttribLocation(G,"aTex"),ma:X},O.u=U.createBuffer(),U.bindBuffer(U.ARRAY_BUFFER,O.u),U.enableVertexAttribArray(O.j.K),U.vertexAttribPointer(O.j.K,2,U.FLOAT,!1,0,0),U.bufferData(U.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),U.STATIC_DRAW),U.bindBuffer(U.ARRAY_BUFFER,null),O.s=U.createBuffer(),U.bindBuffer(U.ARRAY_BUFFER,O.s),U.enableVertexAttribArray(O.j.J),U.vertexAttribPointer(O.j.J,2,U.FLOAT,!1,0,0),U.bufferData(U.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),U.STATIC_DRAW),U.bindBuffer(U.ARRAY_BUFFER,null),U.uniform1i(X,0)}G=O.j,U.useProgram(O.o),U.canvas.width=V.width,U.canvas.height=V.height,U.viewport(0,0,V.width,V.height),U.activeTexture(U.TEXTURE0),O.h.bindTexture2d(V.glName),U.enableVertexAttribArray(G.K),U.bindBuffer(U.ARRAY_BUFFER,O.u),U.vertexAttribPointer(G.K,2,U.FLOAT,!1,0,0),U.enableVertexAttribArray(G.J),U.bindBuffer(U.ARRAY_BUFFER,O.s),U.vertexAttribPointer(G.J,2,U.FLOAT,!1,0,0),U.bindFramebuffer(U.DRAW_FRAMEBUFFER?U.DRAW_FRAMEBUFFER:U.FRAMEBUFFER,null),U.clearColor(0,0,0,0),U.clear(U.COLOR_BUFFER_BIT),U.colorMask(!0,!0,!0,!0),U.drawArrays(U.TRIANGLE_FAN,0,4),U.disableVertexAttribArray(G.K),U.disableVertexAttribArray(G.J),U.bindBuffer(U.ARRAY_BUFFER,null),O.h.bindTexture2d(0)}(y,T),typeof y.g.canvas.transferToImageBitmap=="function"?Promise.resolve(y.g.canvas.transferToImageBitmap()):R?Promise.resolve(y.g.canvas):typeof createImageBitmap=="function"?createImageBitmap(y.g.canvas):(y.i===void 0&&(y.i=document.createElement("canvas")),new Promise(function(O){y.i.height=y.g.canvas.height,y.i.width=y.g.canvas.width,y.i.getContext("2d",{}).drawImage(y.g.canvas,0,0,y.g.canvas.width,y.g.canvas.height),O(y.i)}))}function pe(y){this.g=y}var ne=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function ye(y,T){return T+y}function Re(y,T){window[y]=T}function Ke(y){if(this.g=y,this.listeners={},this.j={},this.H={},this.o={},this.u={},this.I=this.s=this.Z=!0,this.D=Promise.resolve(),this.Y="",this.C={},this.locateFile=y&&y.locateFile||ye,typeof window=="object")var T=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else{if(typeof location>"u")throw Error("solutions can only be loaded on a web page or in a web worker");T=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/"}if(this.$=T,y.options)for(var R=(T=a(Object.keys(y.options))).next();!R.done;R=T.next()){R=R.value;var O=y.options[R].default;O!==void 0&&(this.j[R]=typeof O=="function"?O():O)}}function mt(y){var T,R,O,V,U,G,X,re,me,_e,Ie;return M(function(Le){switch(Le.g){case 1:return y.Z?(T=y.g.files===void 0?[]:typeof y.g.files=="function"?y.g.files(y.j):y.g.files,m(Le,M(function(Ve){switch(Ve.g){case 1:return Ve.o=2,m(Ve,WebAssembly.instantiate(ne),4);case 4:Ve.g=3,Ve.o=0;break;case 2:return Ve.o=0,Ve.j=null,Ve.return(!1);case 3:return Ve.return(!0)}}),2)):Le.return();case 2:if(R=Le.h,typeof window=="object")return Re("createMediapipeSolutionsWasm",{locateFile:y.locateFile}),Re("createMediapipeSolutionsPackedAssets",{locateFile:y.locateFile}),G=T.filter(function(Ve){return Ve.data!==void 0}),X=T.filter(function(Ve){return Ve.data===void 0}),re=Promise.all(G.map(function(Ve){var yt=Vt(y,Ve.url);if(Ve.path!==void 0){var Rt=Ve.path;yt=yt.then(function(Qt){return y.overrideFile(Rt,Qt),Promise.resolve(Qt)})}return yt})),me=Promise.all(X.map(function(Ve){return Ve.simd===void 0||Ve.simd&&R||!Ve.simd&&!R?function(yt){var Rt=document.createElement("script");return Rt.setAttribute("src",yt),Rt.setAttribute("crossorigin","anonymous"),new Promise(function(Qt){Rt.addEventListener("load",function(){Qt()},!1),Rt.addEventListener("error",function(){Qt()},!1),document.body.appendChild(Rt)})}(y.locateFile(Ve.url,y.$)):Promise.resolve()})).then(function(){var Ve,yt,Rt;return M(function(Qt){if(Qt.g==1)return Ve=window.createMediapipeSolutionsWasm,yt=window.createMediapipeSolutionsPackedAssets,Rt=y,m(Qt,Ve(yt),2);Rt.h=Qt.h,Qt.g=0})}),_e=M(function(Ve){return y.g.graph&&y.g.graph.url?Ve=m(Ve,Vt(y,y.g.graph.url),0):(Ve.g=0,Ve=void 0),Ve}),m(Le,Promise.all([me,re,_e]),7);if(typeof importScripts!="function")throw Error("solutions can only be loaded on a web page or in a web worker");return O=T.filter(function(Ve){return Ve.simd===void 0||Ve.simd&&R||!Ve.simd&&!R}).map(function(Ve){return y.locateFile(Ve.url,y.$)}),importScripts.apply(null,o(O)),V=y,m(Le,createMediapipeSolutionsWasm(Module),6);case 6:V.h=Le.h,y.l=new OffscreenCanvas(1,1),y.h.canvas=y.l,U=y.h.GL.createContext(y.l,{antialias:!1,alpha:!1,ja:typeof WebGL2RenderingContext<"u"?2:1}),y.h.GL.makeContextCurrent(U),Le.g=4;break;case 7:if(y.l=document.createElement("canvas"),!(Ie=y.l.getContext("webgl2",{}))&&!(Ie=y.l.getContext("webgl",{})))return alert("Failed to create WebGL canvas context when passing video frame."),Le.return();y.G=Ie,y.h.canvas=y.l,y.h.createContext(y.l,!0,!0,{});case 4:y.i=new y.h.SolutionWasm,y.Z=!1,Le.g=0}})}function Vt(y,T){var R,O;return M(function(V){return T in y.H?V.return(y.H[T]):(R=y.locateFile(T,""),O=fetch(R).then(function(U){return U.arrayBuffer()}),y.H[T]=O,V.return(O))})}function It(y,T,R){var O,V,U,G,X,re,me,_e,Ie,Le,Ve,yt,Rt,Qt;return M(function(rn){switch(rn.g){case 1:if(!R)return rn.return(T);for(O={},V=0,U=a(Object.keys(R)),G=U.next();!G.done;G=U.next())X=G.value,typeof(re=R[X])!="string"&&re.type==="texture"&&T[re.stream]!==void 0&&++V;1<V&&(y.I=!1),me=a(Object.keys(R)),G=me.next();case 2:if(G.done){rn.g=4;break}if(_e=G.value,typeof(Ie=R[_e])=="string")return Rt=O,Qt=_e,m(rn,function(Is,Of,Ma){var Bc;return M(function(Mu){return typeof Ma=="number"||Ma instanceof Uint8Array||Ma instanceof Is.h.Uint8BlobList?Mu.return(Ma):Ma instanceof Is.h.Texture2dDataOut?((Bc=Is.u[Of])||(Bc=new z(Is.h,Is.G),Is.u[Of]=Bc),Mu.return(ee(Bc,Ma,Is.I))):Mu.return(void 0)})}(y,_e,T[Ie]),14);if(Le=T[Ie.stream],Ie.type==="detection_list"){if(Le){for(var Jn=Le.getRectList(),Dr=Le.getLandmarksList(),or=Le.getClassificationsList(),jt=[],Bn=0;Bn<Jn.size();++Bn){var Yi=dt(Jn.get(Bn),Bo,Vo);Yi={boundingBox:{xCenter:kt(Yi,1),yCenter:kt(Yi,2),height:kt(Yi,3),width:kt(Yi,4),rotation:kt(Yi,5,0),rectId:fe(Yi,6)},landmarks:K(dt(Dr.get(Bn),Ki,Uo),Ir,1).map(C),V:E(dt(or.get(Bn),Ti,xn))},jt.push(Yi)}Jn=jt}else Jn=[];O[_e]=Jn,rn.g=7;break}if(Ie.type==="proto_list"){if(Le){for(Jn=Array(Le.size()),Dr=0;Dr<Le.size();Dr++)Jn[Dr]=Le.get(Dr);Le.delete()}else Jn=[];O[_e]=Jn,rn.g=7;break}if(Le===void 0){rn.g=3;break}if(Ie.type==="float_list"){O[_e]=Le,rn.g=7;break}if(Ie.type==="proto"){O[_e]=Le,rn.g=7;break}if(Ie.type!=="texture")throw Error("Unknown output config type: '"+Ie.type+"'");return(Ve=y.u[_e])||(Ve=new z(y.h,y.G),y.u[_e]=Ve),m(rn,ee(Ve,Le,y.I),13);case 13:yt=rn.h,O[_e]=yt;case 7:Ie.transform&&O[_e]&&(O[_e]=Ie.transform(O[_e])),rn.g=3;break;case 14:Rt[Qt]=rn.h;case 3:G=me.next(),rn.g=2;break;case 4:return rn.return(O)}})}function vt(y,T){for(var R=T.name||"$",O=[].concat(o(T.wants)),V=new y.h.StringList,U=a(T.wants),G=U.next();!G.done;G=U.next())V.push_back(G.value);U=y.h.PacketListener.implement({onResults:function(X){for(var re={},me=0;me<T.wants.length;++me)re[O[me]]=X.get(me);var _e=y.listeners[R];_e&&(y.D=It(y,re,T.outs).then(function(Ie){Ie=_e(Ie);for(var Le=0;Le<T.wants.length;++Le){var Ve=re[O[Le]];typeof Ve=="object"&&Ve.hasOwnProperty&&Ve.hasOwnProperty("delete")&&Ve.delete()}Ie&&(y.D=Ie)}))}}),y.i.attachMultiListener(V,U),V.delete()}function nt(y){var T=this;y=y||{};var R={url:"face_detection_short.binarypb"},O={type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"facedetectionshortrangegpu__facedetectionshortrangecommon__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}};this.g=new Ke({locateFile:y.locateFile,files:[{data:!0,url:"face_detection_short.binarypb"},{data:!0,url:"face_detection_short_range.tflite"},{simd:!0,url:"face_detection_solution_simd_wasm_bin.js"},{simd:!1,url:"face_detection_solution_wasm_bin.js"}],graph:R,listeners:[{wants:["detections","image_transformed"],outs:{image:"image_transformed",detections:{type:"detection_list",stream:"detections"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:typeof window=="object"&&window.navigator!==void 0&&("iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document)},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},model:{type:0,onChange:function(V){var U,G,X,re,me;return M(function(_e){switch(_e.g){case 1:U=a(V==="short"?["face_detection_short_range.tflite"]:["face_detection_full_range_sparse.tflite"]),G=U.next();case 2:if(G.done){_e.g=4;break}return X=G.value,re="third_party/mediapipe/modules/face_detection/"+X,m(_e,Vt(T.g,X),5);case 5:me=_e.h,T.g.overrideFile(re,me),G=U.next(),_e.g=2;break;case 4:return R.url=V==="short"?"face_detection_short.binarypb":"face_detection_full.binarypb",O.graphOptionXref.calculatorName=V==="short"?"facedetectionshortrangegpu__facedetectionshortrangecommon__TensorsToDetectionsCalculator":"facedetectionfullrangegpu__facedetectionfullrangecommon__TensorsToDetectionsCalculator",_e.return(!0)}})}},minDetectionConfidence:O}})}(n=Ke.prototype).close=function(){return this.i&&this.i.delete(),Promise.resolve()},n.reset=function(){var y=this;return M(function(T){y.i&&(y.i.reset(),y.o={},y.u={}),T.g=0})},n.setOptions=function(y,T){var R=this;if(T=T||this.g.options){for(var O=[],V=[],U={},G=a(Object.keys(y)),X=G.next();!X.done;U={R:U.R,S:U.S},X=G.next()){var re=X.value;re in this.j&&this.j[re]===y[re]||(this.j[re]=y[re],(X=T[re])!==void 0&&(X.onChange&&(U.R=X.onChange,U.S=y[re],O.push(function(me){return function(){return M(function(_e){if(_e.g==1)return m(_e,me.R(me.S),2);_e.h===!0&&(R.s=!0),_e.g=0})}}(U))),X.graphOptionXref&&(re={valueNumber:X.type===1?y[re]:0,valueBoolean:X.type===0&&y[re],valueString:X.type===2?y[re]:""},X=Object.assign(Object.assign(Object.assign({},{calculatorName:"",calculatorIndex:0}),X.graphOptionXref),re),V.push(X))))}O.length===0&&V.length===0||(this.s=!0,this.B=(this.B===void 0?[]:this.B).concat(V),this.A=(this.A===void 0?[]:this.A).concat(O))}},n.initialize=function(){var y=this;return M(function(T){return T.g==1?m(T,mt(y),2):T.g!=3?m(T,function(R){var O,V,U,G,X,re,me,_e;return M(function(Ie){if(Ie.g==1)return R.g.graph&&R.g.graph.url&&R.Y===R.g.graph.url?Ie.return():(R.s=!0,R.g.graph&&R.g.graph.url?(R.Y=R.g.graph.url,m(Ie,Vt(R,R.g.graph.url),3)):void(Ie.g=2));for(Ie.g!=2&&(O=Ie.h,R.i.loadGraph(O)),V=a(Object.keys(R.C)),U=V.next();!U.done;U=V.next())G=U.value,R.i.overrideFile(G,R.C[G]);if(R.C={},R.g.listeners)for(X=a(R.g.listeners),re=X.next();!re.done;re=X.next())me=re.value,vt(R,me);_e=R.j,R.j={},R.setOptions(_e),Ie.g=0})}(y),3):m(T,function(R){var O,V,U,G,X,re;return M(function(me){switch(me.g){case 1:if(!R.s)return me.return();if(!R.A){me.g=2;break}O=a(R.A),V=O.next();case 3:if(V.done){me.g=5;break}return m(me,(0,V.value)(),4);case 4:V=O.next(),me.g=3;break;case 5:R.A=void 0;case 2:if(R.B){for(U=new R.h.GraphOptionChangeRequestList,G=a(R.B),X=G.next();!X.done;X=G.next())re=X.value,U.push_back(re);R.i.changeOptions(U),U.delete(),R.B=void 0}R.s=!1,me.g=0}})}(y),0)})},n.overrideFile=function(y,T){this.i?this.i.overrideFile(y,T):this.C[y]=T},n.clearOverriddenFiles=function(){this.C={},this.i&&this.i.clearOverriddenFiles()},n.send=function(y,T){var R,O,V,U,G,X,re,me,_e,Ie=this;return M(function(Le){switch(Le.g){case 1:return Ie.g.inputs?(R=1e3*(T??performance.now()),m(Le,Ie.D,2)):Le.return();case 2:return m(Le,Ie.initialize(),3);case 3:for(O=new Ie.h.PacketDataList,V=a(Object.keys(y)),U=V.next();!U.done;U=V.next())if(G=U.value,X=Ie.g.inputs[G]){e:{var Ve=y[G];switch(X.type){case"video":var yt=Ie.o[X.stream];if(yt||(yt=new z(Ie.h,Ie.G),Ie.o[X.stream]=yt),yt.l===0&&(yt.l=yt.h.createTexture()),typeof HTMLVideoElement<"u"&&Ve instanceof HTMLVideoElement)var Rt=Ve.videoWidth,Qt=Ve.videoHeight;else typeof HTMLImageElement<"u"&&Ve instanceof HTMLImageElement?(Rt=Ve.naturalWidth,Qt=Ve.naturalHeight):(Rt=Ve.width,Qt=Ve.height);Qt={glName:yt.l,width:Rt,height:Qt},(Rt=yt.g).canvas.width=Qt.width,Rt.canvas.height=Qt.height,Rt.activeTexture(Rt.TEXTURE0),yt.h.bindTexture2d(yt.l),Rt.texImage2D(Rt.TEXTURE_2D,0,Rt.RGBA,Rt.RGBA,Rt.UNSIGNED_BYTE,Ve),yt.h.bindTexture2d(0),yt=Qt;break e;case"detections":for((yt=Ie.o[X.stream])||(yt=new pe(Ie.h),Ie.o[X.stream]=yt),yt.data||(yt.data=new yt.g.DetectionListData),yt.data.reset(Ve.length),Qt=0;Qt<Ve.length;++Qt){Rt=Ve[Qt];var rn=yt.data,Jn=rn.setBoundingBox,Dr=Qt,or=Rt.boundingBox,jt=new Bo;if(tt(jt,1,or.xCenter),tt(jt,2,or.yCenter),tt(jt,3,or.height),tt(jt,4,or.width),tt(jt,5,or.rotation),tt(jt,6,or.rectId),or=$t(jt,Vo),Jn.call(rn,Dr,or),Rt.landmarks)for(rn=0;rn<Rt.landmarks.length;++rn){var Bn=!!(jt=Rt.landmarks[rn]).visibility;Dr=(Jn=yt.data).addNormalizedLandmark,or=Qt,jt=Object.assign(Object.assign({},jt),{visibility:Bn?jt.visibility:0}),tt(Bn=new Ir,1,jt.x),tt(Bn,2,jt.y),tt(Bn,3,jt.z),jt.visibility&&tt(Bn,4,jt.visibility),jt=$t(Bn,Un),Dr.call(Jn,or,jt)}if(Rt.V)for(rn=0;rn<Rt.V.length;++rn)Dr=(Jn=yt.data).addClassification,or=Qt,jt=Rt.V[rn],tt(Bn=new ar,2,jt.ga),jt.index&&tt(Bn,1,jt.index),jt.label&&tt(Bn,3,jt.label),jt.displayName&&tt(Bn,4,jt.displayName),jt=$t(Bn,Nr),Dr.call(Jn,or,jt)}yt=yt.data;break e;default:yt={}}}switch(re=yt,me=X.stream,X.type){case"video":O.pushTexture2d(Object.assign(Object.assign({},re),{stream:me,timestamp:R}));break;case"detections":(_e=re).stream=me,_e.timestamp=R,O.pushDetectionList(_e);break;default:throw Error("Unknown input config type: '"+X.type+"'")}}return Ie.i.send(O),m(Le,Ie.D,4);case 4:O.delete(),Le.g=0}})},n.onResults=function(y,T){this.listeners[T||"$"]=y},N("Solution",Ke),N("OptionType",{BOOL:0,NUMBER:1,ia:2,0:"BOOL",1:"NUMBER",2:"STRING"}),(n=nt.prototype).close=function(){return this.g.close(),Promise.resolve()},n.onResults=function(y){this.g.onResults(y)},n.initialize=function(){var y=this;return M(function(T){return m(T,y.g.initialize(),0)})},n.reset=function(){this.g.reset()},n.send=function(y){var T=this;return M(function(R){return m(R,T.g.send(y),0)})},n.setOptions=function(y){this.g.setOptions(y)},N("FaceDetection",nt),N("FACEDETECTION_LIPS",zo),N("FACEDETECTION_LEFT_EYE",Go),N("FACEDETECTION_LEFT_EYEBROW",Wo),N("FACEDETECTION_RIGHT_EYE",Ho),N("FACEDETECTION_RIGHT_EYEBROW",Xo),N("FACEDETECTION_FACE_OVAL",Fc),N("FACEDETECTION_CONTOURS",Uc),N("FACEDETECTION_TESSELATION",[[127,34],[34,139],[139,127],[11,0],[0,37],[37,11],[232,231],[231,120],[120,232],[72,37],[37,39],[39,72],[128,121],[121,47],[47,128],[232,121],[121,128],[128,232],[104,69],[69,67],[67,104],[175,171],[171,148],[148,175],[118,50],[50,101],[101,118],[73,39],[39,40],[40,73],[9,151],[151,108],[108,9],[48,115],[115,131],[131,48],[194,204],[204,211],[211,194],[74,40],[40,185],[185,74],[80,42],[42,183],[183,80],[40,92],[92,186],[186,40],[230,229],[229,118],[118,230],[202,212],[212,214],[214,202],[83,18],[18,17],[17,83],[76,61],[61,146],[146,76],[160,29],[29,30],[30,160],[56,157],[157,173],[173,56],[106,204],[204,194],[194,106],[135,214],[214,192],[192,135],[203,165],[165,98],[98,203],[21,71],[71,68],[68,21],[51,45],[45,4],[4,51],[144,24],[24,23],[23,144],[77,146],[146,91],[91,77],[205,50],[50,187],[187,205],[201,200],[200,18],[18,201],[91,106],[106,182],[182,91],[90,91],[91,181],[181,90],[85,84],[84,17],[17,85],[206,203],[203,36],[36,206],[148,171],[171,140],[140,148],[92,40],[40,39],[39,92],[193,189],[189,244],[244,193],[159,158],[158,28],[28,159],[247,246],[246,161],[161,247],[236,3],[3,196],[196,236],[54,68],[68,104],[104,54],[193,168],[168,8],[8,193],[117,228],[228,31],[31,117],[189,193],[193,55],[55,189],[98,97],[97,99],[99,98],[126,47],[47,100],[100,126],[166,79],[79,218],[218,166],[155,154],[154,26],[26,155],[209,49],[49,131],[131,209],[135,136],[136,150],[150,135],[47,126],[126,217],[217,47],[223,52],[52,53],[53,223],[45,51],[51,134],[134,45],[211,170],[170,140],[140,211],[67,69],[69,108],[108,67],[43,106],[106,91],[91,43],[230,119],[119,120],[120,230],[226,130],[130,247],[247,226],[63,53],[53,52],[52,63],[238,20],[20,242],[242,238],[46,70],[70,156],[156,46],[78,62],[62,96],[96,78],[46,53],[53,63],[63,46],[143,34],[34,227],[227,143],[123,117],[117,111],[111,123],[44,125],[125,19],[19,44],[236,134],[134,51],[51,236],[216,206],[206,205],[205,216],[154,153],[153,22],[22,154],[39,37],[37,167],[167,39],[200,201],[201,208],[208,200],[36,142],[142,100],[100,36],[57,212],[212,202],[202,57],[20,60],[60,99],[99,20],[28,158],[158,157],[157,28],[35,226],[226,113],[113,35],[160,159],[159,27],[27,160],[204,202],[202,210],[210,204],[113,225],[225,46],[46,113],[43,202],[202,204],[204,43],[62,76],[76,77],[77,62],[137,123],[123,116],[116,137],[41,38],[38,72],[72,41],[203,129],[129,142],[142,203],[64,98],[98,240],[240,64],[49,102],[102,64],[64,49],[41,73],[73,74],[74,41],[212,216],[216,207],[207,212],[42,74],[74,184],[184,42],[169,170],[170,211],[211,169],[170,149],[149,176],[176,170],[105,66],[66,69],[69,105],[122,6],[6,168],[168,122],[123,147],[147,187],[187,123],[96,77],[77,90],[90,96],[65,55],[55,107],[107,65],[89,90],[90,180],[180,89],[101,100],[100,120],[120,101],[63,105],[105,104],[104,63],[93,137],[137,227],[227,93],[15,86],[86,85],[85,15],[129,102],[102,49],[49,129],[14,87],[87,86],[86,14],[55,8],[8,9],[9,55],[100,47],[47,121],[121,100],[145,23],[23,22],[22,145],[88,89],[89,179],[179,88],[6,122],[122,196],[196,6],[88,95],[95,96],[96,88],[138,172],[172,136],[136,138],[215,58],[58,172],[172,215],[115,48],[48,219],[219,115],[42,80],[80,81],[81,42],[195,3],[3,51],[51,195],[43,146],[146,61],[61,43],[171,175],[175,199],[199,171],[81,82],[82,38],[38,81],[53,46],[46,225],[225,53],[144,163],[163,110],[110,144],[52,65],[65,66],[66,52],[229,228],[228,117],[117,229],[34,127],[127,234],[234,34],[107,108],[108,69],[69,107],[109,108],[108,151],[151,109],[48,64],[64,235],[235,48],[62,78],[78,191],[191,62],[129,209],[209,126],[126,129],[111,35],[35,143],[143,111],[117,123],[123,50],[50,117],[222,65],[65,52],[52,222],[19,125],[125,141],[141,19],[221,55],[55,65],[65,221],[3,195],[195,197],[197,3],[25,7],[7,33],[33,25],[220,237],[237,44],[44,220],[70,71],[71,139],[139,70],[122,193],[193,245],[245,122],[247,130],[130,33],[33,247],[71,21],[21,162],[162,71],[170,169],[169,150],[150,170],[188,174],[174,196],[196,188],[216,186],[186,92],[92,216],[2,97],[97,167],[167,2],[141,125],[125,241],[241,141],[164,167],[167,37],[37,164],[72,38],[38,12],[12,72],[38,82],[82,13],[13,38],[63,68],[68,71],[71,63],[226,35],[35,111],[111,226],[101,50],[50,205],[205,101],[206,92],[92,165],[165,206],[209,198],[198,217],[217,209],[165,167],[167,97],[97,165],[220,115],[115,218],[218,220],[133,112],[112,243],[243,133],[239,238],[238,241],[241,239],[214,135],[135,169],[169,214],[190,173],[173,133],[133,190],[171,208],[208,32],[32,171],[125,44],[44,237],[237,125],[86,87],[87,178],[178,86],[85,86],[86,179],[179,85],[84,85],[85,180],[180,84],[83,84],[84,181],[181,83],[201,83],[83,182],[182,201],[137,93],[93,132],[132,137],[76,62],[62,183],[183,76],[61,76],[76,184],[184,61],[57,61],[61,185],[185,57],[212,57],[57,186],[186,212],[214,207],[207,187],[187,214],[34,143],[143,156],[156,34],[79,239],[239,237],[237,79],[123,137],[137,177],[177,123],[44,1],[1,4],[4,44],[201,194],[194,32],[32,201],[64,102],[102,129],[129,64],[213,215],[215,138],[138,213],[59,166],[166,219],[219,59],[242,99],[99,97],[97,242],[2,94],[94,141],[141,2],[75,59],[59,235],[235,75],[24,110],[110,228],[228,24],[25,130],[130,226],[226,25],[23,24],[24,229],[229,23],[22,23],[23,230],[230,22],[26,22],[22,231],[231,26],[112,26],[26,232],[232,112],[189,190],[190,243],[243,189],[221,56],[56,190],[190,221],[28,56],[56,221],[221,28],[27,28],[28,222],[222,27],[29,27],[27,223],[223,29],[30,29],[29,224],[224,30],[247,30],[30,225],[225,247],[238,79],[79,20],[20,238],[166,59],[59,75],[75,166],[60,75],[75,240],[240,60],[147,177],[177,215],[215,147],[20,79],[79,166],[166,20],[187,147],[147,213],[213,187],[112,233],[233,244],[244,112],[233,128],[128,245],[245,233],[128,114],[114,188],[188,128],[114,217],[217,174],[174,114],[131,115],[115,220],[220,131],[217,198],[198,236],[236,217],[198,131],[131,134],[134,198],[177,132],[132,58],[58,177],[143,35],[35,124],[124,143],[110,163],[163,7],[7,110],[228,110],[110,25],[25,228],[356,389],[389,368],[368,356],[11,302],[302,267],[267,11],[452,350],[350,349],[349,452],[302,303],[303,269],[269,302],[357,343],[343,277],[277,357],[452,453],[453,357],[357,452],[333,332],[332,297],[297,333],[175,152],[152,377],[377,175],[347,348],[348,330],[330,347],[303,304],[304,270],[270,303],[9,336],[336,337],[337,9],[278,279],[279,360],[360,278],[418,262],[262,431],[431,418],[304,408],[408,409],[409,304],[310,415],[415,407],[407,310],[270,409],[409,410],[410,270],[450,348],[348,347],[347,450],[422,430],[430,434],[434,422],[313,314],[314,17],[17,313],[306,307],[307,375],[375,306],[387,388],[388,260],[260,387],[286,414],[414,398],[398,286],[335,406],[406,418],[418,335],[364,367],[367,416],[416,364],[423,358],[358,327],[327,423],[251,284],[284,298],[298,251],[281,5],[5,4],[4,281],[373,374],[374,253],[253,373],[307,320],[320,321],[321,307],[425,427],[427,411],[411,425],[421,313],[313,18],[18,421],[321,405],[405,406],[406,321],[320,404],[404,405],[405,320],[315,16],[16,17],[17,315],[426,425],[425,266],[266,426],[377,400],[400,369],[369,377],[322,391],[391,269],[269,322],[417,465],[465,464],[464,417],[386,257],[257,258],[258,386],[466,260],[260,388],[388,466],[456,399],[399,419],[419,456],[284,332],[332,333],[333,284],[417,285],[285,8],[8,417],[346,340],[340,261],[261,346],[413,441],[441,285],[285,413],[327,460],[460,328],[328,327],[355,371],[371,329],[329,355],[392,439],[439,438],[438,392],[382,341],[341,256],[256,382],[429,420],[420,360],[360,429],[364,394],[394,379],[379,364],[277,343],[343,437],[437,277],[443,444],[444,283],[283,443],[275,440],[440,363],[363,275],[431,262],[262,369],[369,431],[297,338],[338,337],[337,297],[273,375],[375,321],[321,273],[450,451],[451,349],[349,450],[446,342],[342,467],[467,446],[293,334],[334,282],[282,293],[458,461],[461,462],[462,458],[276,353],[353,383],[383,276],[308,324],[324,325],[325,308],[276,300],[300,293],[293,276],[372,345],[345,447],[447,372],[352,345],[345,340],[340,352],[274,1],[1,19],[19,274],[456,248],[248,281],[281,456],[436,427],[427,425],[425,436],[381,256],[256,252],[252,381],[269,391],[391,393],[393,269],[200,199],[199,428],[428,200],[266,330],[330,329],[329,266],[287,273],[273,422],[422,287],[250,462],[462,328],[328,250],[258,286],[286,384],[384,258],[265,353],[353,342],[342,265],[387,259],[259,257],[257,387],[424,431],[431,430],[430,424],[342,353],[353,276],[276,342],[273,335],[335,424],[424,273],[292,325],[325,307],[307,292],[366,447],[447,345],[345,366],[271,303],[303,302],[302,271],[423,266],[266,371],[371,423],[294,455],[455,460],[460,294],[279,278],[278,294],[294,279],[271,272],[272,304],[304,271],[432,434],[434,427],[427,432],[272,407],[407,408],[408,272],[394,430],[430,431],[431,394],[395,369],[369,400],[400,395],[334,333],[333,299],[299,334],[351,417],[417,168],[168,351],[352,280],[280,411],[411,352],[325,319],[319,320],[320,325],[295,296],[296,336],[336,295],[319,403],[403,404],[404,319],[330,348],[348,349],[349,330],[293,298],[298,333],[333,293],[323,454],[454,447],[447,323],[15,16],[16,315],[315,15],[358,429],[429,279],[279,358],[14,15],[15,316],[316,14],[285,336],[336,9],[9,285],[329,349],[349,350],[350,329],[374,380],[380,252],[252,374],[318,402],[402,403],[403,318],[6,197],[197,419],[419,6],[318,319],[319,325],[325,318],[367,364],[364,365],[365,367],[435,367],[367,397],[397,435],[344,438],[438,439],[439,344],[272,271],[271,311],[311,272],[195,5],[5,281],[281,195],[273,287],[287,291],[291,273],[396,428],[428,199],[199,396],[311,271],[271,268],[268,311],[283,444],[444,445],[445,283],[373,254],[254,339],[339,373],[282,334],[334,296],[296,282],[449,347],[347,346],[346,449],[264,447],[447,454],[454,264],[336,296],[296,299],[299,336],[338,10],[10,151],[151,338],[278,439],[439,455],[455,278],[292,407],[407,415],[415,292],[358,371],[371,355],[355,358],[340,345],[345,372],[372,340],[346,347],[347,280],[280,346],[442,443],[443,282],[282,442],[19,94],[94,370],[370,19],[441,442],[442,295],[295,441],[248,419],[419,197],[197,248],[263,255],[255,359],[359,263],[440,275],[275,274],[274,440],[300,383],[383,368],[368,300],[351,412],[412,465],[465,351],[263,467],[467,466],[466,263],[301,368],[368,389],[389,301],[395,378],[378,379],[379,395],[412,351],[351,419],[419,412],[436,426],[426,322],[322,436],[2,164],[164,393],[393,2],[370,462],[462,461],[461,370],[164,0],[0,267],[267,164],[302,11],[11,12],[12,302],[268,12],[12,13],[13,268],[293,300],[300,301],[301,293],[446,261],[261,340],[340,446],[330,266],[266,425],[425,330],[426,423],[423,391],[391,426],[429,355],[355,437],[437,429],[391,327],[327,326],[326,391],[440,457],[457,438],[438,440],[341,382],[382,362],[362,341],[459,457],[457,461],[461,459],[434,430],[430,394],[394,434],[414,463],[463,362],[362,414],[396,369],[369,262],[262,396],[354,461],[461,457],[457,354],[316,403],[403,402],[402,316],[315,404],[404,403],[403,315],[314,405],[405,404],[404,314],[313,406],[406,405],[405,313],[421,418],[418,406],[406,421],[366,401],[401,361],[361,366],[306,408],[408,407],[407,306],[291,409],[409,408],[408,291],[287,410],[410,409],[409,287],[432,436],[436,410],[410,432],[434,416],[416,411],[411,434],[264,368],[368,383],[383,264],[309,438],[438,457],[457,309],[352,376],[376,401],[401,352],[274,275],[275,4],[4,274],[421,428],[428,262],[262,421],[294,327],[327,358],[358,294],[433,416],[416,367],[367,433],[289,455],[455,439],[439,289],[462,370],[370,326],[326,462],[2,326],[326,370],[370,2],[305,460],[460,455],[455,305],[254,449],[449,448],[448,254],[255,261],[261,446],[446,255],[253,450],[450,449],[449,253],[252,451],[451,450],[450,252],[256,452],[452,451],[451,256],[341,453],[453,452],[452,341],[413,464],[464,463],[463,413],[441,413],[413,414],[414,441],[258,442],[442,441],[441,258],[257,443],[443,442],[442,257],[259,444],[444,443],[443,259],[260,445],[445,444],[444,260],[467,342],[342,445],[445,467],[459,458],[458,250],[250,459],[289,392],[392,290],[290,289],[290,328],[328,460],[460,290],[376,433],[433,435],[435,376],[250,290],[290,392],[392,250],[411,416],[416,433],[433,411],[341,463],[463,464],[464,341],[453,464],[464,465],[465,453],[357,465],[465,412],[412,357],[343,412],[412,399],[399,343],[360,363],[363,440],[440,360],[437,399],[399,456],[456,437],[420,456],[456,363],[363,420],[401,435],[435,288],[288,401],[372,383],[383,353],[353,372],[339,255],[255,249],[249,339],[448,261],[261,255],[255,448],[133,243],[243,190],[190,133],[133,155],[155,112],[112,133],[33,246],[246,247],[247,33],[33,130],[130,25],[25,33],[398,384],[384,286],[286,398],[362,398],[398,414],[414,362],[362,463],[463,341],[341,362],[263,359],[359,467],[467,263],[263,249],[249,255],[255,263],[466,467],[467,260],[260,466],[75,60],[60,166],[166,75],[238,239],[239,79],[79,238],[162,127],[127,139],[139,162],[72,11],[11,37],[37,72],[121,232],[232,120],[120,121],[73,72],[72,39],[39,73],[114,128],[128,47],[47,114],[233,232],[232,128],[128,233],[103,104],[104,67],[67,103],[152,175],[175,148],[148,152],[119,118],[118,101],[101,119],[74,73],[73,40],[40,74],[107,9],[9,108],[108,107],[49,48],[48,131],[131,49],[32,194],[194,211],[211,32],[184,74],[74,185],[185,184],[191,80],[80,183],[183,191],[185,40],[40,186],[186,185],[119,230],[230,118],[118,119],[210,202],[202,214],[214,210],[84,83],[83,17],[17,84],[77,76],[76,146],[146,77],[161,160],[160,30],[30,161],[190,56],[56,173],[173,190],[182,106],[106,194],[194,182],[138,135],[135,192],[192,138],[129,203],[203,98],[98,129],[54,21],[21,68],[68,54],[5,51],[51,4],[4,5],[145,144],[144,23],[23,145],[90,77],[77,91],[91,90],[207,205],[205,187],[187,207],[83,201],[201,18],[18,83],[181,91],[91,182],[182,181],[180,90],[90,181],[181,180],[16,85],[85,17],[17,16],[205,206],[206,36],[36,205],[176,148],[148,140],[140,176],[165,92],[92,39],[39,165],[245,193],[193,244],[244,245],[27,159],[159,28],[28,27],[30,247],[247,161],[161,30],[174,236],[236,196],[196,174],[103,54],[54,104],[104,103],[55,193],[193,8],[8,55],[111,117],[117,31],[31,111],[221,189],[189,55],[55,221],[240,98],[98,99],[99,240],[142,126],[126,100],[100,142],[219,166],[166,218],[218,219],[112,155],[155,26],[26,112],[198,209],[209,131],[131,198],[169,135],[135,150],[150,169],[114,47],[47,217],[217,114],[224,223],[223,53],[53,224],[220,45],[45,134],[134,220],[32,211],[211,140],[140,32],[109,67],[67,108],[108,109],[146,43],[43,91],[91,146],[231,230],[230,120],[120,231],[113,226],[226,247],[247,113],[105,63],[63,52],[52,105],[241,238],[238,242],[242,241],[124,46],[46,156],[156,124],[95,78],[78,96],[96,95],[70,46],[46,63],[63,70],[116,143],[143,227],[227,116],[116,123],[123,111],[111,116],[1,44],[44,19],[19,1],[3,236],[236,51],[51,3],[207,216],[216,205],[205,207],[26,154],[154,22],[22,26],[165,39],[39,167],[167,165],[199,200],[200,208],[208,199],[101,36],[36,100],[100,101],[43,57],[57,202],[202,43],[242,20],[20,99],[99,242],[56,28],[28,157],[157,56],[124,35],[35,113],[113,124],[29,160],[160,27],[27,29],[211,204],[204,210],[210,211],[124,113],[113,46],[46,124],[106,43],[43,204],[204,106],[96,62],[62,77],[77,96],[227,137],[137,116],[116,227],[73,41],[41,72],[72,73],[36,203],[203,142],[142,36],[235,64],[64,240],[240,235],[48,49],[49,64],[64,48],[42,41],[41,74],[74,42],[214,212],[212,207],[207,214],[183,42],[42,184],[184,183],[210,169],[169,211],[211,210],[140,170],[170,176],[176,140],[104,105],[105,69],[69,104],[193,122],[122,168],[168,193],[50,123],[123,187],[187,50],[89,96],[96,90],[90,89],[66,65],[65,107],[107,66],[179,89],[89,180],[180,179],[119,101],[101,120],[120,119],[68,63],[63,104],[104,68],[234,93],[93,227],[227,234],[16,15],[15,85],[85,16],[209,129],[129,49],[49,209],[15,14],[14,86],[86,15],[107,55],[55,9],[9,107],[120,100],[100,121],[121,120],[153,145],[145,22],[22,153],[178,88],[88,179],[179,178],[197,6],[6,196],[196,197],[89,88],[88,96],[96,89],[135,138],[138,136],[136,135],[138,215],[215,172],[172,138],[218,115],[115,219],[219,218],[41,42],[42,81],[81,41],[5,195],[195,51],[51,5],[57,43],[43,61],[61,57],[208,171],[171,199],[199,208],[41,81],[81,38],[38,41],[224,53],[53,225],[225,224],[24,144],[144,110],[110,24],[105,52],[52,66],[66,105],[118,229],[229,117],[117,118],[227,34],[34,234],[234,227],[66,107],[107,69],[69,66],[10,109],[109,151],[151,10],[219,48],[48,235],[235,219],[183,62],[62,191],[191,183],[142,129],[129,126],[126,142],[116,111],[111,143],[143,116],[118,117],[117,50],[50,118],[223,222],[222,52],[52,223],[94,19],[19,141],[141,94],[222,221],[221,65],[65,222],[196,3],[3,197],[197,196],[45,220],[220,44],[44,45],[156,70],[70,139],[139,156],[188,122],[122,245],[245,188],[139,71],[71,162],[162,139],[149,170],[170,150],[150,149],[122,188],[188,196],[196,122],[206,216],[216,92],[92,206],[164,2],[2,167],[167,164],[242,141],[141,241],[241,242],[0,164],[164,37],[37,0],[11,72],[72,12],[12,11],[12,38],[38,13],[13,12],[70,63],[63,71],[71,70],[31,226],[226,111],[111,31],[36,101],[101,205],[205,36],[203,206],[206,165],[165,203],[126,209],[209,217],[217,126],[98,165],[165,97],[97,98],[237,220],[220,218],[218,237],[237,239],[239,241],[241,237],[210,214],[214,169],[169,210],[140,171],[171,32],[32,140],[241,125],[125,237],[237,241],[179,86],[86,178],[178,179],[180,85],[85,179],[179,180],[181,84],[84,180],[180,181],[182,83],[83,181],[181,182],[194,201],[201,182],[182,194],[177,137],[137,132],[132,177],[184,76],[76,183],[183,184],[185,61],[61,184],[184,185],[186,57],[57,185],[185,186],[216,212],[212,186],[186,216],[192,214],[214,187],[187,192],[139,34],[34,156],[156,139],[218,79],[79,237],[237,218],[147,123],[123,177],[177,147],[45,44],[44,4],[4,45],[208,201],[201,32],[32,208],[98,64],[64,129],[129,98],[192,213],[213,138],[138,192],[235,59],[59,219],[219,235],[141,242],[242,97],[97,141],[97,2],[2,141],[141,97],[240,75],[75,235],[235,240],[229,24],[24,228],[228,229],[31,25],[25,226],[226,31],[230,23],[23,229],[229,230],[231,22],[22,230],[230,231],[232,26],[26,231],[231,232],[233,112],[112,232],[232,233],[244,189],[189,243],[243,244],[189,221],[221,190],[190,189],[222,28],[28,221],[221,222],[223,27],[27,222],[222,223],[224,29],[29,223],[223,224],[225,30],[30,224],[224,225],[113,247],[247,225],[225,113],[99,60],[60,240],[240,99],[213,147],[147,215],[215,213],[60,20],[20,166],[166,60],[192,187],[187,213],[213,192],[243,112],[112,244],[244,243],[244,233],[233,245],[245,244],[245,128],[128,188],[188,245],[188,114],[114,174],[174,188],[134,131],[131,220],[220,134],[174,217],[217,236],[236,174],[236,198],[198,134],[134,236],[215,177],[177,58],[58,215],[156,143],[143,124],[124,156],[25,110],[110,7],[7,25],[31,228],[228,25],[25,31],[264,356],[356,368],[368,264],[0,11],[11,267],[267,0],[451,452],[452,349],[349,451],[267,302],[302,269],[269,267],[350,357],[357,277],[277,350],[350,452],[452,357],[357,350],[299,333],[333,297],[297,299],[396,175],[175,377],[377,396],[280,347],[347,330],[330,280],[269,303],[303,270],[270,269],[151,9],[9,337],[337,151],[344,278],[278,360],[360,344],[424,418],[418,431],[431,424],[270,304],[304,409],[409,270],[272,310],[310,407],[407,272],[322,270],[270,410],[410,322],[449,450],[450,347],[347,449],[432,422],[422,434],[434,432],[18,313],[313,17],[17,18],[291,306],[306,375],[375,291],[259,387],[387,260],[260,259],[424,335],[335,418],[418,424],[434,364],[364,416],[416,434],[391,423],[423,327],[327,391],[301,251],[251,298],[298,301],[275,281],[281,4],[4,275],[254,373],[373,253],[253,254],[375,307],[307,321],[321,375],[280,425],[425,411],[411,280],[200,421],[421,18],[18,200],[335,321],[321,406],[406,335],[321,320],[320,405],[405,321],[314,315],[315,17],[17,314],[423,426],[426,266],[266,423],[396,377],[377,369],[369,396],[270,322],[322,269],[269,270],[413,417],[417,464],[464,413],[385,386],[386,258],[258,385],[248,456],[456,419],[419,248],[298,284],[284,333],[333,298],[168,417],[417,8],[8,168],[448,346],[346,261],[261,448],[417,413],[413,285],[285,417],[326,327],[327,328],[328,326],[277,355],[355,329],[329,277],[309,392],[392,438],[438,309],[381,382],[382,256],[256,381],[279,429],[429,360],[360,279],[365,364],[364,379],[379,365],[355,277],[277,437],[437,355],[282,443],[443,283],[283,282],[281,275],[275,363],[363,281],[395,431],[431,369],[369,395],[299,297],[297,337],[337,299],[335,273],[273,321],[321,335],[348,450],[450,349],[349,348],[359,446],[446,467],[467,359],[283,293],[293,282],[282,283],[250,458],[458,462],[462,250],[300,276],[276,383],[383,300],[292,308],[308,325],[325,292],[283,276],[276,293],[293,283],[264,372],[372,447],[447,264],[346,352],[352,340],[340,346],[354,274],[274,19],[19,354],[363,456],[456,281],[281,363],[426,436],[436,425],[425,426],[380,381],[381,252],[252,380],[267,269],[269,393],[393,267],[421,200],[200,428],[428,421],[371,266],[266,329],[329,371],[432,287],[287,422],[422,432],[290,250],[250,328],[328,290],[385,258],[258,384],[384,385],[446,265],[265,342],[342,446],[386,387],[387,257],[257,386],[422,424],[424,430],[430,422],[445,342],[342,276],[276,445],[422,273],[273,424],[424,422],[306,292],[292,307],[307,306],[352,366],[366,345],[345,352],[268,271],[271,302],[302,268],[358,423],[423,371],[371,358],[327,294],[294,460],[460,327],[331,279],[279,294],[294,331],[303,271],[271,304],[304,303],[436,432],[432,427],[427,436],[304,272],[272,408],[408,304],[395,394],[394,431],[431,395],[378,395],[395,400],[400,378],[296,334],[334,299],[299,296],[6,351],[351,168],[168,6],[376,352],[352,411],[411,376],[307,325],[325,320],[320,307],[285,295],[295,336],[336,285],[320,319],[319,404],[404,320],[329,330],[330,349],[349,329],[334,293],[293,333],[333,334],[366,323],[323,447],[447,366],[316,15],[15,315],[315,316],[331,358],[358,279],[279,331],[317,14],[14,316],[316,317],[8,285],[285,9],[9,8],[277,329],[329,350],[350,277],[253,374],[374,252],[252,253],[319,318],[318,403],[403,319],[351,6],[6,419],[419,351],[324,318],[318,325],[325,324],[397,367],[367,365],[365,397],[288,435],[435,397],[397,288],[278,344],[344,439],[439,278],[310,272],[272,311],[311,310],[248,195],[195,281],[281,248],[375,273],[273,291],[291,375],[175,396],[396,199],[199,175],[312,311],[311,268],[268,312],[276,283],[283,445],[445,276],[390,373],[373,339],[339,390],[295,282],[282,296],[296,295],[448,449],[449,346],[346,448],[356,264],[264,454],[454,356],[337,336],[336,299],[299,337],[337,338],[338,151],[151,337],[294,278],[278,455],[455,294],[308,292],[292,415],[415,308],[429,358],[358,355],[355,429],[265,340],[340,372],[372,265],[352,346],[346,280],[280,352],[295,442],[442,282],[282,295],[354,19],[19,370],[370,354],[285,441],[441,295],[295,285],[195,248],[248,197],[197,195],[457,440],[440,274],[274,457],[301,300],[300,368],[368,301],[417,351],[351,465],[465,417],[251,301],[301,389],[389,251],[394,395],[395,379],[379,394],[399,412],[412,419],[419,399],[410,436],[436,322],[322,410],[326,2],[2,393],[393,326],[354,370],[370,461],[461,354],[393,164],[164,267],[267,393],[268,302],[302,12],[12,268],[312,268],[268,13],[13,312],[298,293],[293,301],[301,298],[265,446],[446,340],[340,265],[280,330],[330,425],[425,280],[322,426],[426,391],[391,322],[420,429],[429,437],[437,420],[393,391],[391,326],[326,393],[344,440],[440,438],[438,344],[458,459],[459,461],[461,458],[364,434],[434,394],[394,364],[428,396],[396,262],[262,428],[274,354],[354,457],[457,274],[317,316],[316,402],[402,317],[316,315],[315,403],[403,316],[315,314],[314,404],[404,315],[314,313],[313,405],[405,314],[313,421],[421,406],[406,313],[323,366],[366,361],[361,323],[292,306],[306,407],[407,292],[306,291],[291,408],[408,306],[291,287],[287,409],[409,291],[287,432],[432,410],[410,287],[427,434],[434,411],[411,427],[372,264],[264,383],[383,372],[459,309],[309,457],[457,459],[366,352],[352,401],[401,366],[1,274],[274,4],[4,1],[418,421],[421,262],[262,418],[331,294],[294,358],[358,331],[435,433],[433,367],[367,435],[392,289],[289,439],[439,392],[328,462],[462,326],[326,328],[94,2],[2,370],[370,94],[289,305],[305,455],[455,289],[339,254],[254,448],[448,339],[359,255],[255,446],[446,359],[254,253],[253,449],[449,254],[253,252],[252,450],[450,253],[252,256],[256,451],[451,252],[256,341],[341,452],[452,256],[414,413],[413,463],[463,414],[286,441],[441,414],[414,286],[286,258],[258,441],[441,286],[258,257],[257,442],[442,258],[257,259],[259,443],[443,257],[259,260],[260,444],[444,259],[260,467],[467,445],[445,260],[309,459],[459,250],[250,309],[305,289],[289,290],[290,305],[305,290],[290,460],[460,305],[401,376],[376,435],[435,401],[309,250],[250,392],[392,309],[376,411],[411,433],[433,376],[453,341],[341,464],[464,453],[357,453],[453,465],[465,357],[343,357],[357,412],[412,343],[437,343],[343,399],[399,437],[344,360],[360,440],[440,344],[420,437],[437,456],[456,420],[360,420],[420,363],[363,360],[361,401],[401,288],[288,361],[265,372],[372,353],[353,265],[390,339],[339,249],[249,390],[339,448],[448,255],[255,339]]),N("VERSION","0.4.1646425229")}).call(Eh);var ws=function(){return ws=Object.assign||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var i in e=arguments[t])Object.prototype.hasOwnProperty.call(e,i)&&(n[i]=e[i]);return n},ws.apply(this,arguments)};function Gi(n,e,t,r){return new(t||(t=Promise))(function(i,s){function a(l){try{c(r.next(l))}catch(u){s(u)}}function o(l){try{c(r.throw(l))}catch(u){s(u)}}function c(l){var u;l.done?i(l.value):(u=l.value,u instanceof t?u:new t(function(h){h(u)})).then(a,o)}c((r=r.apply(n,[])).next())})}function Wi(n,e){var t,r,i,s,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return s={next:o(0),throw:o(1),return:o(2)},typeof Symbol=="function"&&(s[Symbol.iterator]=function(){return this}),s;function o(c){return function(l){return function(u){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(i=2&u[0]?r.return:u[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,u[1])).done)return i;switch(r=0,i&&(u=[2&u[0],i.value]),u[0]){case 0:case 1:i=u;break;case 4:return a.label++,{value:u[1],done:!1};case 5:a.label++,r=u[1],u=[0];continue;case 7:u=a.ops.pop(),a.trys.pop();continue;default:if(!((i=(i=a.trys).length>0&&i[i.length-1])||u[0]!==6&&u[0]!==2)){a=0;continue}if(u[0]===3&&(!i||u[1]>i[0]&&u[1]<i[3])){a.label=u[1];break}if(u[0]===6&&a.label<i[1]){a.label=i[1],i=u;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(u);break}i[2]&&a.ops.pop(),a.trys.pop();continue}u=e.call(n,a)}catch(h){u=[6,h],r=0}finally{t=i=0}if(5&u[0])throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}([c,l])}}}var b3=["rightEye","leftEye","noseTip","mouthCenter","rightEarTragion","leftEarTragion"],Th={modelType:"short",runtime:"mediapipe",maxFaces:1},uH=function(){function n(e){var t=this;this.width=0,this.height=0,this.selfieMode=!1,this.faceDetectorSolution=new lH.FaceDetection({locateFile:function(r,i){return e.solutionPath?e.solutionPath.replace(/\/+$/,"")+"/"+r:i+"/"+r}}),this.faceDetectorSolution.setOptions({selfieMode:this.selfieMode,model:e.modelType}),this.faceDetectorSolution.onResults(function(r){if(t.height=r.image.height,t.width=r.image.width,t.faces=[],r.detections!==null)for(var i=0,s=r.detections;i<s.length;i++){var a=s[i];t.faces.push(t.normalizedToAbsolute(a.landmarks,{xMin:c=(o=a.boundingBox).xCenter-o.width/2,xMax:c+o.width,yMin:l=o.yCenter-o.height/2,yMax:l+o.height,width:o.width,height:o.height}))}var o,c,l})}return n.prototype.normalizedToAbsolute=function(e,t){var r=this;return{keypoints:e.map(function(i,s){return{x:i.x*r.width,y:i.y*r.height,name:b3[s]}}),box:{xMin:t.xMin*this.width,yMin:t.yMin*this.height,xMax:t.xMax*this.width,yMax:t.yMax*this.height,width:t.width*this.width,height:t.height*this.height}}},n.prototype.estimateFaces=function(e,t){return Gi(this,void 0,void 0,function(){var r,i;return Wi(this,function(s){switch(s.label){case 0:return t&&t.flipHorizontal&&t.flipHorizontal!==this.selfieMode&&(this.selfieMode=t.flipHorizontal,this.faceDetectorSolution.setOptions({selfieMode:this.selfieMode})),e instanceof mn?(i=ImageData.bind,[4,Ty(e)]):[3,2];case 1:return r=new(i.apply(ImageData,[void 0,s.sent(),e.shape[1],e.shape[0]])),[3,3];case 2:r=e,s.label=3;case 3:return e=r,[4,this.faceDetectorSolution.send({image:e})];case 4:return s.sent(),[2,this.faces]}})})},n.prototype.dispose=function(){this.faceDetectorSolution.close()},n.prototype.reset=function(){this.faceDetectorSolution.reset(),this.width=0,this.height=0,this.faces=null,this.selfieMode=!1},n.prototype.initialize=function(){return this.faceDetectorSolution.initialize()},n}();function hH(n){return Gi(this,void 0,void 0,function(){var e,t;return Wi(this,function(r){switch(r.label){case 0:return e=function(i){if(i==null)return ws({},Th);var s=ws({},i);return s.runtime="mediapipe",s.modelType==null&&(s.modelType=Th.modelType),s.maxFaces==null&&(s.maxFaces=Th.maxFaces),s}(n),[4,(t=new uH(e)).initialize()];case 1:return r.sent(),[2,t]}})})}function S3(n){return n instanceof mn?{height:n.shape[0],width:n.shape[1]}:{height:n.height,width:n.width}}function w3(n){return n instanceof mn?n:Cy(n)}function Ch(n,e){k(n.width!==0,function(){return e+" width cannot be 0."}),k(n.height!==0,function(){return e+" height cannot be 0."})}function dH(n,e,t){var r=e.outputTensorSize,i=e.keepAspectRatio,s=e.borderMode,a=e.outputTensorFloatRange,o=S3(n),c=function(d,f){return{xCenter:.5*d.width,yCenter:.5*d.height,width:d.width,height:d.height,rotation:0}}(o),l=function(d,f,p){if(p===void 0&&(p=!1),!p)return{top:0,left:0,right:0,bottom:0};var x=f.height,g=f.width;Ch(f,"targetSize"),Ch(d,"roi");var m,_,b=x/g,w=d.height/d.width,I=0,M=0;return b>w?(m=d.width,_=d.width*b,M=(1-w/b)/2):(m=d.height/b,_=d.height,I=(1-b/w)/2),d.width=m,d.height=_,{top:M,left:I,right:I,bottom:M}}(c,r,i),u=function(d,f,p,x){var g=d.width,m=d.height,_=1,b=Math.cos(d.rotation),w=Math.sin(d.rotation),I=d.xCenter,M=d.yCenter,D=1/f,F=1/p,N=new Array(16);return N[0]=g*b*_*D,N[1]=-m*w*D,N[2]=0,N[3]=(-.5*g*b*_+.5*m*w+I)*D,N[4]=g*w*_*F,N[5]=m*b*F,N[6]=0,N[7]=(-.5*m*b-.5*g*w*_+M)*F,N[8]=0,N[9]=0,N[10]=g*D,N[11]=0,N[12]=0,N[13]=0,N[14]=0,N[15]=1,function(A){if(A.length!==16)throw new Error("Array length must be 16 but got "+A.length);return[[A[0],A[1],A[2],A[3]],[A[4],A[5],A[6],A[7]],[A[8],A[9],A[10],A[11]],[A[12],A[13],A[14],A[15]]]}(N)}(c,o.width,o.height),h=Ct(function(){var d=w3(n),f=ms(function(g,m,_){return Ch(_,"inputResolution"),[1/_.width*g[0][0]*m.width,1/_.height*g[0][1]*m.width,g[0][3]*m.width,1/_.width*g[1][0]*m.height,1/_.height*g[1][1]*m.height,g[1][3]*m.height,0,0]}(u,o,r),[1,8]),p=s==="zero"?"constant":"nearest",x=No.transform(kr(cn(d,"float32")),f,"bilinear",p,0,[r.height,r.width]);return a!=null?function(g,m){var _=function(b,w,I,M){var D=(M-I)/255;return{scale:D,offset:I-0*D}}(0,0,m[0],m[1]);return Ct(function(){return ct(Oe(g,_.scale),_.offset)})}(x,a):x});return{imageTensor:h,padding:l,transformationMatrix:u}}function dg(n){n.reduceBoxesInLowestLayer==null&&(n.reduceBoxesInLowestLayer=!1),n.interpolatedScaleAspectRatio==null&&(n.interpolatedScaleAspectRatio=1),n.fixedAnchorSize==null&&(n.fixedAnchorSize=!1);for(var e=[],t=0;t<n.numLayers;){for(var r=[],i=[],s=[],a=[],o=t;o<n.strides.length&&n.strides[o]===n.strides[t];){var c=fg(n.minScale,n.maxScale,o,n.strides.length);if(o===0&&n.reduceBoxesInLowestLayer)s.push(1),s.push(2),s.push(.5),a.push(.1),a.push(c),a.push(c);else{for(var l=0;l<n.aspectRatios.length;++l)s.push(n.aspectRatios[l]),a.push(c);if(n.interpolatedScaleAspectRatio>0){var u=o===n.strides.length-1?1:fg(n.minScale,n.maxScale,o+1,n.strides.length);a.push(Math.sqrt(c*u)),s.push(n.interpolatedScaleAspectRatio)}}o++}for(var h=0;h<s.length;++h){var d=Math.sqrt(s[h]);r.push(a[h]/d),i.push(a[h]*d)}var f=0,p=0;if(n.featureMapHeight.length>0)f=n.featureMapHeight[t],p=n.featureMapWidth[t];else{var x=n.strides[t];f=Math.ceil(n.inputSizeHeight/x),p=Math.ceil(n.inputSizeWidth/x)}for(var g=0;g<f;++g)for(var m=0;m<p;++m)for(var _=0;_<r.length;++_){var b={xCenter:(m+n.anchorOffsetX)/p,yCenter:(g+n.anchorOffsetY)/f,width:0,height:0};n.fixedAnchorSize?(b.width=1,b.height=1):(b.width=i[_],b.height=r[_]),e.push(b)}t=o}return e}function fg(n,e,t,r){return r===1?.5*(n+e):n+(e-n)*t/(r-1)}function pg(n,e){var t=e[0],r=e[1];return[t*n[0]+r*n[1]+n[3],t*n[4]+r*n[5]+n[7]]}function fH(n,e,t,r){return Gi(this,void 0,void 0,function(){var i,s,a,o,c;return Wi(this,function(l){switch(l.label){case 0:return n.sort(function(u,h){return Math.max.apply(Math,h.score)-Math.max.apply(Math,u.score)}),i=ms(n.map(function(u){return[u.locationData.relativeBoundingBox.yMin,u.locationData.relativeBoundingBox.xMin,u.locationData.relativeBoundingBox.yMax,u.locationData.relativeBoundingBox.xMax]})),s=zn(n.map(function(u){return u.score[0]})),[4,No.nonMaxSuppressionAsync(i,s,e,t)];case 1:return[4,(a=l.sent()).array()];case 2:return o=l.sent(),c=n.filter(function(u,h){return o.indexOf(h)>-1}),dn([i,s,a]),[2,c]}})})}function pH(n,e,t){return Gi(this,void 0,void 0,function(){var r,i,s,a,o;return Wi(this,function(c){switch(c.label){case 0:return r=n[0],i=n[1],s=function(l,u,h){return Ct(function(){var d,f,p,x;h.reverseOutputOrder?(f=Sn(Nt(l,[0,h.boxCoordOffset+0],[-1,1])),d=Sn(Nt(l,[0,h.boxCoordOffset+1],[-1,1])),x=Sn(Nt(l,[0,h.boxCoordOffset+2],[-1,1])),p=Sn(Nt(l,[0,h.boxCoordOffset+3],[-1,1]))):(d=Sn(Nt(l,[0,h.boxCoordOffset+0],[-1,1])),f=Sn(Nt(l,[0,h.boxCoordOffset+1],[-1,1])),p=Sn(Nt(l,[0,h.boxCoordOffset+2],[-1,1])),x=Sn(Nt(l,[0,h.boxCoordOffset+3],[-1,1]))),f=ct(Oe(Lt(f,h.xScale),u.w),u.x),d=ct(Oe(Lt(d,h.yScale),u.h),u.y),h.applyExponentialOnBoxSize?(p=Oe(Bi(Lt(p,h.hScale)),u.h),x=Oe(Bi(Lt(x,h.wScale)),u.w)):(p=Oe(Lt(p,h.hScale),u.h),x=Oe(Lt(x,h.wScale),u.h));var g=Mt(d,Lt(p,2)),m=Mt(f,Lt(x,2)),_=ct(d,Lt(p,2)),b=ct(f,Lt(x,2)),w=On([ge(g,[h.numBoxes,1]),ge(m,[h.numBoxes,1]),ge(_,[h.numBoxes,1]),ge(b,[h.numBoxes,1])],1);if(h.numKeypoints)for(var I=0;I<h.numKeypoints;++I){var M=h.keypointCoordOffset+I*h.numValuesPerKeypoint,D=void 0,F=void 0;h.reverseOutputOrder?(D=Sn(Nt(l,[0,M],[-1,1])),F=Sn(Nt(l,[0,M+1],[-1,1]))):(F=Sn(Nt(l,[0,M],[-1,1])),D=Sn(Nt(l,[0,M+1],[-1,1])));var N=ct(Oe(Lt(D,h.xScale),u.w),u.x),A=ct(Oe(Lt(F,h.yScale),u.h),u.y);w=On([w,ge(N,[h.numBoxes,1]),ge(A,[h.numBoxes,1])],1)}return w})}(i,e,t),a=Ct(function(){var l=r;return t.sigmoidScore?(t.scoreClippingThresh!=null&&(l=Px(r,-t.scoreClippingThresh,t.scoreClippingThresh)),l=ra(l)):l}),[4,mH(s,a,t)];case 1:return o=c.sent(),dn([s,a]),[2,o]}})})}function mH(n,e,t){return Gi(this,void 0,void 0,function(){var r,i,s,a,o,c,l,u,h,d,f,p;return Wi(this,function(x){switch(x.label){case 0:return r=[],[4,n.data()];case 1:return i=x.sent(),[4,e.data()];case 2:for(s=x.sent(),a=0;a<t.numBoxes;++a)if(!(t.minScoreThresh!=null&&s[a]<t.minScoreThresh||(o=a*t.numCoords,c=gH(i[o+0],i[o+1],i[o+2],i[o+3],s[a],t.flipVertically,a),(l=c.locationData.relativeBoundingBox).width<0||l.height<0))){if(t.numKeypoints>0)for((u=c.locationData).relativeKeypoints=[],h=t.numKeypoints*t.numValuesPerKeypoint,d=0;d<h;d+=t.numValuesPerKeypoint)f=o+t.keypointCoordOffset+d,p={x:i[f+0],y:t.flipVertically?1-i[f+1]:i[f+1]},u.relativeKeypoints.push(p);r.push(c)}return[2,r]}})})}function gH(n,e,t,r,i,s,a){return{score:[i],ind:a,locationData:{relativeBoundingBox:{xMin:e,yMin:s?1-t:n,xMax:r,yMax:s?1-n:t,width:r-e,height:t-n}}}}var eu,xH={reduceBoxesInLowestLayer:!1,interpolatedScaleAspectRatio:1,featureMapHeight:[],featureMapWidth:[],numLayers:4,minScale:.1484375,maxScale:.75,inputSizeHeight:128,inputSizeWidth:128,anchorOffsetX:.5,anchorOffsetY:.5,strides:[8,16,16,16],aspectRatios:[1],fixedAnchorSize:!0},yH={reduceBoxesInLowestLayer:!1,interpolatedScaleAspectRatio:0,featureMapHeight:[],featureMapWidth:[],numLayers:1,minScale:.1484375,maxScale:.75,inputSizeHeight:192,inputSizeWidth:192,anchorOffsetX:.5,anchorOffsetY:.5,strides:[4],aspectRatios:[1],fixedAnchorSize:!0},Ah={runtime:"tfjs",modelType:"short",maxFaces:1,detectorModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/face_detection/short/1"},vH={applyExponentialOnBoxSize:!1,flipVertically:!1,ignoreClasses:[],numClasses:1,numBoxes:896,numCoords:16,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:6,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:128,yScale:128,hScale:128,wScale:128,minScoreThresh:.5},_H={applyExponentialOnBoxSize:!1,flipVertically:!1,ignoreClasses:[],numClasses:1,numBoxes:2304,numCoords:16,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:6,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:192,yScale:192,hScale:192,wScale:192,minScoreThresh:.6},bH={outputTensorSize:{width:128,height:128},keepAspectRatio:!0,outputTensorFloatRange:[-1,1],borderMode:"zero"},SH={outputTensorSize:{width:192,height:192},keepAspectRatio:!0,outputTensorFloatRange:[-1,1],borderMode:"zero"},wH=function(){function n(e,t,r){this.detectorModel=t,this.maxFaces=r,e==="full"?(this.imageToTensorConfig=SH,this.tensorsToDetectionConfig=_H,this.anchors=dg(yH)):(this.imageToTensorConfig=bH,this.tensorsToDetectionConfig=vH,this.anchors=dg(xH));var i=zn(this.anchors.map(function(c){return c.width})),s=zn(this.anchors.map(function(c){return c.height})),a=zn(this.anchors.map(function(c){return c.xCenter})),o=zn(this.anchors.map(function(c){return c.yCenter}));this.anchorTensor={x:a,y:o,w:i,h:s}}return n.prototype.dispose=function(){this.detectorModel.dispose(),dn([this.anchorTensor.x,this.anchorTensor.y,this.anchorTensor.w,this.anchorTensor.h])},n.prototype.reset=function(){},n.prototype.detectFaces=function(e,t){return t===void 0&&(t=!1),Gi(this,void 0,void 0,function(){var r,i,s,a,o,c,l,u,h,d,f;return Wi(this,function(p){switch(p.label){case 0:return e==null?(this.reset(),[2,[]]):(r=Ct(function(){var x=cn(w3(e),"float32");return t&&(x=Sn(No.flipLeftRight(kr(x,0)),[0])),x}),i=dH(r,this.imageToTensorConfig),s=i.imageTensor,a=i.transformationMatrix,o=this.detectorModel.execute(s,"Identity:0"),c=function(x){return Ct(function(){var g=function(b){return Ct(function(){return[Nt(b,[0,0,0],[1,-1,1]),Nt(b,[0,0,1],[1,-1,-1])]})}(x),m=g[0],_=g[1];return{boxes:Sn(_),logits:Sn(m)}})}(o),l=c.boxes,[4,pH([u=c.logits,l],this.anchorTensor,this.tensorsToDetectionConfig)]);case 1:return(h=p.sent()).length===0?(dn([r,s,o,u,l]),[2,h]):[4,fH(h,this.maxFaces,.3)];case 2:return d=p.sent(),f=function(x,g){x===void 0&&(x=[]);var m,_=(m=g,[].concat.apply([],m));return x.forEach(function(b){var w=b.locationData;w.relativeKeypoints.forEach(function(A){var B=pg(_,[A.x,A.y]),J=B[0],Y=B[1];A.x=J,A.y=Y});var I=w.relativeBoundingBox,M=Number.MAX_VALUE,D=Number.MAX_VALUE,F=Number.MIN_VALUE,N=Number.MIN_VALUE;[[I.xMin,I.yMin],[I.xMin+I.width,I.yMin],[I.xMin+I.width,I.yMin+I.height],[I.xMin,I.yMin+I.height]].forEach(function(A){var B=pg(_,A),J=B[0],Y=B[1];M=Math.min(M,J),F=Math.max(F,J),D=Math.min(D,Y),N=Math.max(N,Y)}),w.relativeBoundingBox={xMin:M,xMax:F,yMin:D,yMax:N,width:F-M,height:N-D}}),x}(d,a),dn([r,s,o,u,l]),[2,f]}})})},n.prototype.estimateFaces=function(e,t){return Gi(this,void 0,void 0,function(){var r,i;return Wi(this,function(s){return r=S3(e),i=!!t&&t.flipHorizontal,[2,this.detectFaces(e,i).then(function(a){return a.map(function(o){for(var c=o.locationData.relativeKeypoints.map(function(p,x){return ws(ws({},p),{x:p.x*r.width,y:p.y*r.height,name:b3[x]})}),l=o.locationData.relativeBoundingBox,u=0,h=["width","xMax","xMin"];u<h.length;u++)l[h[u]]*=r.width;for(var d=0,f=["height","yMax","yMin"];d<f.length;d++)l[f[d]]*=r.height;return{keypoints:c,box:l}})})]})})},n}();function EH(n){return Gi(this,void 0,void 0,function(){var e,t,r;return Wi(this,function(i){switch(i.label){case 0:return e=function(s){if(s==null)return ws({},Ah);var a=ws({},s);return a.modelType==null&&(a.modelType=Ah.modelType),a.maxFaces==null&&(a.maxFaces=Ah.maxFaces),a.detectorModelUrl==null&&(a.modelType==="full"?a.detectorModelUrl="https://tfhub.dev/mediapipe/tfjs-model/face_detection/full/1":a.detectorModelUrl="https://tfhub.dev/mediapipe/tfjs-model/face_detection/short/1"),a}(n),t=typeof e.detectorModelUrl=="string"&&e.detectorModelUrl.indexOf("https://tfhub.dev")>-1,[4,v3(e.detectorModelUrl,{fromTFHub:t})];case 1:return r=i.sent(),[2,new wH(e.modelType,r,e.maxFaces)]}})})}function TH(n,e){return Gi(this,void 0,void 0,function(){var t,r;return Wi(this,function(i){if(n===eu.MediaPipeFaceDetector){if(r=void 0,(t=e)!=null){if(t.runtime==="tfjs")return[2,EH(t)];if(t.runtime==="mediapipe")return[2,hH(t)];r=t.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' or 'mediapipe', but got "+r)}throw new Error(n+" is not a supported model name.")})})}function Rh(n){return n.width*n.height}function mg(n){var e=n.xCenter-n.width/2,t=e+n.width,r=n.yCenter-n.height/2;return{xMin:e,xMax:t,yMin:r,yMax:r+n.height,width:n.width,height:n.height}}function CH(n,e){var t=mg(n),r=mg(e);if(!function(a,o){return!(a.xMax<o.xMin||o.xMax<a.xMin||a.yMax<o.yMin||o.yMax<a.yMin)}(t,r))return 0;var i=Rh(function(a,o){var c=Math.max(a.xMin,o.xMin),l=Math.min(a.xMax,o.xMax),u=Math.max(a.yMin,o.yMin),h=Math.min(a.yMax,o.yMax);return{xMin:c,xMax:l,yMin:u,yMax:h,width:Math.max(l-c,0),height:Math.max(h-u,0)}}(t,r)),s=Rh(t)+Rh(r)-i;return s>0?i/s:0}function AH(n,e,t,r){var i=n.width,s=n.height,a=1,o=Math.cos(n.rotation),c=Math.sin(n.rotation),l=n.xCenter,u=n.yCenter,h=1/e,d=1/t,f=new Array(16);return f[0]=i*o*a*h,f[1]=-s*c*h,f[2]=0,f[3]=(-.5*i*o*a+.5*s*c+l)*h,f[4]=i*c*a*d,f[5]=s*o*d,f[6]=0,f[7]=(-.5*s*o-.5*i*c*a+u)*d,f[8]=0,f[9]=0,f[10]=i*h,f[11]=0,f[12]=0,f[13]=0,f[14]=0,f[15]=1,function(p){if(p.length!==16)throw new Error("Array length must be 16 but got "+p.length);return[[p[0],p[1],p[2],p[3]],[p[4],p[5],p[6],p[7]],[p[8],p[9],p[10],p[11]],[p[12],p[13],p[14],p[15]]]}(f)}function E3(n){return n instanceof mn?{height:n.shape[0],width:n.shape[1]}:{height:n.height,width:n.width}}function T3(n){return n-2*Math.PI*Math.floor((n+Math.PI)/(2*Math.PI))}function C3(n){return n instanceof mn?n:Cy(n)}function Nh(n,e){k(n.width!==0,function(){return e+" width cannot be 0."}),k(n.height!==0,function(){return e+" height cannot be 0."})}function RH(n,e){var t=function(r,i,s,a){var o=i-r,c=a-s,l=c/o;return{scale:l,offset:s-r*l}}(0,255,e[0],e[1]);return Ct(function(){return ct(Oe(n,t.scale),t.offset)})}function NH(n,e,t){var r=e.outputTensorSize,i=e.keepAspectRatio,s=e.borderMode,a=e.outputTensorFloatRange,o=E3(n),c=function(d,f){return f?{xCenter:f.xCenter*d.width,yCenter:f.yCenter*d.height,width:f.width*d.width,height:f.height*d.height,rotation:f.rotation}:{xCenter:.5*d.width,yCenter:.5*d.height,width:d.width,height:d.height,rotation:0}}(o,t),l=function(d,f,p){if(p===void 0&&(p=!1),!p)return{top:0,left:0,right:0,bottom:0};var x=f.height,g=f.width;Nh(f,"targetSize"),Nh(d,"roi");var m,_,b=x/g,w=d.height/d.width,I=0,M=0;return b>w?(m=d.width,_=d.width*b,M=(1-w/b)/2):(m=d.height/b,_=d.height,I=(1-b/w)/2),d.width=m,d.height=_,{top:M,left:I,right:I,bottom:M}}(c,r,i),u=AH(c,o.width,o.height),h=Ct(function(){var d=C3(n),f=ms(function(g,m,_){return Nh(_,"inputResolution"),[1/_.width*g[0][0]*m.width,1/_.height*g[0][1]*m.width,g[0][3]*m.width,1/_.width*g[1][0]*m.height,1/_.height*g[1][1]*m.height,g[1][3]*m.height,0,0]}(u,o,r),[1,8]),p=s==="zero"?"constant":"nearest",x=No.transform(kr(cn(d,"float32")),f,"bilinear",p,0,[r.height,r.width]);return a!=null?RH(x,a):x});return{imageTensor:h,padding:l,transformationMatrix:u}}function gg(n){return{xCenter:n.xMin+n.width/2,yCenter:n.yMin+n.height/2,width:n.width,height:n.height}}function MH(n){var e=n.relativeKeypoints;if(e.length<=1)throw new Error("2 or more keypoints required to calculate a rect.");var t=Number.MAX_VALUE,r=Number.MAX_VALUE,i=Number.MIN_VALUE,s=Number.MIN_VALUE;return e.forEach(function(a){t=Math.min(t,a.x),i=Math.max(i,a.x),r=Math.min(r,a.y),s=Math.max(s,a.y)}),{xCenter:(t+i)/2,yCenter:(r+s)/2,width:i-t,height:s-r}}function xg(n,e,t,r,i){var s=t==="rect"?function(a,o,c){var l,u=a.locationData;return l=gg(u.boundingBox),l}(n):function(a,o){var c=a.locationData;return o==="boundingbox"?gg(c.relativeBoundingBox):MH(c)}(n,e);return i&&(s.rotation=function(a,o,c){var l,u=a.locationData,h=c.rotationVectorStartKeypointIndex,d=c.rotationVectorEndKeypointIndex;l=c.rotationVectorTargetAngle?c.rotationVectorTargetAngle:Math.PI*c.rotationVectorTargetAngleDegree/180;var f=u.relativeKeypoints[h].x*o.width,p=u.relativeKeypoints[h].y*o.height,x=u.relativeKeypoints[d].x*o.width,g=u.relativeKeypoints[d].y*o.height;return T3(l-Math.atan2(-(g-p),x-f))}(n,r,i)),s}function IH(n,e,t){for(var r=0;r<e.length;++r){var i=e[r],s=t[n[r]];s.x=i.x,s.y=i.y}}function DH(n,e,t,r){if(typeof e=="string"){if(e==="copy")for(var i=0;i<t.length;++i)r[n[i]].z=t[i].z}else{var s=function(a,o){for(var c=0,l=0;l<o.length;++l)c+=a[o[l]].z;return c/o.length}(r,e);for(i=0;i<n.length;++i)r[n[i]].z=s}}function PH(n,e){for(var t=function(o){var c=[].concat.apply([],o.map(function(f){return f.indexesMapping}));if(c.length===0)throw new Error("There should be at least one landmark in indexes mapping");var l=c[0],u=c[0],h=new Set(c);h.forEach(function(f){l=Math.min(l,f),u=Math.max(u,f)});var d=h.size;if(l!==0)throw new Error("Indexes are expected to start with 0 instead of "+l);if(u+1!==d)throw new Error("Indexes should have no gaps but "+(u-d+1)+" indexes are missing");return d}(e),r=new Array(t).fill(null).map(Object),i=0;i<n.length;++i){var s=n[i],a=e[i];if(s.length!==a.indexesMapping.length)throw new Error("There are "+s.length+" refinement landmarks while mapping has "+a.indexesMapping.length);IH(a.indexesMapping,s,r),DH(a.indexesMapping,a.zRefinement,s,r)}return r}function OH(n,e){return n.map(function(t){var r=si(si({},t),{x:t.x*e.width,y:t.y*e.height});return t.z!=null&&(r.z=t.z*e.width),r})}function $H(n,e){return n==="none"?e:function(t){return 1/(1+Math.exp(-t))}(e)}function Bs(n,e,t,r){return Li(this,void 0,void 0,function(){var i,s,a,o,c,l,u,h;return ki(this,function(d){switch(d.label){case 0:return t=t||e.flipHorizontally||!1,r=r||e.flipVertically||!1,i=n.size,s=i/e.numLandmarks,[4,n.data()];case 1:for(a=d.sent(),o=[],c=0;c<e.numLandmarks;++c)l=c*s,(h={x:0,y:0}).x=t?e.inputImageWidth-a[l]:a[l],s>1&&(h.y=r?e.inputImageHeight-a[l+1]:a[l+1]),s>2&&(h.z=a[l+2]),s>3&&(h.score=$H(e.visibilityActivation,a[l+3])),o.push(h);for(u=0;u<o.length;++u)(h=o[u]).x=h.x/e.inputImageWidth,h.y=h.y/e.inputImageHeight,h.z=h.z/e.inputImageWidth/(e.normalizeZ||1);return[2,o]}})})}function yg(n,e,t){var r=n.width,i=n.height,s=n.rotation;if(t.rotation==null&&t.rotationDegree==null||(s=function(l,u){return u.rotation!=null?l+=u.rotation:u.rotationDegree!=null&&(l+=Math.PI*u.rotationDegree/180),T3(l)}(s,t)),s===0)n.xCenter=n.xCenter+r*t.shiftX,n.yCenter=n.yCenter+i*t.shiftY;else{var a=(e.width*r*t.shiftX*Math.cos(s)-e.height*i*t.shiftY*Math.sin(s))/e.width,o=(e.width*r*t.shiftX*Math.sin(s)+e.height*i*t.shiftY*Math.cos(s))/e.height;n.xCenter=n.xCenter+a,n.yCenter=n.yCenter+o}{var c=Math.max(r*e.width,i*e.height);r=c/e.width,i=c/e.height}return n.width=r*t.scaleX,n.height=i*t.scaleY,n}(eu||(eu={})).MediaPipeFaceDetector="MediaPipeFaceDetector";var Mh={runtime:"tfjs",maxFaces:1,refineLandmarks:!1,landmarkModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/face_landmarks_detection/face_mesh/1"},Ih={flipHorizontal:!1,staticImageMode:!1},vg={shiftX:0,shiftY:0,scaleX:1.5,scaleY:1.5,squareLong:!0},LH={outputTensorSize:{width:192,height:192},outputTensorFloatRange:[0,1],borderMode:"replicate"},_g={numLandmarks:468,inputImageWidth:192,inputImageHeight:192,visibilityActivation:"none",flipHorizontally:!1,flipVertically:!1},kH={numLandmarks:80,inputImageWidth:192,inputImageHeight:192,visibilityActivation:"none",flipHorizontally:!1,flipVertically:!1},bg={numLandmarks:71,inputImageWidth:192,inputImageHeight:192,visibilityActivation:"none",flipHorizontally:!1,flipVertically:!1},Sg={numLandmarks:5,inputImageWidth:192,inputImageHeight:192,visibilityActivation:"none",flipHorizontally:!1,flipVertically:!1},FH={indexesMapping:Array.from(Array(468).keys()),zRefinement:"copy"},UH={indexesMapping:[61,146,91,181,84,17,314,405,321,375,291,185,40,39,37,0,267,269,270,409,78,95,88,178,87,14,317,402,318,324,308,191,80,81,82,13,312,311,310,415,76,77,90,180,85,16,315,404,320,307,306,184,74,73,72,11,302,303,304,408,62,96,89,179,86,15,316,403,319,325,292,183,42,41,38,12,268,271,272,407],zRefinement:"none"},BH={indexesMapping:[33,7,163,144,145,153,154,155,133,246,161,160,159,158,157,173,130,25,110,24,23,22,26,112,243,247,30,29,27,28,56,190,226,31,228,229,230,231,232,233,244,113,225,224,223,222,221,189,35,124,46,53,52,65,143,111,117,118,119,120,121,128,245,156,70,63,105,66,107,55,193],zRefinement:"none"},VH={indexesMapping:[263,249,390,373,374,380,381,382,362,466,388,387,386,385,384,398,359,255,339,254,253,252,256,341,463,467,260,259,257,258,286,414,446,261,448,449,450,451,452,453,464,342,445,444,443,442,441,413,265,353,276,283,282,295,372,340,346,347,348,349,350,357,465,383,300,293,334,296,336,285,417],zRefinement:"none"},zH={indexesMapping:[468,469,470,471,472],zRefinement:[33,7,163,144,145,153,154,155,133,246,161,160,159,158,157,173]},GH={indexesMapping:[473,474,475,476,477],zRefinement:[263,249,390,373,374,380,381,382,362,466,388,387,386,385,384,398]},tu,WH=function(){function n(e,t,r,i){this.detector=e,this.landmarkModel=t,this.maxFaces=r,this.withAttention=i,this.prevFaceRectsFromLandmarks=null}return n.prototype.estimateFaces=function(e,t){return Li(this,void 0,void 0,function(){var r,i,s,a,o,c,l,u,h,d,f,p,x,g=this;return ki(this,function(m){switch(m.label){case 0:return r=function(w){if(w==null)return si({},Ih);var I=si({},w);return I.flipHorizontal==null&&(I.flipHorizontal=Ih.flipHorizontal),I.staticImageMode==null&&(I.staticImageMode=Ih.staticImageMode),I}(t),e==null?(this.reset(),[2,[]]):(i=E3(e),s=Ct(function(){var w=cn(C3(e),"float32");return r.flipHorizontal&&(w=Sn(No.flipLeftRight(kr(w,0)),[0])),w}),a=this.prevFaceRectsFromLandmarks,r.staticImageMode||a==null||a.length<this.maxFaces?[4,this.detector.detectFaces(s,!1)]:[3,2]);case 1:return(c=m.sent()).length===0?(this.reset(),s.dispose(),[2,[]]):(o=c.map(function(w){return g.faceDetectionFrontDetectionToRoi(w,i)}),[3,3]);case 2:o=[],m.label=3;case 3:return _=.5,b=[],[o,a||[]].forEach(function(w){return w.forEach(function(I){(b=b.filter(function(M){return CH(I,M)<=_})).push(I)})}),l=b,[4,Promise.all(l.map(function(w){return g.faceLandmark(w,s)}))];case 4:for(u=m.sent(),h=[],this.prevFaceRectsFromLandmarks=[],d=0;d<u.length;++d)(f=u[d])!=null&&(this.prevFaceRectsFromLandmarks.push(this.faceLandmarksToRoi(f,i)),(p=OH(f,i))!=null&&p.forEach(function(w,I){var M=_3.get(I);M!=null&&(w.name=M)}),x=Md(p),h.push({keypoints:p,box:x.locationData.relativeBoundingBox}));return s.dispose(),[2,h]}var _,b})})},n.prototype.dispose=function(){this.detector.dispose(),this.landmarkModel.dispose()},n.prototype.reset=function(){this.detector.reset(),this.prevFaceRectsFromLandmarks=null},n.prototype.faceDetectionFrontDetectionToRoi=function(e,t){return yg(xg(e,"boundingbox","normRect",t,{rotationVectorStartKeypointIndex:0,rotationVectorEndKeypointIndex:1,rotationVectorTargetAngleDegree:0}),t,vg)},n.prototype.faceLandmark=function(e,t){return Li(this,void 0,void 0,function(){var r,i,s,a,o,c,l;return ki(this,function(u){switch(u.label){case 0:return r=NH(t,LH,e).imageTensor,i=["output_faceflag"].concat(this.withAttention?["output_mesh_identity","output_lips","Identity_6:0","Identity_1:0","Identity_2:0","Identity_5:0"]:["output_mesh"]),s=this.landmarkModel.execute(r,i),a=s[0],o=s.slice(1),[4,a.data()];case 1:return u.sent()[0]<.5?(dn(s),dn(r),[2,null]):this.withAttention?[4,this.tensorsToFaceLandmarksWithAttention(o)]:[3,3];case 2:return c=u.sent(),[3,5];case 3:return[4,this.tensorsToFaceLandmarks(o)];case 4:c=u.sent(),u.label=5;case 5:return l=function(h,d,f){f===void 0&&(f={ignoreRotation:!1});for(var p=[],x=0,g=h;x<g.length;x++){var m=g[x],_=m.x-.5,b=m.y-.5,w=f.ignoreRotation?0:d.rotation,I=Math.cos(w)*_-Math.sin(w)*b,M=Math.sin(w)*_+Math.cos(w)*b;I=I*d.width+d.xCenter,M=M*d.height+d.yCenter;var D=m.z*d.width,F=si({},m);F.x=I,F.y=M,F.z=D,p.push(F)}return p}(c,e),dn(s),dn(r),[2,l]}})})},n.prototype.tensorsToFaceLandmarks=function(e){return Li(this,void 0,void 0,function(){return ki(this,function(t){return[2,Bs(e[0],_g)]})})},n.prototype.tensorsToFaceLandmarksWithAttention=function(e){return Li(this,void 0,void 0,function(){var t,r,i,s,a,o;return ki(this,function(c){switch(c.label){case 0:return[4,Bs(e[0],_g)];case 1:return t=c.sent(),[4,Bs(e[1],kH)];case 2:return r=c.sent(),[4,Bs(e[3],bg)];case 3:return i=c.sent(),[4,Bs(e[5],bg)];case 4:return s=c.sent(),[4,Bs(e[4],Sg)];case 5:return a=c.sent(),[4,Bs(e[2],Sg)];case 6:return o=c.sent(),[2,PH([t,r,i,s,a,o],[FH,UH,BH,VH,zH,GH])]}})})},n.prototype.faceLandmarksToRoi=function(e,t){return yg(xg(Md(e),"boundingbox","normRect",t,{rotationVectorStartKeypointIndex:33,rotationVectorEndKeypointIndex:263,rotationVectorTargetAngleDegree:0}),t,vg)},n}();function HH(n){return Li(this,void 0,void 0,function(){var e,t,r,i;return ki(this,function(s){switch(s.label){case 0:return e=function(a){if(a==null)return si({},Mh);var o=si({},a);return o.runtime="tfjs",o.maxFaces==null&&(o.maxFaces=Mh.maxFaces),o.refineLandmarks==null&&(o.refineLandmarks=Mh.refineLandmarks),o.landmarkModelUrl==null&&(o.landmarkModelUrl=o.refineLandmarks?"https://tfhub.dev/mediapipe/tfjs-model/face_landmarks_detection/attention_mesh/1":"https://tfhub.dev/mediapipe/tfjs-model/face_landmarks_detection/face_mesh/1"),o}(n),t=typeof e.landmarkModelUrl=="string"&&e.landmarkModelUrl.indexOf("https://tfhub.dev")>-1,[4,v3(e.landmarkModelUrl,{fromTFHub:t})];case 1:return r=s.sent(),[4,TH(eu.MediaPipeFaceDetector,{modelType:"short",maxFaces:e.maxFaces,detectorModelUrl:e.detectorModelUrl,runtime:e.runtime})];case 2:return i=s.sent(),[2,new WH(i,r,e.maxFaces,e.refineLandmarks)]}})})}function XH(n,e){return Li(this,void 0,void 0,function(){var t,r;return ki(this,function(i){if(n===tu.MediaPipeFaceMesh){if(r=void 0,(t=e)!=null){if(t.runtime==="tfjs")return[2,HH(t)];if(t.runtime==="mediapipe")return[2,cH(t)];r=t.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' or 'mediapipe', but got "+r)}throw new Error(n+" is not a supported model name.")})})}(function(n){n.MediaPipeFaceMesh="MediaPipeFaceMesh"})(tu||(tu={}));let wg=["hige","ribbon","rabbit","cat02","cat03","bear01"],A3={},jH=document.querySelectorAll(".button"),qH=document.querySelectorAll(".position-controllerButton"),lc="rabbit";const nu=960,ru=540,KH=document.querySelector("#canvas"),Al=document.querySelector("#video");let Fr,R3,ia,Eg,Rl=0,Nl=0,Nu,Id,ac;const N3={hige:{scale:30,basePoint:164,xFix:5,yFix:-20},rabbit:{scale:280,basePoint:1,xFix:10,yFix:-30},ribbon:{scale:70,basePoint:0,xFix:5,yFix:-5},cat02:{scale:180,basePoint:1,xFix:5,yFix:-20},cat03:{scale:190,basePoint:1,xFix:0,yFix:0},bear01:{scale:180,basePoint:1,xFix:0,yFix:0}};function YH(){ac=new YE({canvas:KH,alpha:!0}),ac.setPixelRatio(window.devicePixelRatio),ac.setSize(nu,ru),ac.setClearColor(0,0),Nu=new ZE;const n=45;Id=new Lr(n,nu/ru,1,1e3),Id.position.set(0,0,680),M3()}function ZH(){jH.forEach(n=>{n.addEventListener("click",e=>{Rl=0,Nl=0,lc=e.target.dataset.deco||e.target.parentElement.dataset.deco,QH()})}),qH.forEach(n=>{n.addEventListener("click",e=>{const t=e.target.dataset.position||e.target.parentElement.dataset.position;t==="top"?Nl+=5:t==="bottom"?Nl-=5:t==="right"?Rl-=5:t==="left"&&(Rl+=5)})})}function JH(){let n=0;wg.forEach(e=>{const t=new Image;t.onload=()=>{A3[e]=t.width/t.height,n++,n===wg.length&&(YH(),I3())},t.src=`../images/${e}.png`})}function M3(){const n=N3[lc],e=A3[lc],t=new Cc(e,1),i=new tT().load(`/images/${lc}.png`,function(a){a.colorSpace=Jr}),s=new $d({map:i,side:di,transparent:!0});Fr=new mi(t,s),Fr.scale.set(n.scale,n.scale,0),Nu.add(Fr)}function QH(){Fr&&(Nu.remove(Fr),Fr.geometry.dispose(),Fr.material.dispose(),Fr=null),M3()}function eX(){if(ia&&ia.length>0){const n=tX();Fr.quaternion.copy(n);const e=N3[lc],t=D3(ia[0].keypoints),r=t[e.basePoint],i=new ue(r.x+Rl+e.xFix,r.y+Nl+e.yFix,r.z-150),s=t[1],a=t[127],o=t[356],c=a.x-o.x,l=a.y-o.y,u=Math.atan2(l,c),h=Math.sqrt(Math.pow(s.x-a.x,2)+Math.pow(s.y-a.y,2)),d=Math.sqrt(Math.pow(s.x-o.x,2)+Math.pow(s.y-o.y,2)),x=(h+d)/200;Fr.scale.set(e.scale*x,-e.scale*x,0);const g=e.scale*x;i.y+=g/2;const m=g/2*Math.sin(u);i.x+=m,i.y-=m*Math.sin(u),Fr.position.copy(i),Fr.rotation.z=u}}function I3(){ac.render(Nu,Id),iX(),eX(),requestAnimationFrame(I3)}function tX(){if(ia&&ia.length>0){const n=D3(ia[0].keypoints),e=n[1],t=n[279],r=n[49],i={x:(t.x+r.x)/2,y:(t.y+r.y)/2,z:(t.z+r.z)/2},s={x:i.x,y:i.y-10,z:i.z};Eg=new ue(e.x,e.y,e.z).sub(new ue(s.x,s.y,s.z)).normalize();const a=new wo;return a.setFromUnitVectors(new ue(0,0,1),Eg),a}}async function nX(){const n=await navigator.mediaDevices.getUserMedia({audio:!1,video:{width:nu,height:ru}});return Al.srcObject=n,new Promise(e=>{Al.onloadedmetadata=()=>{e(Al)}})}async function rX(){const n=tu.MediaPipeFaceMesh;R3=await XH(n,{runtime:"mediapipe",solutionPath:"https://cdn.jsdelivr.net/npm/@mediapipe/face_mesh"})}async function iX(){const n={flipHorizontal:!1};ia=await R3.estimateFaces(Al,n)}function D3(n){return n.map(t=>({x:t.x-nu/2,y:-t.y+ru/2,z:(t.z/100*-1+1)*100}))}async function sX(){ZH(),JH(),await nX(),await rX()}sX();
